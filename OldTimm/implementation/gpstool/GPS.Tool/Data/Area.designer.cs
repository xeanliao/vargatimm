#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GPS.Tool.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="test")]
	public partial class AreaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBlockGroupBoxMapping(BlockGroupBoxMapping instance);
    partial void UpdateBlockGroupBoxMapping(BlockGroupBoxMapping instance);
    partial void DeleteBlockGroupBoxMapping(BlockGroupBoxMapping instance);
    partial void InsertVotingDistrictArea(VotingDistrictArea instance);
    partial void UpdateVotingDistrictArea(VotingDistrictArea instance);
    partial void DeleteVotingDistrictArea(VotingDistrictArea instance);
    partial void InsertBlockGroupCoordinate(BlockGroupCoordinate instance);
    partial void UpdateBlockGroupCoordinate(BlockGroupCoordinate instance);
    partial void DeleteBlockGroupCoordinate(BlockGroupCoordinate instance);
    partial void InsertBlockGroupMapping(BlockGroupMapping instance);
    partial void UpdateBlockGroupMapping(BlockGroupMapping instance);
    partial void DeleteBlockGroupMapping(BlockGroupMapping instance);
    partial void InsertCountyAreaBoxMapping(CountyAreaBoxMapping instance);
    partial void UpdateCountyAreaBoxMapping(CountyAreaBoxMapping instance);
    partial void DeleteCountyAreaBoxMapping(CountyAreaBoxMapping instance);
    partial void InsertCountyAreaCoordinate(CountyAreaCoordinate instance);
    partial void UpdateCountyAreaCoordinate(CountyAreaCoordinate instance);
    partial void DeleteCountyAreaCoordinate(CountyAreaCoordinate instance);
    partial void InsertCountyArea(CountyArea instance);
    partial void UpdateCountyArea(CountyArea instance);
    partial void DeleteCountyArea(CountyArea instance);
    partial void InsertCounty(County instance);
    partial void UpdateCounty(County instance);
    partial void DeleteCounty(County instance);
    partial void InsertElementarySchoolAreaBoxMapping(ElementarySchoolAreaBoxMapping instance);
    partial void UpdateElementarySchoolAreaBoxMapping(ElementarySchoolAreaBoxMapping instance);
    partial void DeleteElementarySchoolAreaBoxMapping(ElementarySchoolAreaBoxMapping instance);
    partial void InsertElementarySchoolAreaCoordinate(ElementarySchoolAreaCoordinate instance);
    partial void UpdateElementarySchoolAreaCoordinate(ElementarySchoolAreaCoordinate instance);
    partial void DeleteElementarySchoolAreaCoordinate(ElementarySchoolAreaCoordinate instance);
    partial void InsertElementarySchoolArea(ElementarySchoolArea instance);
    partial void UpdateElementarySchoolArea(ElementarySchoolArea instance);
    partial void DeleteElementarySchoolArea(ElementarySchoolArea instance);
    partial void InsertFiveZipAreaCoordinate(FiveZipAreaCoordinate instance);
    partial void UpdateFiveZipAreaCoordinate(FiveZipAreaCoordinate instance);
    partial void DeleteFiveZipAreaCoordinate(FiveZipAreaCoordinate instance);
    partial void InsertFiveZipBoxMapping(FiveZipBoxMapping instance);
    partial void UpdateFiveZipBoxMapping(FiveZipBoxMapping instance);
    partial void DeleteFiveZipBoxMapping(FiveZipBoxMapping instance);
    partial void InsertLowerHouseAreaBoxMapping(LowerHouseAreaBoxMapping instance);
    partial void UpdateLowerHouseAreaBoxMapping(LowerHouseAreaBoxMapping instance);
    partial void DeleteLowerHouseAreaBoxMapping(LowerHouseAreaBoxMapping instance);
    partial void InsertLowerHouseAreaCoordinate(LowerHouseAreaCoordinate instance);
    partial void UpdateLowerHouseAreaCoordinate(LowerHouseAreaCoordinate instance);
    partial void DeleteLowerHouseAreaCoordinate(LowerHouseAreaCoordinate instance);
    partial void InsertLowerHouseArea(LowerHouseArea instance);
    partial void UpdateLowerHouseArea(LowerHouseArea instance);
    partial void DeleteLowerHouseArea(LowerHouseArea instance);
    partial void InsertMetropolitanCoreAreaBlockGroupMapping(MetropolitanCoreAreaBlockGroupMapping instance);
    partial void UpdateMetropolitanCoreAreaBlockGroupMapping(MetropolitanCoreAreaBlockGroupMapping instance);
    partial void DeleteMetropolitanCoreAreaBlockGroupMapping(MetropolitanCoreAreaBlockGroupMapping instance);
    partial void InsertMetropolitanCoreAreaBoxMapping(MetropolitanCoreAreaBoxMapping instance);
    partial void UpdateMetropolitanCoreAreaBoxMapping(MetropolitanCoreAreaBoxMapping instance);
    partial void DeleteMetropolitanCoreAreaBoxMapping(MetropolitanCoreAreaBoxMapping instance);
    partial void InsertMetropolitanCoreAreaCoordinate(MetropolitanCoreAreaCoordinate instance);
    partial void UpdateMetropolitanCoreAreaCoordinate(MetropolitanCoreAreaCoordinate instance);
    partial void DeleteMetropolitanCoreAreaCoordinate(MetropolitanCoreAreaCoordinate instance);
    partial void InsertMetropolitanCoreArea(MetropolitanCoreArea instance);
    partial void UpdateMetropolitanCoreArea(MetropolitanCoreArea instance);
    partial void DeleteMetropolitanCoreArea(MetropolitanCoreArea instance);
    partial void InsertMetropolitanCoreAreaZipCodeMapping(MetropolitanCoreAreaZipCodeMapping instance);
    partial void UpdateMetropolitanCoreAreaZipCodeMapping(MetropolitanCoreAreaZipCodeMapping instance);
    partial void DeleteMetropolitanCoreAreaZipCodeMapping(MetropolitanCoreAreaZipCodeMapping instance);
    partial void InsertSecondarySchoolAreaBoxMapping(SecondarySchoolAreaBoxMapping instance);
    partial void UpdateSecondarySchoolAreaBoxMapping(SecondarySchoolAreaBoxMapping instance);
    partial void DeleteSecondarySchoolAreaBoxMapping(SecondarySchoolAreaBoxMapping instance);
    partial void InsertSecondarySchoolAreaCoordinate(SecondarySchoolAreaCoordinate instance);
    partial void UpdateSecondarySchoolAreaCoordinate(SecondarySchoolAreaCoordinate instance);
    partial void DeleteSecondarySchoolAreaCoordinate(SecondarySchoolAreaCoordinate instance);
    partial void InsertSecondarySchoolArea(SecondarySchoolArea instance);
    partial void UpdateSecondarySchoolArea(SecondarySchoolArea instance);
    partial void DeleteSecondarySchoolArea(SecondarySchoolArea instance);
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertThreeZipAreaCoordinate(ThreeZipAreaCoordinate instance);
    partial void UpdateThreeZipAreaCoordinate(ThreeZipAreaCoordinate instance);
    partial void DeleteThreeZipAreaCoordinate(ThreeZipAreaCoordinate instance);
    partial void InsertThreeZipArea(ThreeZipArea instance);
    partial void UpdateThreeZipArea(ThreeZipArea instance);
    partial void DeleteThreeZipArea(ThreeZipArea instance);
    partial void InsertThreeZipBoxMapping(ThreeZipBoxMapping instance);
    partial void UpdateThreeZipBoxMapping(ThreeZipBoxMapping instance);
    partial void DeleteThreeZipBoxMapping(ThreeZipBoxMapping instance);
    partial void InsertTractBoxMapping(TractBoxMapping instance);
    partial void UpdateTractBoxMapping(TractBoxMapping instance);
    partial void DeleteTractBoxMapping(TractBoxMapping instance);
    partial void InsertTractCoordinate(TractCoordinate instance);
    partial void UpdateTractCoordinate(TractCoordinate instance);
    partial void DeleteTractCoordinate(TractCoordinate instance);
    partial void InsertUnifiedSchoolAreaBoxMapping(UnifiedSchoolAreaBoxMapping instance);
    partial void UpdateUnifiedSchoolAreaBoxMapping(UnifiedSchoolAreaBoxMapping instance);
    partial void DeleteUnifiedSchoolAreaBoxMapping(UnifiedSchoolAreaBoxMapping instance);
    partial void InsertUnifiedSchoolAreaCoordinate(UnifiedSchoolAreaCoordinate instance);
    partial void UpdateUnifiedSchoolAreaCoordinate(UnifiedSchoolAreaCoordinate instance);
    partial void DeleteUnifiedSchoolAreaCoordinate(UnifiedSchoolAreaCoordinate instance);
    partial void InsertUnifiedSchoolArea(UnifiedSchoolArea instance);
    partial void UpdateUnifiedSchoolArea(UnifiedSchoolArea instance);
    partial void DeleteUnifiedSchoolArea(UnifiedSchoolArea instance);
    partial void InsertUpperSenateAreaBoxMapping(UpperSenateAreaBoxMapping instance);
    partial void UpdateUpperSenateAreaBoxMapping(UpperSenateAreaBoxMapping instance);
    partial void DeleteUpperSenateAreaBoxMapping(UpperSenateAreaBoxMapping instance);
    partial void InsertUpperSenateAreaCoordinate(UpperSenateAreaCoordinate instance);
    partial void UpdateUpperSenateAreaCoordinate(UpperSenateAreaCoordinate instance);
    partial void DeleteUpperSenateAreaCoordinate(UpperSenateAreaCoordinate instance);
    partial void InsertUpperSenateArea(UpperSenateArea instance);
    partial void UpdateUpperSenateArea(UpperSenateArea instance);
    partial void DeleteUpperSenateArea(UpperSenateArea instance);
    partial void InsertUrbanAreaBlockGroupMapping(UrbanAreaBlockGroupMapping instance);
    partial void UpdateUrbanAreaBlockGroupMapping(UrbanAreaBlockGroupMapping instance);
    partial void DeleteUrbanAreaBlockGroupMapping(UrbanAreaBlockGroupMapping instance);
    partial void InsertUrbanAreaBoxMapping(UrbanAreaBoxMapping instance);
    partial void UpdateUrbanAreaBoxMapping(UrbanAreaBoxMapping instance);
    partial void DeleteUrbanAreaBoxMapping(UrbanAreaBoxMapping instance);
    partial void InsertUrbanAreaCoordinate(UrbanAreaCoordinate instance);
    partial void UpdateUrbanAreaCoordinate(UrbanAreaCoordinate instance);
    partial void DeleteUrbanAreaCoordinate(UrbanAreaCoordinate instance);
    partial void InsertUrbanArea(UrbanArea instance);
    partial void UpdateUrbanArea(UrbanArea instance);
    partial void DeleteUrbanArea(UrbanArea instance);
    partial void InsertUrbanAreaZipCodeMapping(UrbanAreaZipCodeMapping instance);
    partial void UpdateUrbanAreaZipCodeMapping(UrbanAreaZipCodeMapping instance);
    partial void DeleteUrbanAreaZipCodeMapping(UrbanAreaZipCodeMapping instance);
    partial void InsertVotingDistrictAreaBoxMapping(VotingDistrictAreaBoxMapping instance);
    partial void UpdateVotingDistrictAreaBoxMapping(VotingDistrictAreaBoxMapping instance);
    partial void DeleteVotingDistrictAreaBoxMapping(VotingDistrictAreaBoxMapping instance);
    partial void InsertVotingDistrictAreaCoordinate(VotingDistrictAreaCoordinate instance);
    partial void UpdateVotingDistrictAreaCoordinate(VotingDistrictAreaCoordinate instance);
    partial void DeleteVotingDistrictAreaCoordinate(VotingDistrictAreaCoordinate instance);
    partial void InsertTract(Tract instance);
    partial void UpdateTract(Tract instance);
    partial void DeleteTract(Tract instance);
    partial void InsertBlockGroup(BlockGroup instance);
    partial void UpdateBlockGroup(BlockGroup instance);
    partial void DeleteBlockGroup(BlockGroup instance);
    partial void InsertFiveZipArea(FiveZipArea instance);
    partial void UpdateFiveZipArea(FiveZipArea instance);
    partial void DeleteFiveZipArea(FiveZipArea instance);
    #endregion
		
		public AreaDataContext() : 
				base(global::GPS.Tool.Properties.Settings.Default.testConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AreaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AreaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AreaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AreaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BlockGroupBoxMapping> BlockGroupBoxMappings
		{
			get
			{
				return this.GetTable<BlockGroupBoxMapping>();
			}
		}
		
		public System.Data.Linq.Table<VotingDistrictArea> VotingDistrictAreas
		{
			get
			{
				return this.GetTable<VotingDistrictArea>();
			}
		}
		
		public System.Data.Linq.Table<BlockGroupCoordinate> BlockGroupCoordinates
		{
			get
			{
				return this.GetTable<BlockGroupCoordinate>();
			}
		}
		
		public System.Data.Linq.Table<BlockGroupMapping> BlockGroupMappings
		{
			get
			{
				return this.GetTable<BlockGroupMapping>();
			}
		}
		
		public System.Data.Linq.Table<CountyAreaBoxMapping> CountyAreaBoxMappings
		{
			get
			{
				return this.GetTable<CountyAreaBoxMapping>();
			}
		}
		
		public System.Data.Linq.Table<CountyAreaCoordinate> CountyAreaCoordinates
		{
			get
			{
				return this.GetTable<CountyAreaCoordinate>();
			}
		}
		
		public System.Data.Linq.Table<CountyArea> CountyAreas
		{
			get
			{
				return this.GetTable<CountyArea>();
			}
		}
		
		public System.Data.Linq.Table<County> Counties
		{
			get
			{
				return this.GetTable<County>();
			}
		}
		
		public System.Data.Linq.Table<ElementarySchoolAreaBoxMapping> ElementarySchoolAreaBoxMappings
		{
			get
			{
				return this.GetTable<ElementarySchoolAreaBoxMapping>();
			}
		}
		
		public System.Data.Linq.Table<ElementarySchoolAreaCoordinate> ElementarySchoolAreaCoordinates
		{
			get
			{
				return this.GetTable<ElementarySchoolAreaCoordinate>();
			}
		}
		
		public System.Data.Linq.Table<ElementarySchoolArea> ElementarySchoolAreas
		{
			get
			{
				return this.GetTable<ElementarySchoolArea>();
			}
		}
		
		public System.Data.Linq.Table<FiveZipAreaCoordinate> FiveZipAreaCoordinates
		{
			get
			{
				return this.GetTable<FiveZipAreaCoordinate>();
			}
		}
		
		public System.Data.Linq.Table<FiveZipBoxMapping> FiveZipBoxMappings
		{
			get
			{
				return this.GetTable<FiveZipBoxMapping>();
			}
		}
		
		public System.Data.Linq.Table<LowerHouseAreaBoxMapping> LowerHouseAreaBoxMappings
		{
			get
			{
				return this.GetTable<LowerHouseAreaBoxMapping>();
			}
		}
		
		public System.Data.Linq.Table<LowerHouseAreaCoordinate> LowerHouseAreaCoordinates
		{
			get
			{
				return this.GetTable<LowerHouseAreaCoordinate>();
			}
		}
		
		public System.Data.Linq.Table<LowerHouseArea> LowerHouseAreas
		{
			get
			{
				return this.GetTable<LowerHouseArea>();
			}
		}
		
		public System.Data.Linq.Table<MetropolitanCoreAreaBlockGroupMapping> MetropolitanCoreAreaBlockGroupMappings
		{
			get
			{
				return this.GetTable<MetropolitanCoreAreaBlockGroupMapping>();
			}
		}
		
		public System.Data.Linq.Table<MetropolitanCoreAreaBoxMapping> MetropolitanCoreAreaBoxMappings
		{
			get
			{
				return this.GetTable<MetropolitanCoreAreaBoxMapping>();
			}
		}
		
		public System.Data.Linq.Table<MetropolitanCoreAreaCoordinate> MetropolitanCoreAreaCoordinates
		{
			get
			{
				return this.GetTable<MetropolitanCoreAreaCoordinate>();
			}
		}
		
		public System.Data.Linq.Table<MetropolitanCoreArea> MetropolitanCoreAreas
		{
			get
			{
				return this.GetTable<MetropolitanCoreArea>();
			}
		}
		
		public System.Data.Linq.Table<MetropolitanCoreAreaZipCodeMapping> MetropolitanCoreAreaZipCodeMappings
		{
			get
			{
				return this.GetTable<MetropolitanCoreAreaZipCodeMapping>();
			}
		}
		
		public System.Data.Linq.Table<SecondarySchoolAreaBoxMapping> SecondarySchoolAreaBoxMappings
		{
			get
			{
				return this.GetTable<SecondarySchoolAreaBoxMapping>();
			}
		}
		
		public System.Data.Linq.Table<SecondarySchoolAreaCoordinate> SecondarySchoolAreaCoordinates
		{
			get
			{
				return this.GetTable<SecondarySchoolAreaCoordinate>();
			}
		}
		
		public System.Data.Linq.Table<SecondarySchoolArea> SecondarySchoolAreas
		{
			get
			{
				return this.GetTable<SecondarySchoolArea>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<ThreeZipAreaCoordinate> ThreeZipAreaCoordinates
		{
			get
			{
				return this.GetTable<ThreeZipAreaCoordinate>();
			}
		}
		
		public System.Data.Linq.Table<ThreeZipArea> ThreeZipAreas
		{
			get
			{
				return this.GetTable<ThreeZipArea>();
			}
		}
		
		public System.Data.Linq.Table<ThreeZipBoxMapping> ThreeZipBoxMappings
		{
			get
			{
				return this.GetTable<ThreeZipBoxMapping>();
			}
		}
		
		public System.Data.Linq.Table<TractBoxMapping> TractBoxMappings
		{
			get
			{
				return this.GetTable<TractBoxMapping>();
			}
		}
		
		public System.Data.Linq.Table<TractCoordinate> TractCoordinates
		{
			get
			{
				return this.GetTable<TractCoordinate>();
			}
		}
		
		public System.Data.Linq.Table<UnifiedSchoolAreaBoxMapping> UnifiedSchoolAreaBoxMappings
		{
			get
			{
				return this.GetTable<UnifiedSchoolAreaBoxMapping>();
			}
		}
		
		public System.Data.Linq.Table<UnifiedSchoolAreaCoordinate> UnifiedSchoolAreaCoordinates
		{
			get
			{
				return this.GetTable<UnifiedSchoolAreaCoordinate>();
			}
		}
		
		public System.Data.Linq.Table<UnifiedSchoolArea> UnifiedSchoolAreas
		{
			get
			{
				return this.GetTable<UnifiedSchoolArea>();
			}
		}
		
		public System.Data.Linq.Table<UpperSenateAreaBoxMapping> UpperSenateAreaBoxMappings
		{
			get
			{
				return this.GetTable<UpperSenateAreaBoxMapping>();
			}
		}
		
		public System.Data.Linq.Table<UpperSenateAreaCoordinate> UpperSenateAreaCoordinates
		{
			get
			{
				return this.GetTable<UpperSenateAreaCoordinate>();
			}
		}
		
		public System.Data.Linq.Table<UpperSenateArea> UpperSenateAreas
		{
			get
			{
				return this.GetTable<UpperSenateArea>();
			}
		}
		
		public System.Data.Linq.Table<UrbanAreaBlockGroupMapping> UrbanAreaBlockGroupMappings
		{
			get
			{
				return this.GetTable<UrbanAreaBlockGroupMapping>();
			}
		}
		
		public System.Data.Linq.Table<UrbanAreaBoxMapping> UrbanAreaBoxMappings
		{
			get
			{
				return this.GetTable<UrbanAreaBoxMapping>();
			}
		}
		
		public System.Data.Linq.Table<UrbanAreaCoordinate> UrbanAreaCoordinates
		{
			get
			{
				return this.GetTable<UrbanAreaCoordinate>();
			}
		}
		
		public System.Data.Linq.Table<UrbanArea> UrbanAreas
		{
			get
			{
				return this.GetTable<UrbanArea>();
			}
		}
		
		public System.Data.Linq.Table<UrbanAreaZipCodeMapping> UrbanAreaZipCodeMappings
		{
			get
			{
				return this.GetTable<UrbanAreaZipCodeMapping>();
			}
		}
		
		public System.Data.Linq.Table<VotingDistrictAreaBoxMapping> VotingDistrictAreaBoxMappings
		{
			get
			{
				return this.GetTable<VotingDistrictAreaBoxMapping>();
			}
		}
		
		public System.Data.Linq.Table<VotingDistrictAreaCoordinate> VotingDistrictAreaCoordinates
		{
			get
			{
				return this.GetTable<VotingDistrictAreaCoordinate>();
			}
		}
		
		public System.Data.Linq.Table<Tract> Tracts
		{
			get
			{
				return this.GetTable<Tract>();
			}
		}
		
		public System.Data.Linq.Table<BlockGroup> BlockGroups
		{
			get
			{
				return this.GetTable<BlockGroup>();
			}
		}
		
		public System.Data.Linq.Table<FiveZipArea> FiveZipAreas
		{
			get
			{
				return this.GetTable<FiveZipArea>();
			}
		}
	}
	
	[Table(Name="dbo.BlockGroupBoxMappings")]
	public partial class BlockGroupBoxMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BoxId;
		
		private int _BlockGroupId;
		
		private EntityRef<BlockGroup> _BlockGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBoxIdChanging(int value);
    partial void OnBoxIdChanged();
    partial void OnBlockGroupIdChanging(int value);
    partial void OnBlockGroupIdChanged();
    #endregion
		
		public BlockGroupBoxMapping()
		{
			this._BlockGroup = default(EntityRef<BlockGroup>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_BoxId", DbType="Int NOT NULL")]
		public int BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[Column(Storage="_BlockGroupId", DbType="Int NOT NULL")]
		public int BlockGroupId
		{
			get
			{
				return this._BlockGroupId;
			}
			set
			{
				if ((this._BlockGroupId != value))
				{
					if (this._BlockGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlockGroupIdChanging(value);
					this.SendPropertyChanging();
					this._BlockGroupId = value;
					this.SendPropertyChanged("BlockGroupId");
					this.OnBlockGroupIdChanged();
				}
			}
		}
		
		[Association(Name="BlockGroup_BlockGroupBoxMapping", Storage="_BlockGroup", ThisKey="BlockGroupId", OtherKey="Id", IsForeignKey=true)]
		public BlockGroup BlockGroup
		{
			get
			{
				return this._BlockGroup.Entity;
			}
			set
			{
				BlockGroup previousValue = this._BlockGroup.Entity;
				if (((previousValue != value) 
							|| (this._BlockGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlockGroup.Entity = null;
						previousValue.BlockGroupBoxMappings.Remove(this);
					}
					this._BlockGroup.Entity = value;
					if ((value != null))
					{
						value.BlockGroupBoxMappings.Add(this);
						this._BlockGroupId = value.Id;
					}
					else
					{
						this._BlockGroupId = default(int);
					}
					this.SendPropertyChanged("BlockGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.VotingDistrictAreas")]
	public partial class VotingDistrictArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _VTD;
		
		private string _StateCode;
		
		private string _CountyCode;
		
		private string _LSAD;
		
		private string _LSAD_TRAN;
		
		private double _MinLongitude;
		
		private double _MaxLongitude;
		
		private double _MinLatitude;
		
		private double _MaxLatitude;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntitySet<VotingDistrictAreaCoordinate> _VotingDistrictAreaCoordinates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnVTDChanging(string value);
    partial void OnVTDChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    partial void OnCountyCodeChanging(string value);
    partial void OnCountyCodeChanged();
    partial void OnLSADChanging(string value);
    partial void OnLSADChanged();
    partial void OnLSAD_TRANChanging(string value);
    partial void OnLSAD_TRANChanged();
    partial void OnMinLongitudeChanging(double value);
    partial void OnMinLongitudeChanged();
    partial void OnMaxLongitudeChanging(double value);
    partial void OnMaxLongitudeChanged();
    partial void OnMinLatitudeChanging(double value);
    partial void OnMinLatitudeChanged();
    partial void OnMaxLatitudeChanging(double value);
    partial void OnMaxLatitudeChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public VotingDistrictArea()
		{
			this._VotingDistrictAreaCoordinates = new EntitySet<VotingDistrictAreaCoordinate>(new Action<VotingDistrictAreaCoordinate>(this.attach_VotingDistrictAreaCoordinates), new Action<VotingDistrictAreaCoordinate>(this.detach_VotingDistrictAreaCoordinates));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_VTD", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string VTD
		{
			get
			{
				return this._VTD;
			}
			set
			{
				if ((this._VTD != value))
				{
					this.OnVTDChanging(value);
					this.SendPropertyChanging();
					this._VTD = value;
					this.SendPropertyChanged("VTD");
					this.OnVTDChanged();
				}
			}
		}
		
		[Column(Storage="_StateCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CountyCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string CountyCode
		{
			get
			{
				return this._CountyCode;
			}
			set
			{
				if ((this._CountyCode != value))
				{
					this.OnCountyCodeChanging(value);
					this.SendPropertyChanging();
					this._CountyCode = value;
					this.SendPropertyChanged("CountyCode");
					this.OnCountyCodeChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD", DbType="NVarChar(8)")]
		public string LSAD
		{
			get
			{
				return this._LSAD;
			}
			set
			{
				if ((this._LSAD != value))
				{
					this.OnLSADChanging(value);
					this.SendPropertyChanging();
					this._LSAD = value;
					this.SendPropertyChanged("LSAD");
					this.OnLSADChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD_TRAN", DbType="NVarChar(64)")]
		public string LSAD_TRAN
		{
			get
			{
				return this._LSAD_TRAN;
			}
			set
			{
				if ((this._LSAD_TRAN != value))
				{
					this.OnLSAD_TRANChanging(value);
					this.SendPropertyChanging();
					this._LSAD_TRAN = value;
					this.SendPropertyChanged("LSAD_TRAN");
					this.OnLSAD_TRANChanged();
				}
			}
		}
		
		[Column(Storage="_MinLongitude", DbType="Float NOT NULL")]
		public double MinLongitude
		{
			get
			{
				return this._MinLongitude;
			}
			set
			{
				if ((this._MinLongitude != value))
				{
					this.OnMinLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLongitude = value;
					this.SendPropertyChanged("MinLongitude");
					this.OnMinLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLongitude", DbType="Float NOT NULL")]
		public double MaxLongitude
		{
			get
			{
				return this._MaxLongitude;
			}
			set
			{
				if ((this._MaxLongitude != value))
				{
					this.OnMaxLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLongitude = value;
					this.SendPropertyChanged("MaxLongitude");
					this.OnMaxLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MinLatitude", DbType="Float NOT NULL")]
		public double MinLatitude
		{
			get
			{
				return this._MinLatitude;
			}
			set
			{
				if ((this._MinLatitude != value))
				{
					this.OnMinLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLatitude = value;
					this.SendPropertyChanged("MinLatitude");
					this.OnMinLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLatitude", DbType="Float NOT NULL")]
		public double MaxLatitude
		{
			get
			{
				return this._MaxLatitude;
			}
			set
			{
				if ((this._MaxLatitude != value))
				{
					this.OnMaxLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLatitude = value;
					this.SendPropertyChanged("MaxLatitude");
					this.OnMaxLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="VotingDistrictArea_VotingDistrictAreaCoordinate", Storage="_VotingDistrictAreaCoordinates", ThisKey="Id", OtherKey="VotingDistrictAreaId")]
		public EntitySet<VotingDistrictAreaCoordinate> VotingDistrictAreaCoordinates
		{
			get
			{
				return this._VotingDistrictAreaCoordinates;
			}
			set
			{
				this._VotingDistrictAreaCoordinates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VotingDistrictAreaCoordinates(VotingDistrictAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.VotingDistrictArea = this;
		}
		
		private void detach_VotingDistrictAreaCoordinates(VotingDistrictAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.VotingDistrictArea = null;
		}
	}
	
	[Table(Name="dbo.BlockGroupCoordinates")]
	public partial class BlockGroupCoordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _BlockGroupId;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntityRef<BlockGroup> _BlockGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnBlockGroupIdChanging(int value);
    partial void OnBlockGroupIdChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public BlockGroupCoordinate()
		{
			this._BlockGroup = default(EntityRef<BlockGroup>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_BlockGroupId", DbType="Int NOT NULL")]
		public int BlockGroupId
		{
			get
			{
				return this._BlockGroupId;
			}
			set
			{
				if ((this._BlockGroupId != value))
				{
					if (this._BlockGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlockGroupIdChanging(value);
					this.SendPropertyChanging();
					this._BlockGroupId = value;
					this.SendPropertyChanged("BlockGroupId");
					this.OnBlockGroupIdChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="BlockGroup_BlockGroupCoordinate", Storage="_BlockGroup", ThisKey="BlockGroupId", OtherKey="Id", IsForeignKey=true)]
		public BlockGroup BlockGroup
		{
			get
			{
				return this._BlockGroup.Entity;
			}
			set
			{
				BlockGroup previousValue = this._BlockGroup.Entity;
				if (((previousValue != value) 
							|| (this._BlockGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlockGroup.Entity = null;
						previousValue.BlockGroupCoordinates.Remove(this);
					}
					this._BlockGroup.Entity = value;
					if ((value != null))
					{
						value.BlockGroupCoordinates.Add(this);
						this._BlockGroupId = value.Id;
					}
					else
					{
						this._BlockGroupId = default(int);
					}
					this.SendPropertyChanged("BlockGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.BlockGroupMappings")]
	public partial class BlockGroupMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ThreeZipAreaId;
		
		private string _ThreeZipAreaCode;
		
		private int _FiveZipAreaId;
		
		private string _FiveZipAreaCode;
		
		private int _TractId;
		
		private string _TractCode;
		
		private int _BlockGroupId;
		
		private string _BlockGroupCode;
		
		private EntityRef<ThreeZipArea> _ThreeZipArea;
		
		private EntityRef<Tract> _Tract;
		
		private EntityRef<BlockGroup> _BlockGroup;
		
		private EntityRef<FiveZipArea> _FiveZipArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnThreeZipAreaIdChanging(int value);
    partial void OnThreeZipAreaIdChanged();
    partial void OnThreeZipAreaCodeChanging(string value);
    partial void OnThreeZipAreaCodeChanged();
    partial void OnFiveZipAreaIdChanging(int value);
    partial void OnFiveZipAreaIdChanged();
    partial void OnFiveZipAreaCodeChanging(string value);
    partial void OnFiveZipAreaCodeChanged();
    partial void OnTractIdChanging(int value);
    partial void OnTractIdChanged();
    partial void OnTractCodeChanging(string value);
    partial void OnTractCodeChanged();
    partial void OnBlockGroupIdChanging(int value);
    partial void OnBlockGroupIdChanged();
    partial void OnBlockGroupCodeChanging(string value);
    partial void OnBlockGroupCodeChanged();
    #endregion
		
		public BlockGroupMapping()
		{
			this._ThreeZipArea = default(EntityRef<ThreeZipArea>);
			this._Tract = default(EntityRef<Tract>);
			this._BlockGroup = default(EntityRef<BlockGroup>);
			this._FiveZipArea = default(EntityRef<FiveZipArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_ThreeZipAreaId", DbType="Int NOT NULL")]
		public int ThreeZipAreaId
		{
			get
			{
				return this._ThreeZipAreaId;
			}
			set
			{
				if ((this._ThreeZipAreaId != value))
				{
					if (this._ThreeZipArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThreeZipAreaIdChanging(value);
					this.SendPropertyChanging();
					this._ThreeZipAreaId = value;
					this.SendPropertyChanged("ThreeZipAreaId");
					this.OnThreeZipAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_ThreeZipAreaCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string ThreeZipAreaCode
		{
			get
			{
				return this._ThreeZipAreaCode;
			}
			set
			{
				if ((this._ThreeZipAreaCode != value))
				{
					this.OnThreeZipAreaCodeChanging(value);
					this.SendPropertyChanging();
					this._ThreeZipAreaCode = value;
					this.SendPropertyChanged("ThreeZipAreaCode");
					this.OnThreeZipAreaCodeChanged();
				}
			}
		}
		
		[Column(Storage="_FiveZipAreaId", DbType="Int NOT NULL")]
		public int FiveZipAreaId
		{
			get
			{
				return this._FiveZipAreaId;
			}
			set
			{
				if ((this._FiveZipAreaId != value))
				{
					if (this._FiveZipArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFiveZipAreaIdChanging(value);
					this.SendPropertyChanging();
					this._FiveZipAreaId = value;
					this.SendPropertyChanged("FiveZipAreaId");
					this.OnFiveZipAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_FiveZipAreaCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string FiveZipAreaCode
		{
			get
			{
				return this._FiveZipAreaCode;
			}
			set
			{
				if ((this._FiveZipAreaCode != value))
				{
					this.OnFiveZipAreaCodeChanging(value);
					this.SendPropertyChanging();
					this._FiveZipAreaCode = value;
					this.SendPropertyChanged("FiveZipAreaCode");
					this.OnFiveZipAreaCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TractId", DbType="Int NOT NULL")]
		public int TractId
		{
			get
			{
				return this._TractId;
			}
			set
			{
				if ((this._TractId != value))
				{
					if (this._Tract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTractIdChanging(value);
					this.SendPropertyChanging();
					this._TractId = value;
					this.SendPropertyChanged("TractId");
					this.OnTractIdChanged();
				}
			}
		}
		
		[Column(Storage="_TractCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string TractCode
		{
			get
			{
				return this._TractCode;
			}
			set
			{
				if ((this._TractCode != value))
				{
					this.OnTractCodeChanging(value);
					this.SendPropertyChanging();
					this._TractCode = value;
					this.SendPropertyChanged("TractCode");
					this.OnTractCodeChanged();
				}
			}
		}
		
		[Column(Storage="_BlockGroupId", DbType="Int NOT NULL")]
		public int BlockGroupId
		{
			get
			{
				return this._BlockGroupId;
			}
			set
			{
				if ((this._BlockGroupId != value))
				{
					if (this._BlockGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlockGroupIdChanging(value);
					this.SendPropertyChanging();
					this._BlockGroupId = value;
					this.SendPropertyChanged("BlockGroupId");
					this.OnBlockGroupIdChanged();
				}
			}
		}
		
		[Column(Storage="_BlockGroupCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string BlockGroupCode
		{
			get
			{
				return this._BlockGroupCode;
			}
			set
			{
				if ((this._BlockGroupCode != value))
				{
					this.OnBlockGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._BlockGroupCode = value;
					this.SendPropertyChanged("BlockGroupCode");
					this.OnBlockGroupCodeChanged();
				}
			}
		}
		
		[Association(Name="ThreeZipArea_BlockGroupMapping", Storage="_ThreeZipArea", ThisKey="ThreeZipAreaId", OtherKey="Id", IsForeignKey=true)]
		public ThreeZipArea ThreeZipArea
		{
			get
			{
				return this._ThreeZipArea.Entity;
			}
			set
			{
				ThreeZipArea previousValue = this._ThreeZipArea.Entity;
				if (((previousValue != value) 
							|| (this._ThreeZipArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThreeZipArea.Entity = null;
						previousValue.BlockGroupMappings.Remove(this);
					}
					this._ThreeZipArea.Entity = value;
					if ((value != null))
					{
						value.BlockGroupMappings.Add(this);
						this._ThreeZipAreaId = value.Id;
					}
					else
					{
						this._ThreeZipAreaId = default(int);
					}
					this.SendPropertyChanged("ThreeZipArea");
				}
			}
		}
		
		[Association(Name="Tract_BlockGroupMapping", Storage="_Tract", ThisKey="TractId", OtherKey="Id", IsForeignKey=true)]
		public Tract Tract
		{
			get
			{
				return this._Tract.Entity;
			}
			set
			{
				Tract previousValue = this._Tract.Entity;
				if (((previousValue != value) 
							|| (this._Tract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tract.Entity = null;
						previousValue.BlockGroupMappings.Remove(this);
					}
					this._Tract.Entity = value;
					if ((value != null))
					{
						value.BlockGroupMappings.Add(this);
						this._TractId = value.Id;
					}
					else
					{
						this._TractId = default(int);
					}
					this.SendPropertyChanged("Tract");
				}
			}
		}
		
		[Association(Name="BlockGroup_BlockGroupMapping", Storage="_BlockGroup", ThisKey="BlockGroupId", OtherKey="Id", IsForeignKey=true)]
		public BlockGroup BlockGroup
		{
			get
			{
				return this._BlockGroup.Entity;
			}
			set
			{
				BlockGroup previousValue = this._BlockGroup.Entity;
				if (((previousValue != value) 
							|| (this._BlockGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlockGroup.Entity = null;
						previousValue.BlockGroupMappings.Remove(this);
					}
					this._BlockGroup.Entity = value;
					if ((value != null))
					{
						value.BlockGroupMappings.Add(this);
						this._BlockGroupId = value.Id;
					}
					else
					{
						this._BlockGroupId = default(int);
					}
					this.SendPropertyChanged("BlockGroup");
				}
			}
		}
		
		[Association(Name="FiveZipArea_BlockGroupMapping", Storage="_FiveZipArea", ThisKey="FiveZipAreaId", OtherKey="Id", IsForeignKey=true)]
		public FiveZipArea FiveZipArea
		{
			get
			{
				return this._FiveZipArea.Entity;
			}
			set
			{
				FiveZipArea previousValue = this._FiveZipArea.Entity;
				if (((previousValue != value) 
							|| (this._FiveZipArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FiveZipArea.Entity = null;
						previousValue.BlockGroupMappings.Remove(this);
					}
					this._FiveZipArea.Entity = value;
					if ((value != null))
					{
						value.BlockGroupMappings.Add(this);
						this._FiveZipAreaId = value.Id;
					}
					else
					{
						this._FiveZipAreaId = default(int);
					}
					this.SendPropertyChanged("FiveZipArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CountyAreaBoxMappings")]
	public partial class CountyAreaBoxMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BoxId;
		
		private int _CountyAreaId;
		
		private EntityRef<CountyArea> _CountyArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBoxIdChanging(int value);
    partial void OnBoxIdChanged();
    partial void OnCountyAreaIdChanging(int value);
    partial void OnCountyAreaIdChanged();
    #endregion
		
		public CountyAreaBoxMapping()
		{
			this._CountyArea = default(EntityRef<CountyArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_BoxId", DbType="Int NOT NULL")]
		public int BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[Column(Storage="_CountyAreaId", DbType="Int NOT NULL")]
		public int CountyAreaId
		{
			get
			{
				return this._CountyAreaId;
			}
			set
			{
				if ((this._CountyAreaId != value))
				{
					if (this._CountyArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountyAreaIdChanging(value);
					this.SendPropertyChanging();
					this._CountyAreaId = value;
					this.SendPropertyChanged("CountyAreaId");
					this.OnCountyAreaIdChanged();
				}
			}
		}
		
		[Association(Name="CountyArea_CountyAreaBoxMapping", Storage="_CountyArea", ThisKey="CountyAreaId", OtherKey="Id", IsForeignKey=true)]
		public CountyArea CountyArea
		{
			get
			{
				return this._CountyArea.Entity;
			}
			set
			{
				CountyArea previousValue = this._CountyArea.Entity;
				if (((previousValue != value) 
							|| (this._CountyArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CountyArea.Entity = null;
						previousValue.CountyAreaBoxMappings.Remove(this);
					}
					this._CountyArea.Entity = value;
					if ((value != null))
					{
						value.CountyAreaBoxMappings.Add(this);
						this._CountyAreaId = value.Id;
					}
					else
					{
						this._CountyAreaId = default(int);
					}
					this.SendPropertyChanged("CountyArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CountyAreaCoordinates")]
	public partial class CountyAreaCoordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CountyAreaId;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntityRef<CountyArea> _CountyArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCountyAreaIdChanging(int value);
    partial void OnCountyAreaIdChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public CountyAreaCoordinate()
		{
			this._CountyArea = default(EntityRef<CountyArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_CountyAreaId", DbType="Int NOT NULL")]
		public int CountyAreaId
		{
			get
			{
				return this._CountyAreaId;
			}
			set
			{
				if ((this._CountyAreaId != value))
				{
					if (this._CountyArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountyAreaIdChanging(value);
					this.SendPropertyChanging();
					this._CountyAreaId = value;
					this.SendPropertyChanged("CountyAreaId");
					this.OnCountyAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="CountyArea_CountyAreaCoordinate", Storage="_CountyArea", ThisKey="CountyAreaId", OtherKey="Id", IsForeignKey=true)]
		public CountyArea CountyArea
		{
			get
			{
				return this._CountyArea.Entity;
			}
			set
			{
				CountyArea previousValue = this._CountyArea.Entity;
				if (((previousValue != value) 
							|| (this._CountyArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CountyArea.Entity = null;
						previousValue.CountyAreaCoordinates.Remove(this);
					}
					this._CountyArea.Entity = value;
					if ((value != null))
					{
						value.CountyAreaCoordinates.Add(this);
						this._CountyAreaId = value.Id;
					}
					else
					{
						this._CountyAreaId = default(int);
					}
					this.SendPropertyChanged("CountyArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CountyAreas")]
	public partial class CountyArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _StateCode;
		
		private string _LSAD;
		
		private string _LSAD_TRAN;
		
		private double _MinLongitude;
		
		private double _MaxLongitude;
		
		private double _MinLatitude;
		
		private double _MaxLatitude;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntitySet<CountyAreaBoxMapping> _CountyAreaBoxMappings;
		
		private EntitySet<CountyAreaCoordinate> _CountyAreaCoordinates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    partial void OnLSADChanging(string value);
    partial void OnLSADChanged();
    partial void OnLSAD_TRANChanging(string value);
    partial void OnLSAD_TRANChanged();
    partial void OnMinLongitudeChanging(double value);
    partial void OnMinLongitudeChanged();
    partial void OnMaxLongitudeChanging(double value);
    partial void OnMaxLongitudeChanged();
    partial void OnMinLatitudeChanging(double value);
    partial void OnMinLatitudeChanged();
    partial void OnMaxLatitudeChanging(double value);
    partial void OnMaxLatitudeChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public CountyArea()
		{
			this._CountyAreaBoxMappings = new EntitySet<CountyAreaBoxMapping>(new Action<CountyAreaBoxMapping>(this.attach_CountyAreaBoxMappings), new Action<CountyAreaBoxMapping>(this.detach_CountyAreaBoxMappings));
			this._CountyAreaCoordinates = new EntitySet<CountyAreaCoordinate>(new Action<CountyAreaCoordinate>(this.attach_CountyAreaCoordinates), new Action<CountyAreaCoordinate>(this.detach_CountyAreaCoordinates));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_StateCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string LSAD
		{
			get
			{
				return this._LSAD;
			}
			set
			{
				if ((this._LSAD != value))
				{
					this.OnLSADChanging(value);
					this.SendPropertyChanging();
					this._LSAD = value;
					this.SendPropertyChanged("LSAD");
					this.OnLSADChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD_TRAN", DbType="NVarChar(64)")]
		public string LSAD_TRAN
		{
			get
			{
				return this._LSAD_TRAN;
			}
			set
			{
				if ((this._LSAD_TRAN != value))
				{
					this.OnLSAD_TRANChanging(value);
					this.SendPropertyChanging();
					this._LSAD_TRAN = value;
					this.SendPropertyChanged("LSAD_TRAN");
					this.OnLSAD_TRANChanged();
				}
			}
		}
		
		[Column(Storage="_MinLongitude", DbType="Float NOT NULL")]
		public double MinLongitude
		{
			get
			{
				return this._MinLongitude;
			}
			set
			{
				if ((this._MinLongitude != value))
				{
					this.OnMinLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLongitude = value;
					this.SendPropertyChanged("MinLongitude");
					this.OnMinLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLongitude", DbType="Float NOT NULL")]
		public double MaxLongitude
		{
			get
			{
				return this._MaxLongitude;
			}
			set
			{
				if ((this._MaxLongitude != value))
				{
					this.OnMaxLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLongitude = value;
					this.SendPropertyChanged("MaxLongitude");
					this.OnMaxLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MinLatitude", DbType="Float NOT NULL")]
		public double MinLatitude
		{
			get
			{
				return this._MinLatitude;
			}
			set
			{
				if ((this._MinLatitude != value))
				{
					this.OnMinLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLatitude = value;
					this.SendPropertyChanged("MinLatitude");
					this.OnMinLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLatitude", DbType="Float NOT NULL")]
		public double MaxLatitude
		{
			get
			{
				return this._MaxLatitude;
			}
			set
			{
				if ((this._MaxLatitude != value))
				{
					this.OnMaxLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLatitude = value;
					this.SendPropertyChanged("MaxLatitude");
					this.OnMaxLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="CountyArea_CountyAreaBoxMapping", Storage="_CountyAreaBoxMappings", ThisKey="Id", OtherKey="CountyAreaId")]
		public EntitySet<CountyAreaBoxMapping> CountyAreaBoxMappings
		{
			get
			{
				return this._CountyAreaBoxMappings;
			}
			set
			{
				this._CountyAreaBoxMappings.Assign(value);
			}
		}
		
		[Association(Name="CountyArea_CountyAreaCoordinate", Storage="_CountyAreaCoordinates", ThisKey="Id", OtherKey="CountyAreaId")]
		public EntitySet<CountyAreaCoordinate> CountyAreaCoordinates
		{
			get
			{
				return this._CountyAreaCoordinates;
			}
			set
			{
				this._CountyAreaCoordinates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CountyAreaBoxMappings(CountyAreaBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.CountyArea = this;
		}
		
		private void detach_CountyAreaBoxMappings(CountyAreaBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.CountyArea = null;
		}
		
		private void attach_CountyAreaCoordinates(CountyAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.CountyArea = this;
		}
		
		private void detach_CountyAreaCoordinates(CountyAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.CountyArea = null;
		}
	}
	
	[Table(Name="dbo.Countys")]
	public partial class County : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _StateCode;
		
		private string _LSAD;
		
		private string _LSAD_TRAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    partial void OnLSADChanging(string value);
    partial void OnLSADChanged();
    partial void OnLSAD_TRANChanging(string value);
    partial void OnLSAD_TRANChanged();
    #endregion
		
		public County()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_StateCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD", DbType="NVarChar(8)")]
		public string LSAD
		{
			get
			{
				return this._LSAD;
			}
			set
			{
				if ((this._LSAD != value))
				{
					this.OnLSADChanging(value);
					this.SendPropertyChanging();
					this._LSAD = value;
					this.SendPropertyChanged("LSAD");
					this.OnLSADChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD_TRAN", DbType="NVarChar(64)")]
		public string LSAD_TRAN
		{
			get
			{
				return this._LSAD_TRAN;
			}
			set
			{
				if ((this._LSAD_TRAN != value))
				{
					this.OnLSAD_TRANChanging(value);
					this.SendPropertyChanging();
					this._LSAD_TRAN = value;
					this.SendPropertyChanged("LSAD_TRAN");
					this.OnLSAD_TRANChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ElementarySchoolAreaBoxMappings")]
	public partial class ElementarySchoolAreaBoxMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BoxId;
		
		private int _ElementarySchoolAreaId;
		
		private EntityRef<ElementarySchoolArea> _ElementarySchoolArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBoxIdChanging(int value);
    partial void OnBoxIdChanged();
    partial void OnElementarySchoolAreaIdChanging(int value);
    partial void OnElementarySchoolAreaIdChanged();
    #endregion
		
		public ElementarySchoolAreaBoxMapping()
		{
			this._ElementarySchoolArea = default(EntityRef<ElementarySchoolArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_BoxId", DbType="Int NOT NULL")]
		public int BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[Column(Storage="_ElementarySchoolAreaId", DbType="Int NOT NULL")]
		public int ElementarySchoolAreaId
		{
			get
			{
				return this._ElementarySchoolAreaId;
			}
			set
			{
				if ((this._ElementarySchoolAreaId != value))
				{
					if (this._ElementarySchoolArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnElementarySchoolAreaIdChanging(value);
					this.SendPropertyChanging();
					this._ElementarySchoolAreaId = value;
					this.SendPropertyChanged("ElementarySchoolAreaId");
					this.OnElementarySchoolAreaIdChanged();
				}
			}
		}
		
		[Association(Name="ElementarySchoolArea_ElementarySchoolAreaBoxMapping", Storage="_ElementarySchoolArea", ThisKey="ElementarySchoolAreaId", OtherKey="Id", IsForeignKey=true)]
		public ElementarySchoolArea ElementarySchoolArea
		{
			get
			{
				return this._ElementarySchoolArea.Entity;
			}
			set
			{
				ElementarySchoolArea previousValue = this._ElementarySchoolArea.Entity;
				if (((previousValue != value) 
							|| (this._ElementarySchoolArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ElementarySchoolArea.Entity = null;
						previousValue.ElementarySchoolAreaBoxMappings.Remove(this);
					}
					this._ElementarySchoolArea.Entity = value;
					if ((value != null))
					{
						value.ElementarySchoolAreaBoxMappings.Add(this);
						this._ElementarySchoolAreaId = value.Id;
					}
					else
					{
						this._ElementarySchoolAreaId = default(int);
					}
					this.SendPropertyChanged("ElementarySchoolArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ElementarySchoolAreaCoordinates")]
	public partial class ElementarySchoolAreaCoordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ElementarySchoolAreaId;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntityRef<ElementarySchoolArea> _ElementarySchoolArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnElementarySchoolAreaIdChanging(int value);
    partial void OnElementarySchoolAreaIdChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public ElementarySchoolAreaCoordinate()
		{
			this._ElementarySchoolArea = default(EntityRef<ElementarySchoolArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_ElementarySchoolAreaId", DbType="Int NOT NULL")]
		public int ElementarySchoolAreaId
		{
			get
			{
				return this._ElementarySchoolAreaId;
			}
			set
			{
				if ((this._ElementarySchoolAreaId != value))
				{
					if (this._ElementarySchoolArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnElementarySchoolAreaIdChanging(value);
					this.SendPropertyChanging();
					this._ElementarySchoolAreaId = value;
					this.SendPropertyChanged("ElementarySchoolAreaId");
					this.OnElementarySchoolAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="ElementarySchoolArea_ElementarySchoolAreaCoordinate", Storage="_ElementarySchoolArea", ThisKey="ElementarySchoolAreaId", OtherKey="Id", IsForeignKey=true)]
		public ElementarySchoolArea ElementarySchoolArea
		{
			get
			{
				return this._ElementarySchoolArea.Entity;
			}
			set
			{
				ElementarySchoolArea previousValue = this._ElementarySchoolArea.Entity;
				if (((previousValue != value) 
							|| (this._ElementarySchoolArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ElementarySchoolArea.Entity = null;
						previousValue.ElementarySchoolAreaCoordinates.Remove(this);
					}
					this._ElementarySchoolArea.Entity = value;
					if ((value != null))
					{
						value.ElementarySchoolAreaCoordinates.Add(this);
						this._ElementarySchoolAreaId = value.Id;
					}
					else
					{
						this._ElementarySchoolAreaId = default(int);
					}
					this.SendPropertyChanged("ElementarySchoolArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ElementarySchoolAreas")]
	public partial class ElementarySchoolArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _StateCode;
		
		private string _LSAD;
		
		private string _LSAD_TRAN;
		
		private double _MinLongitude;
		
		private double _MaxLongitude;
		
		private double _MinLatitude;
		
		private double _MaxLatitude;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntitySet<ElementarySchoolAreaBoxMapping> _ElementarySchoolAreaBoxMappings;
		
		private EntitySet<ElementarySchoolAreaCoordinate> _ElementarySchoolAreaCoordinates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    partial void OnLSADChanging(string value);
    partial void OnLSADChanged();
    partial void OnLSAD_TRANChanging(string value);
    partial void OnLSAD_TRANChanged();
    partial void OnMinLongitudeChanging(double value);
    partial void OnMinLongitudeChanged();
    partial void OnMaxLongitudeChanging(double value);
    partial void OnMaxLongitudeChanged();
    partial void OnMinLatitudeChanging(double value);
    partial void OnMinLatitudeChanged();
    partial void OnMaxLatitudeChanging(double value);
    partial void OnMaxLatitudeChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public ElementarySchoolArea()
		{
			this._ElementarySchoolAreaBoxMappings = new EntitySet<ElementarySchoolAreaBoxMapping>(new Action<ElementarySchoolAreaBoxMapping>(this.attach_ElementarySchoolAreaBoxMappings), new Action<ElementarySchoolAreaBoxMapping>(this.detach_ElementarySchoolAreaBoxMappings));
			this._ElementarySchoolAreaCoordinates = new EntitySet<ElementarySchoolAreaCoordinate>(new Action<ElementarySchoolAreaCoordinate>(this.attach_ElementarySchoolAreaCoordinates), new Action<ElementarySchoolAreaCoordinate>(this.detach_ElementarySchoolAreaCoordinates));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_StateCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string LSAD
		{
			get
			{
				return this._LSAD;
			}
			set
			{
				if ((this._LSAD != value))
				{
					this.OnLSADChanging(value);
					this.SendPropertyChanging();
					this._LSAD = value;
					this.SendPropertyChanged("LSAD");
					this.OnLSADChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD_TRAN", DbType="NVarChar(64)")]
		public string LSAD_TRAN
		{
			get
			{
				return this._LSAD_TRAN;
			}
			set
			{
				if ((this._LSAD_TRAN != value))
				{
					this.OnLSAD_TRANChanging(value);
					this.SendPropertyChanging();
					this._LSAD_TRAN = value;
					this.SendPropertyChanged("LSAD_TRAN");
					this.OnLSAD_TRANChanged();
				}
			}
		}
		
		[Column(Storage="_MinLongitude", DbType="Float NOT NULL")]
		public double MinLongitude
		{
			get
			{
				return this._MinLongitude;
			}
			set
			{
				if ((this._MinLongitude != value))
				{
					this.OnMinLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLongitude = value;
					this.SendPropertyChanged("MinLongitude");
					this.OnMinLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLongitude", DbType="Float NOT NULL")]
		public double MaxLongitude
		{
			get
			{
				return this._MaxLongitude;
			}
			set
			{
				if ((this._MaxLongitude != value))
				{
					this.OnMaxLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLongitude = value;
					this.SendPropertyChanged("MaxLongitude");
					this.OnMaxLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MinLatitude", DbType="Float NOT NULL")]
		public double MinLatitude
		{
			get
			{
				return this._MinLatitude;
			}
			set
			{
				if ((this._MinLatitude != value))
				{
					this.OnMinLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLatitude = value;
					this.SendPropertyChanged("MinLatitude");
					this.OnMinLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLatitude", DbType="Float NOT NULL")]
		public double MaxLatitude
		{
			get
			{
				return this._MaxLatitude;
			}
			set
			{
				if ((this._MaxLatitude != value))
				{
					this.OnMaxLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLatitude = value;
					this.SendPropertyChanged("MaxLatitude");
					this.OnMaxLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="ElementarySchoolArea_ElementarySchoolAreaBoxMapping", Storage="_ElementarySchoolAreaBoxMappings", ThisKey="Id", OtherKey="ElementarySchoolAreaId")]
		public EntitySet<ElementarySchoolAreaBoxMapping> ElementarySchoolAreaBoxMappings
		{
			get
			{
				return this._ElementarySchoolAreaBoxMappings;
			}
			set
			{
				this._ElementarySchoolAreaBoxMappings.Assign(value);
			}
		}
		
		[Association(Name="ElementarySchoolArea_ElementarySchoolAreaCoordinate", Storage="_ElementarySchoolAreaCoordinates", ThisKey="Id", OtherKey="ElementarySchoolAreaId")]
		public EntitySet<ElementarySchoolAreaCoordinate> ElementarySchoolAreaCoordinates
		{
			get
			{
				return this._ElementarySchoolAreaCoordinates;
			}
			set
			{
				this._ElementarySchoolAreaCoordinates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ElementarySchoolAreaBoxMappings(ElementarySchoolAreaBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.ElementarySchoolArea = this;
		}
		
		private void detach_ElementarySchoolAreaBoxMappings(ElementarySchoolAreaBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.ElementarySchoolArea = null;
		}
		
		private void attach_ElementarySchoolAreaCoordinates(ElementarySchoolAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.ElementarySchoolArea = this;
		}
		
		private void detach_ElementarySchoolAreaCoordinates(ElementarySchoolAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.ElementarySchoolArea = null;
		}
	}
	
	[Table(Name="dbo.FiveZipAreaCoordinates")]
	public partial class FiveZipAreaCoordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _FiveZipAreaId;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private int _ShapeId;
		
		private EntityRef<FiveZipArea> _FiveZipArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFiveZipAreaIdChanging(int value);
    partial void OnFiveZipAreaIdChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnShapeIdChanging(int value);
    partial void OnShapeIdChanged();
    #endregion
		
		public FiveZipAreaCoordinate()
		{
			this._FiveZipArea = default(EntityRef<FiveZipArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_FiveZipAreaId", DbType="Int NOT NULL")]
		public int FiveZipAreaId
		{
			get
			{
				return this._FiveZipAreaId;
			}
			set
			{
				if ((this._FiveZipAreaId != value))
				{
					if (this._FiveZipArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFiveZipAreaIdChanging(value);
					this.SendPropertyChanging();
					this._FiveZipAreaId = value;
					this.SendPropertyChanged("FiveZipAreaId");
					this.OnFiveZipAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_ShapeId", DbType="Int NOT NULL")]
		public int ShapeId
		{
			get
			{
				return this._ShapeId;
			}
			set
			{
				if ((this._ShapeId != value))
				{
					this.OnShapeIdChanging(value);
					this.SendPropertyChanging();
					this._ShapeId = value;
					this.SendPropertyChanged("ShapeId");
					this.OnShapeIdChanged();
				}
			}
		}
		
		[Association(Name="FiveZipArea_FiveZipAreaCoordinate", Storage="_FiveZipArea", ThisKey="FiveZipAreaId", OtherKey="Id", IsForeignKey=true)]
		public FiveZipArea FiveZipArea
		{
			get
			{
				return this._FiveZipArea.Entity;
			}
			set
			{
				FiveZipArea previousValue = this._FiveZipArea.Entity;
				if (((previousValue != value) 
							|| (this._FiveZipArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FiveZipArea.Entity = null;
						previousValue.FiveZipAreaCoordinates.Remove(this);
					}
					this._FiveZipArea.Entity = value;
					if ((value != null))
					{
						value.FiveZipAreaCoordinates.Add(this);
						this._FiveZipAreaId = value.Id;
					}
					else
					{
						this._FiveZipAreaId = default(int);
					}
					this.SendPropertyChanged("FiveZipArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.FiveZipBoxMappings")]
	public partial class FiveZipBoxMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BoxId;
		
		private int _FiveZipAreaId;
		
		private EntityRef<FiveZipArea> _FiveZipArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBoxIdChanging(int value);
    partial void OnBoxIdChanged();
    partial void OnFiveZipAreaIdChanging(int value);
    partial void OnFiveZipAreaIdChanged();
    #endregion
		
		public FiveZipBoxMapping()
		{
			this._FiveZipArea = default(EntityRef<FiveZipArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_BoxId", DbType="Int NOT NULL")]
		public int BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[Column(Storage="_FiveZipAreaId", DbType="Int NOT NULL")]
		public int FiveZipAreaId
		{
			get
			{
				return this._FiveZipAreaId;
			}
			set
			{
				if ((this._FiveZipAreaId != value))
				{
					if (this._FiveZipArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFiveZipAreaIdChanging(value);
					this.SendPropertyChanging();
					this._FiveZipAreaId = value;
					this.SendPropertyChanged("FiveZipAreaId");
					this.OnFiveZipAreaIdChanged();
				}
			}
		}
		
		[Association(Name="FiveZipArea_FiveZipBoxMapping", Storage="_FiveZipArea", ThisKey="FiveZipAreaId", OtherKey="Id", IsForeignKey=true)]
		public FiveZipArea FiveZipArea
		{
			get
			{
				return this._FiveZipArea.Entity;
			}
			set
			{
				FiveZipArea previousValue = this._FiveZipArea.Entity;
				if (((previousValue != value) 
							|| (this._FiveZipArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FiveZipArea.Entity = null;
						previousValue.FiveZipBoxMappings.Remove(this);
					}
					this._FiveZipArea.Entity = value;
					if ((value != null))
					{
						value.FiveZipBoxMappings.Add(this);
						this._FiveZipAreaId = value.Id;
					}
					else
					{
						this._FiveZipAreaId = default(int);
					}
					this.SendPropertyChanged("FiveZipArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.LowerHouseAreaBoxMappings")]
	public partial class LowerHouseAreaBoxMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BoxId;
		
		private int _LowerHouseAreaId;
		
		private EntityRef<LowerHouseArea> _LowerHouseArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBoxIdChanging(int value);
    partial void OnBoxIdChanged();
    partial void OnLowerHouseAreaIdChanging(int value);
    partial void OnLowerHouseAreaIdChanged();
    #endregion
		
		public LowerHouseAreaBoxMapping()
		{
			this._LowerHouseArea = default(EntityRef<LowerHouseArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_BoxId", DbType="Int NOT NULL")]
		public int BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[Column(Storage="_LowerHouseAreaId", DbType="Int NOT NULL")]
		public int LowerHouseAreaId
		{
			get
			{
				return this._LowerHouseAreaId;
			}
			set
			{
				if ((this._LowerHouseAreaId != value))
				{
					if (this._LowerHouseArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLowerHouseAreaIdChanging(value);
					this.SendPropertyChanging();
					this._LowerHouseAreaId = value;
					this.SendPropertyChanged("LowerHouseAreaId");
					this.OnLowerHouseAreaIdChanged();
				}
			}
		}
		
		[Association(Name="LowerHouseArea_LowerHouseAreaBoxMapping", Storage="_LowerHouseArea", ThisKey="LowerHouseAreaId", OtherKey="Id", IsForeignKey=true)]
		public LowerHouseArea LowerHouseArea
		{
			get
			{
				return this._LowerHouseArea.Entity;
			}
			set
			{
				LowerHouseArea previousValue = this._LowerHouseArea.Entity;
				if (((previousValue != value) 
							|| (this._LowerHouseArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LowerHouseArea.Entity = null;
						previousValue.LowerHouseAreaBoxMappings.Remove(this);
					}
					this._LowerHouseArea.Entity = value;
					if ((value != null))
					{
						value.LowerHouseAreaBoxMappings.Add(this);
						this._LowerHouseAreaId = value.Id;
					}
					else
					{
						this._LowerHouseAreaId = default(int);
					}
					this.SendPropertyChanged("LowerHouseArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.LowerHouseAreaCoordinates")]
	public partial class LowerHouseAreaCoordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LowerHouseAreaId;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntityRef<LowerHouseArea> _LowerHouseArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLowerHouseAreaIdChanging(int value);
    partial void OnLowerHouseAreaIdChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public LowerHouseAreaCoordinate()
		{
			this._LowerHouseArea = default(EntityRef<LowerHouseArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_LowerHouseAreaId", DbType="Int NOT NULL")]
		public int LowerHouseAreaId
		{
			get
			{
				return this._LowerHouseAreaId;
			}
			set
			{
				if ((this._LowerHouseAreaId != value))
				{
					if (this._LowerHouseArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLowerHouseAreaIdChanging(value);
					this.SendPropertyChanging();
					this._LowerHouseAreaId = value;
					this.SendPropertyChanged("LowerHouseAreaId");
					this.OnLowerHouseAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="LowerHouseArea_LowerHouseAreaCoordinate", Storage="_LowerHouseArea", ThisKey="LowerHouseAreaId", OtherKey="Id", IsForeignKey=true)]
		public LowerHouseArea LowerHouseArea
		{
			get
			{
				return this._LowerHouseArea.Entity;
			}
			set
			{
				LowerHouseArea previousValue = this._LowerHouseArea.Entity;
				if (((previousValue != value) 
							|| (this._LowerHouseArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LowerHouseArea.Entity = null;
						previousValue.LowerHouseAreaCoordinates.Remove(this);
					}
					this._LowerHouseArea.Entity = value;
					if ((value != null))
					{
						value.LowerHouseAreaCoordinates.Add(this);
						this._LowerHouseAreaId = value.Id;
					}
					else
					{
						this._LowerHouseAreaId = default(int);
					}
					this.SendPropertyChanged("LowerHouseArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.LowerHouseAreas")]
	public partial class LowerHouseArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _GEO_ID;
		
		private string _StateCode;
		
		private string _LSAD;
		
		private string _LSAD_TRAN;
		
		private double _MinLongitude;
		
		private double _MaxLongitude;
		
		private double _MinLatitude;
		
		private double _MaxLatitude;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntitySet<LowerHouseAreaBoxMapping> _LowerHouseAreaBoxMappings;
		
		private EntitySet<LowerHouseAreaCoordinate> _LowerHouseAreaCoordinates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGEO_IDChanging(string value);
    partial void OnGEO_IDChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    partial void OnLSADChanging(string value);
    partial void OnLSADChanged();
    partial void OnLSAD_TRANChanging(string value);
    partial void OnLSAD_TRANChanged();
    partial void OnMinLongitudeChanging(double value);
    partial void OnMinLongitudeChanged();
    partial void OnMaxLongitudeChanging(double value);
    partial void OnMaxLongitudeChanged();
    partial void OnMinLatitudeChanging(double value);
    partial void OnMinLatitudeChanged();
    partial void OnMaxLatitudeChanging(double value);
    partial void OnMaxLatitudeChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public LowerHouseArea()
		{
			this._LowerHouseAreaBoxMappings = new EntitySet<LowerHouseAreaBoxMapping>(new Action<LowerHouseAreaBoxMapping>(this.attach_LowerHouseAreaBoxMappings), new Action<LowerHouseAreaBoxMapping>(this.detach_LowerHouseAreaBoxMappings));
			this._LowerHouseAreaCoordinates = new EntitySet<LowerHouseAreaCoordinate>(new Action<LowerHouseAreaCoordinate>(this.attach_LowerHouseAreaCoordinates), new Action<LowerHouseAreaCoordinate>(this.detach_LowerHouseAreaCoordinates));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_GEO_ID", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string GEO_ID
		{
			get
			{
				return this._GEO_ID;
			}
			set
			{
				if ((this._GEO_ID != value))
				{
					this.OnGEO_IDChanging(value);
					this.SendPropertyChanging();
					this._GEO_ID = value;
					this.SendPropertyChanged("GEO_ID");
					this.OnGEO_IDChanged();
				}
			}
		}
		
		[Column(Storage="_StateCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string LSAD
		{
			get
			{
				return this._LSAD;
			}
			set
			{
				if ((this._LSAD != value))
				{
					this.OnLSADChanging(value);
					this.SendPropertyChanging();
					this._LSAD = value;
					this.SendPropertyChanged("LSAD");
					this.OnLSADChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD_TRAN", DbType="NVarChar(64)")]
		public string LSAD_TRAN
		{
			get
			{
				return this._LSAD_TRAN;
			}
			set
			{
				if ((this._LSAD_TRAN != value))
				{
					this.OnLSAD_TRANChanging(value);
					this.SendPropertyChanging();
					this._LSAD_TRAN = value;
					this.SendPropertyChanged("LSAD_TRAN");
					this.OnLSAD_TRANChanged();
				}
			}
		}
		
		[Column(Storage="_MinLongitude", DbType="Float NOT NULL")]
		public double MinLongitude
		{
			get
			{
				return this._MinLongitude;
			}
			set
			{
				if ((this._MinLongitude != value))
				{
					this.OnMinLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLongitude = value;
					this.SendPropertyChanged("MinLongitude");
					this.OnMinLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLongitude", DbType="Float NOT NULL")]
		public double MaxLongitude
		{
			get
			{
				return this._MaxLongitude;
			}
			set
			{
				if ((this._MaxLongitude != value))
				{
					this.OnMaxLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLongitude = value;
					this.SendPropertyChanged("MaxLongitude");
					this.OnMaxLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MinLatitude", DbType="Float NOT NULL")]
		public double MinLatitude
		{
			get
			{
				return this._MinLatitude;
			}
			set
			{
				if ((this._MinLatitude != value))
				{
					this.OnMinLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLatitude = value;
					this.SendPropertyChanged("MinLatitude");
					this.OnMinLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLatitude", DbType="Float NOT NULL")]
		public double MaxLatitude
		{
			get
			{
				return this._MaxLatitude;
			}
			set
			{
				if ((this._MaxLatitude != value))
				{
					this.OnMaxLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLatitude = value;
					this.SendPropertyChanged("MaxLatitude");
					this.OnMaxLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="LowerHouseArea_LowerHouseAreaBoxMapping", Storage="_LowerHouseAreaBoxMappings", ThisKey="Id", OtherKey="LowerHouseAreaId")]
		public EntitySet<LowerHouseAreaBoxMapping> LowerHouseAreaBoxMappings
		{
			get
			{
				return this._LowerHouseAreaBoxMappings;
			}
			set
			{
				this._LowerHouseAreaBoxMappings.Assign(value);
			}
		}
		
		[Association(Name="LowerHouseArea_LowerHouseAreaCoordinate", Storage="_LowerHouseAreaCoordinates", ThisKey="Id", OtherKey="LowerHouseAreaId")]
		public EntitySet<LowerHouseAreaCoordinate> LowerHouseAreaCoordinates
		{
			get
			{
				return this._LowerHouseAreaCoordinates;
			}
			set
			{
				this._LowerHouseAreaCoordinates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LowerHouseAreaBoxMappings(LowerHouseAreaBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.LowerHouseArea = this;
		}
		
		private void detach_LowerHouseAreaBoxMappings(LowerHouseAreaBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.LowerHouseArea = null;
		}
		
		private void attach_LowerHouseAreaCoordinates(LowerHouseAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.LowerHouseArea = this;
		}
		
		private void detach_LowerHouseAreaCoordinates(LowerHouseAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.LowerHouseArea = null;
		}
	}
	
	[Table(Name="dbo.MetropolitanCoreAreaBlockGroupMappings")]
	public partial class MetropolitanCoreAreaBlockGroupMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _MetropolitanCoreAreaId;
		
		private int _CountyId;
		
		private int _TractId;
		
		private int _BlockGroupId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMetropolitanCoreAreaIdChanging(int value);
    partial void OnMetropolitanCoreAreaIdChanged();
    partial void OnCountyIdChanging(int value);
    partial void OnCountyIdChanged();
    partial void OnTractIdChanging(int value);
    partial void OnTractIdChanged();
    partial void OnBlockGroupIdChanging(int value);
    partial void OnBlockGroupIdChanged();
    #endregion
		
		public MetropolitanCoreAreaBlockGroupMapping()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_MetropolitanCoreAreaId", DbType="Int NOT NULL")]
		public int MetropolitanCoreAreaId
		{
			get
			{
				return this._MetropolitanCoreAreaId;
			}
			set
			{
				if ((this._MetropolitanCoreAreaId != value))
				{
					this.OnMetropolitanCoreAreaIdChanging(value);
					this.SendPropertyChanging();
					this._MetropolitanCoreAreaId = value;
					this.SendPropertyChanged("MetropolitanCoreAreaId");
					this.OnMetropolitanCoreAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_CountyId", DbType="Int NOT NULL")]
		public int CountyId
		{
			get
			{
				return this._CountyId;
			}
			set
			{
				if ((this._CountyId != value))
				{
					this.OnCountyIdChanging(value);
					this.SendPropertyChanging();
					this._CountyId = value;
					this.SendPropertyChanged("CountyId");
					this.OnCountyIdChanged();
				}
			}
		}
		
		[Column(Storage="_TractId", DbType="Int NOT NULL")]
		public int TractId
		{
			get
			{
				return this._TractId;
			}
			set
			{
				if ((this._TractId != value))
				{
					this.OnTractIdChanging(value);
					this.SendPropertyChanging();
					this._TractId = value;
					this.SendPropertyChanged("TractId");
					this.OnTractIdChanged();
				}
			}
		}
		
		[Column(Storage="_BlockGroupId", DbType="Int NOT NULL")]
		public int BlockGroupId
		{
			get
			{
				return this._BlockGroupId;
			}
			set
			{
				if ((this._BlockGroupId != value))
				{
					this.OnBlockGroupIdChanging(value);
					this.SendPropertyChanging();
					this._BlockGroupId = value;
					this.SendPropertyChanged("BlockGroupId");
					this.OnBlockGroupIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.MetropolitanCoreAreaBoxMappings")]
	public partial class MetropolitanCoreAreaBoxMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BoxId;
		
		private int _MetropolitanCoreAreaId;
		
		private EntityRef<MetropolitanCoreArea> _MetropolitanCoreArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBoxIdChanging(int value);
    partial void OnBoxIdChanged();
    partial void OnMetropolitanCoreAreaIdChanging(int value);
    partial void OnMetropolitanCoreAreaIdChanged();
    #endregion
		
		public MetropolitanCoreAreaBoxMapping()
		{
			this._MetropolitanCoreArea = default(EntityRef<MetropolitanCoreArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_BoxId", DbType="Int NOT NULL")]
		public int BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[Column(Storage="_MetropolitanCoreAreaId", DbType="Int NOT NULL")]
		public int MetropolitanCoreAreaId
		{
			get
			{
				return this._MetropolitanCoreAreaId;
			}
			set
			{
				if ((this._MetropolitanCoreAreaId != value))
				{
					if (this._MetropolitanCoreArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMetropolitanCoreAreaIdChanging(value);
					this.SendPropertyChanging();
					this._MetropolitanCoreAreaId = value;
					this.SendPropertyChanged("MetropolitanCoreAreaId");
					this.OnMetropolitanCoreAreaIdChanged();
				}
			}
		}
		
		[Association(Name="MetropolitanCoreArea_MetropolitanCoreAreaBoxMapping", Storage="_MetropolitanCoreArea", ThisKey="MetropolitanCoreAreaId", OtherKey="Id", IsForeignKey=true)]
		public MetropolitanCoreArea MetropolitanCoreArea
		{
			get
			{
				return this._MetropolitanCoreArea.Entity;
			}
			set
			{
				MetropolitanCoreArea previousValue = this._MetropolitanCoreArea.Entity;
				if (((previousValue != value) 
							|| (this._MetropolitanCoreArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MetropolitanCoreArea.Entity = null;
						previousValue.MetropolitanCoreAreaBoxMappings.Remove(this);
					}
					this._MetropolitanCoreArea.Entity = value;
					if ((value != null))
					{
						value.MetropolitanCoreAreaBoxMappings.Add(this);
						this._MetropolitanCoreAreaId = value.Id;
					}
					else
					{
						this._MetropolitanCoreAreaId = default(int);
					}
					this.SendPropertyChanged("MetropolitanCoreArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.MetropolitanCoreAreaCoordinates")]
	public partial class MetropolitanCoreAreaCoordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _MetropolitanCoreAreaId;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private int _ShapeId;
		
		private EntityRef<MetropolitanCoreArea> _MetropolitanCoreArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMetropolitanCoreAreaIdChanging(int value);
    partial void OnMetropolitanCoreAreaIdChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnShapeIdChanging(int value);
    partial void OnShapeIdChanged();
    #endregion
		
		public MetropolitanCoreAreaCoordinate()
		{
			this._MetropolitanCoreArea = default(EntityRef<MetropolitanCoreArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_MetropolitanCoreAreaId", DbType="Int NOT NULL")]
		public int MetropolitanCoreAreaId
		{
			get
			{
				return this._MetropolitanCoreAreaId;
			}
			set
			{
				if ((this._MetropolitanCoreAreaId != value))
				{
					if (this._MetropolitanCoreArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMetropolitanCoreAreaIdChanging(value);
					this.SendPropertyChanging();
					this._MetropolitanCoreAreaId = value;
					this.SendPropertyChanged("MetropolitanCoreAreaId");
					this.OnMetropolitanCoreAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_ShapeId", DbType="Int NOT NULL")]
		public int ShapeId
		{
			get
			{
				return this._ShapeId;
			}
			set
			{
				if ((this._ShapeId != value))
				{
					this.OnShapeIdChanging(value);
					this.SendPropertyChanging();
					this._ShapeId = value;
					this.SendPropertyChanged("ShapeId");
					this.OnShapeIdChanged();
				}
			}
		}
		
		[Association(Name="MetropolitanCoreArea_MetropolitanCoreAreaCoordinate", Storage="_MetropolitanCoreArea", ThisKey="MetropolitanCoreAreaId", OtherKey="Id", IsForeignKey=true)]
		public MetropolitanCoreArea MetropolitanCoreArea
		{
			get
			{
				return this._MetropolitanCoreArea.Entity;
			}
			set
			{
				MetropolitanCoreArea previousValue = this._MetropolitanCoreArea.Entity;
				if (((previousValue != value) 
							|| (this._MetropolitanCoreArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MetropolitanCoreArea.Entity = null;
						previousValue.MetropolitanCoreAreaCoordinates.Remove(this);
					}
					this._MetropolitanCoreArea.Entity = value;
					if ((value != null))
					{
						value.MetropolitanCoreAreaCoordinates.Add(this);
						this._MetropolitanCoreAreaId = value.Id;
					}
					else
					{
						this._MetropolitanCoreAreaId = default(int);
					}
					this.SendPropertyChanged("MetropolitanCoreArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.MetropolitanCoreAreas")]
	public partial class MetropolitanCoreArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _Type;
		
		private string _Status;
		
		private string _GEOCODE;
		
		private double _MinLongitude;
		
		private double _MaxLongitude;
		
		private double _MinLatitude;
		
		private double _MaxLatitude;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntitySet<MetropolitanCoreAreaBoxMapping> _MetropolitanCoreAreaBoxMappings;
		
		private EntitySet<MetropolitanCoreAreaCoordinate> _MetropolitanCoreAreaCoordinates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnGEOCODEChanging(string value);
    partial void OnGEOCODEChanged();
    partial void OnMinLongitudeChanging(double value);
    partial void OnMinLongitudeChanged();
    partial void OnMaxLongitudeChanging(double value);
    partial void OnMaxLongitudeChanged();
    partial void OnMinLatitudeChanging(double value);
    partial void OnMinLatitudeChanged();
    partial void OnMaxLatitudeChanging(double value);
    partial void OnMaxLatitudeChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public MetropolitanCoreArea()
		{
			this._MetropolitanCoreAreaBoxMappings = new EntitySet<MetropolitanCoreAreaBoxMapping>(new Action<MetropolitanCoreAreaBoxMapping>(this.attach_MetropolitanCoreAreaBoxMappings), new Action<MetropolitanCoreAreaBoxMapping>(this.detach_MetropolitanCoreAreaBoxMappings));
			this._MetropolitanCoreAreaCoordinates = new EntitySet<MetropolitanCoreAreaCoordinate>(new Action<MetropolitanCoreAreaCoordinate>(this.attach_MetropolitanCoreAreaCoordinates), new Action<MetropolitanCoreAreaCoordinate>(this.detach_MetropolitanCoreAreaCoordinates));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_GEOCODE", DbType="NVarChar(8)")]
		public string GEOCODE
		{
			get
			{
				return this._GEOCODE;
			}
			set
			{
				if ((this._GEOCODE != value))
				{
					this.OnGEOCODEChanging(value);
					this.SendPropertyChanging();
					this._GEOCODE = value;
					this.SendPropertyChanged("GEOCODE");
					this.OnGEOCODEChanged();
				}
			}
		}
		
		[Column(Storage="_MinLongitude", DbType="Float NOT NULL")]
		public double MinLongitude
		{
			get
			{
				return this._MinLongitude;
			}
			set
			{
				if ((this._MinLongitude != value))
				{
					this.OnMinLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLongitude = value;
					this.SendPropertyChanged("MinLongitude");
					this.OnMinLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLongitude", DbType="Float NOT NULL")]
		public double MaxLongitude
		{
			get
			{
				return this._MaxLongitude;
			}
			set
			{
				if ((this._MaxLongitude != value))
				{
					this.OnMaxLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLongitude = value;
					this.SendPropertyChanged("MaxLongitude");
					this.OnMaxLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MinLatitude", DbType="Float NOT NULL")]
		public double MinLatitude
		{
			get
			{
				return this._MinLatitude;
			}
			set
			{
				if ((this._MinLatitude != value))
				{
					this.OnMinLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLatitude = value;
					this.SendPropertyChanged("MinLatitude");
					this.OnMinLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLatitude", DbType="Float NOT NULL")]
		public double MaxLatitude
		{
			get
			{
				return this._MaxLatitude;
			}
			set
			{
				if ((this._MaxLatitude != value))
				{
					this.OnMaxLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLatitude = value;
					this.SendPropertyChanged("MaxLatitude");
					this.OnMaxLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="MetropolitanCoreArea_MetropolitanCoreAreaBoxMapping", Storage="_MetropolitanCoreAreaBoxMappings", ThisKey="Id", OtherKey="MetropolitanCoreAreaId")]
		public EntitySet<MetropolitanCoreAreaBoxMapping> MetropolitanCoreAreaBoxMappings
		{
			get
			{
				return this._MetropolitanCoreAreaBoxMappings;
			}
			set
			{
				this._MetropolitanCoreAreaBoxMappings.Assign(value);
			}
		}
		
		[Association(Name="MetropolitanCoreArea_MetropolitanCoreAreaCoordinate", Storage="_MetropolitanCoreAreaCoordinates", ThisKey="Id", OtherKey="MetropolitanCoreAreaId")]
		public EntitySet<MetropolitanCoreAreaCoordinate> MetropolitanCoreAreaCoordinates
		{
			get
			{
				return this._MetropolitanCoreAreaCoordinates;
			}
			set
			{
				this._MetropolitanCoreAreaCoordinates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MetropolitanCoreAreaBoxMappings(MetropolitanCoreAreaBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.MetropolitanCoreArea = this;
		}
		
		private void detach_MetropolitanCoreAreaBoxMappings(MetropolitanCoreAreaBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.MetropolitanCoreArea = null;
		}
		
		private void attach_MetropolitanCoreAreaCoordinates(MetropolitanCoreAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.MetropolitanCoreArea = this;
		}
		
		private void detach_MetropolitanCoreAreaCoordinates(MetropolitanCoreAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.MetropolitanCoreArea = null;
		}
	}
	
	[Table(Name="dbo.MetropolitanCoreAreaZipCodeMappings")]
	public partial class MetropolitanCoreAreaZipCodeMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _MetropolitanCoreAreaId;
		
		private int _ThreeZipAreaId;
		
		private string _ThreeZipCode;
		
		private int _FiveZipAreaId;
		
		private string _FiveZipAreaCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMetropolitanCoreAreaIdChanging(int value);
    partial void OnMetropolitanCoreAreaIdChanged();
    partial void OnThreeZipAreaIdChanging(int value);
    partial void OnThreeZipAreaIdChanged();
    partial void OnThreeZipCodeChanging(string value);
    partial void OnThreeZipCodeChanged();
    partial void OnFiveZipAreaIdChanging(int value);
    partial void OnFiveZipAreaIdChanged();
    partial void OnFiveZipAreaCodeChanging(string value);
    partial void OnFiveZipAreaCodeChanged();
    #endregion
		
		public MetropolitanCoreAreaZipCodeMapping()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_MetropolitanCoreAreaId", DbType="Int NOT NULL")]
		public int MetropolitanCoreAreaId
		{
			get
			{
				return this._MetropolitanCoreAreaId;
			}
			set
			{
				if ((this._MetropolitanCoreAreaId != value))
				{
					this.OnMetropolitanCoreAreaIdChanging(value);
					this.SendPropertyChanging();
					this._MetropolitanCoreAreaId = value;
					this.SendPropertyChanged("MetropolitanCoreAreaId");
					this.OnMetropolitanCoreAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_ThreeZipAreaId", DbType="Int NOT NULL")]
		public int ThreeZipAreaId
		{
			get
			{
				return this._ThreeZipAreaId;
			}
			set
			{
				if ((this._ThreeZipAreaId != value))
				{
					this.OnThreeZipAreaIdChanging(value);
					this.SendPropertyChanging();
					this._ThreeZipAreaId = value;
					this.SendPropertyChanged("ThreeZipAreaId");
					this.OnThreeZipAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_ThreeZipCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string ThreeZipCode
		{
			get
			{
				return this._ThreeZipCode;
			}
			set
			{
				if ((this._ThreeZipCode != value))
				{
					this.OnThreeZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ThreeZipCode = value;
					this.SendPropertyChanged("ThreeZipCode");
					this.OnThreeZipCodeChanged();
				}
			}
		}
		
		[Column(Storage="_FiveZipAreaId", DbType="Int NOT NULL")]
		public int FiveZipAreaId
		{
			get
			{
				return this._FiveZipAreaId;
			}
			set
			{
				if ((this._FiveZipAreaId != value))
				{
					this.OnFiveZipAreaIdChanging(value);
					this.SendPropertyChanging();
					this._FiveZipAreaId = value;
					this.SendPropertyChanged("FiveZipAreaId");
					this.OnFiveZipAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_FiveZipAreaCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string FiveZipAreaCode
		{
			get
			{
				return this._FiveZipAreaCode;
			}
			set
			{
				if ((this._FiveZipAreaCode != value))
				{
					this.OnFiveZipAreaCodeChanging(value);
					this.SendPropertyChanging();
					this._FiveZipAreaCode = value;
					this.SendPropertyChanged("FiveZipAreaCode");
					this.OnFiveZipAreaCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SecondarySchoolAreaBoxMappings")]
	public partial class SecondarySchoolAreaBoxMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BoxId;
		
		private int _SecondarySchoolAreaId;
		
		private EntityRef<SecondarySchoolArea> _SecondarySchoolArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBoxIdChanging(int value);
    partial void OnBoxIdChanged();
    partial void OnSecondarySchoolAreaIdChanging(int value);
    partial void OnSecondarySchoolAreaIdChanged();
    #endregion
		
		public SecondarySchoolAreaBoxMapping()
		{
			this._SecondarySchoolArea = default(EntityRef<SecondarySchoolArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_BoxId", DbType="Int NOT NULL")]
		public int BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[Column(Storage="_SecondarySchoolAreaId", DbType="Int NOT NULL")]
		public int SecondarySchoolAreaId
		{
			get
			{
				return this._SecondarySchoolAreaId;
			}
			set
			{
				if ((this._SecondarySchoolAreaId != value))
				{
					if (this._SecondarySchoolArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecondarySchoolAreaIdChanging(value);
					this.SendPropertyChanging();
					this._SecondarySchoolAreaId = value;
					this.SendPropertyChanged("SecondarySchoolAreaId");
					this.OnSecondarySchoolAreaIdChanged();
				}
			}
		}
		
		[Association(Name="SecondarySchoolArea_SecondarySchoolAreaBoxMapping", Storage="_SecondarySchoolArea", ThisKey="SecondarySchoolAreaId", OtherKey="Id", IsForeignKey=true)]
		public SecondarySchoolArea SecondarySchoolArea
		{
			get
			{
				return this._SecondarySchoolArea.Entity;
			}
			set
			{
				SecondarySchoolArea previousValue = this._SecondarySchoolArea.Entity;
				if (((previousValue != value) 
							|| (this._SecondarySchoolArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecondarySchoolArea.Entity = null;
						previousValue.SecondarySchoolAreaBoxMappings.Remove(this);
					}
					this._SecondarySchoolArea.Entity = value;
					if ((value != null))
					{
						value.SecondarySchoolAreaBoxMappings.Add(this);
						this._SecondarySchoolAreaId = value.Id;
					}
					else
					{
						this._SecondarySchoolAreaId = default(int);
					}
					this.SendPropertyChanged("SecondarySchoolArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SecondarySchoolAreaCoordinates")]
	public partial class SecondarySchoolAreaCoordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SecondarySchoolAreaId;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntityRef<SecondarySchoolArea> _SecondarySchoolArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSecondarySchoolAreaIdChanging(int value);
    partial void OnSecondarySchoolAreaIdChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public SecondarySchoolAreaCoordinate()
		{
			this._SecondarySchoolArea = default(EntityRef<SecondarySchoolArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_SecondarySchoolAreaId", DbType="Int NOT NULL")]
		public int SecondarySchoolAreaId
		{
			get
			{
				return this._SecondarySchoolAreaId;
			}
			set
			{
				if ((this._SecondarySchoolAreaId != value))
				{
					if (this._SecondarySchoolArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecondarySchoolAreaIdChanging(value);
					this.SendPropertyChanging();
					this._SecondarySchoolAreaId = value;
					this.SendPropertyChanged("SecondarySchoolAreaId");
					this.OnSecondarySchoolAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="SecondarySchoolArea_SecondarySchoolAreaCoordinate", Storage="_SecondarySchoolArea", ThisKey="SecondarySchoolAreaId", OtherKey="Id", IsForeignKey=true)]
		public SecondarySchoolArea SecondarySchoolArea
		{
			get
			{
				return this._SecondarySchoolArea.Entity;
			}
			set
			{
				SecondarySchoolArea previousValue = this._SecondarySchoolArea.Entity;
				if (((previousValue != value) 
							|| (this._SecondarySchoolArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecondarySchoolArea.Entity = null;
						previousValue.SecondarySchoolAreaCoordinates.Remove(this);
					}
					this._SecondarySchoolArea.Entity = value;
					if ((value != null))
					{
						value.SecondarySchoolAreaCoordinates.Add(this);
						this._SecondarySchoolAreaId = value.Id;
					}
					else
					{
						this._SecondarySchoolAreaId = default(int);
					}
					this.SendPropertyChanged("SecondarySchoolArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SecondarySchoolAreas")]
	public partial class SecondarySchoolArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _StateCode;
		
		private string _LSAD;
		
		private string _LSAD_TRAN;
		
		private double _MinLongitude;
		
		private double _MaxLongitude;
		
		private double _MinLatitude;
		
		private double _MaxLatitude;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntitySet<SecondarySchoolAreaBoxMapping> _SecondarySchoolAreaBoxMappings;
		
		private EntitySet<SecondarySchoolAreaCoordinate> _SecondarySchoolAreaCoordinates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    partial void OnLSADChanging(string value);
    partial void OnLSADChanged();
    partial void OnLSAD_TRANChanging(string value);
    partial void OnLSAD_TRANChanged();
    partial void OnMinLongitudeChanging(double value);
    partial void OnMinLongitudeChanged();
    partial void OnMaxLongitudeChanging(double value);
    partial void OnMaxLongitudeChanged();
    partial void OnMinLatitudeChanging(double value);
    partial void OnMinLatitudeChanged();
    partial void OnMaxLatitudeChanging(double value);
    partial void OnMaxLatitudeChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public SecondarySchoolArea()
		{
			this._SecondarySchoolAreaBoxMappings = new EntitySet<SecondarySchoolAreaBoxMapping>(new Action<SecondarySchoolAreaBoxMapping>(this.attach_SecondarySchoolAreaBoxMappings), new Action<SecondarySchoolAreaBoxMapping>(this.detach_SecondarySchoolAreaBoxMappings));
			this._SecondarySchoolAreaCoordinates = new EntitySet<SecondarySchoolAreaCoordinate>(new Action<SecondarySchoolAreaCoordinate>(this.attach_SecondarySchoolAreaCoordinates), new Action<SecondarySchoolAreaCoordinate>(this.detach_SecondarySchoolAreaCoordinates));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_StateCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string LSAD
		{
			get
			{
				return this._LSAD;
			}
			set
			{
				if ((this._LSAD != value))
				{
					this.OnLSADChanging(value);
					this.SendPropertyChanging();
					this._LSAD = value;
					this.SendPropertyChanged("LSAD");
					this.OnLSADChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD_TRAN", DbType="NVarChar(64)")]
		public string LSAD_TRAN
		{
			get
			{
				return this._LSAD_TRAN;
			}
			set
			{
				if ((this._LSAD_TRAN != value))
				{
					this.OnLSAD_TRANChanging(value);
					this.SendPropertyChanging();
					this._LSAD_TRAN = value;
					this.SendPropertyChanged("LSAD_TRAN");
					this.OnLSAD_TRANChanged();
				}
			}
		}
		
		[Column(Storage="_MinLongitude", DbType="Float NOT NULL")]
		public double MinLongitude
		{
			get
			{
				return this._MinLongitude;
			}
			set
			{
				if ((this._MinLongitude != value))
				{
					this.OnMinLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLongitude = value;
					this.SendPropertyChanged("MinLongitude");
					this.OnMinLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLongitude", DbType="Float NOT NULL")]
		public double MaxLongitude
		{
			get
			{
				return this._MaxLongitude;
			}
			set
			{
				if ((this._MaxLongitude != value))
				{
					this.OnMaxLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLongitude = value;
					this.SendPropertyChanged("MaxLongitude");
					this.OnMaxLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MinLatitude", DbType="Float NOT NULL")]
		public double MinLatitude
		{
			get
			{
				return this._MinLatitude;
			}
			set
			{
				if ((this._MinLatitude != value))
				{
					this.OnMinLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLatitude = value;
					this.SendPropertyChanged("MinLatitude");
					this.OnMinLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLatitude", DbType="Float NOT NULL")]
		public double MaxLatitude
		{
			get
			{
				return this._MaxLatitude;
			}
			set
			{
				if ((this._MaxLatitude != value))
				{
					this.OnMaxLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLatitude = value;
					this.SendPropertyChanged("MaxLatitude");
					this.OnMaxLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="SecondarySchoolArea_SecondarySchoolAreaBoxMapping", Storage="_SecondarySchoolAreaBoxMappings", ThisKey="Id", OtherKey="SecondarySchoolAreaId")]
		public EntitySet<SecondarySchoolAreaBoxMapping> SecondarySchoolAreaBoxMappings
		{
			get
			{
				return this._SecondarySchoolAreaBoxMappings;
			}
			set
			{
				this._SecondarySchoolAreaBoxMappings.Assign(value);
			}
		}
		
		[Association(Name="SecondarySchoolArea_SecondarySchoolAreaCoordinate", Storage="_SecondarySchoolAreaCoordinates", ThisKey="Id", OtherKey="SecondarySchoolAreaId")]
		public EntitySet<SecondarySchoolAreaCoordinate> SecondarySchoolAreaCoordinates
		{
			get
			{
				return this._SecondarySchoolAreaCoordinates;
			}
			set
			{
				this._SecondarySchoolAreaCoordinates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SecondarySchoolAreaBoxMappings(SecondarySchoolAreaBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.SecondarySchoolArea = this;
		}
		
		private void detach_SecondarySchoolAreaBoxMappings(SecondarySchoolAreaBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.SecondarySchoolArea = null;
		}
		
		private void attach_SecondarySchoolAreaCoordinates(SecondarySchoolAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.SecondarySchoolArea = this;
		}
		
		private void detach_SecondarySchoolAreaCoordinates(SecondarySchoolAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.SecondarySchoolArea = null;
		}
	}
	
	[Table(Name="dbo.States")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public State()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(24) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(64)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ThreeZipAreaCoordinates")]
	public partial class ThreeZipAreaCoordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _ThreeZipAreaId;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private int _ShapeId;
		
		private EntityRef<ThreeZipArea> _ThreeZipArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnThreeZipAreaIdChanging(int value);
    partial void OnThreeZipAreaIdChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnShapeIdChanging(int value);
    partial void OnShapeIdChanged();
    #endregion
		
		public ThreeZipAreaCoordinate()
		{
			this._ThreeZipArea = default(EntityRef<ThreeZipArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_ThreeZipAreaId", DbType="Int NOT NULL")]
		public int ThreeZipAreaId
		{
			get
			{
				return this._ThreeZipAreaId;
			}
			set
			{
				if ((this._ThreeZipAreaId != value))
				{
					if (this._ThreeZipArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThreeZipAreaIdChanging(value);
					this.SendPropertyChanging();
					this._ThreeZipAreaId = value;
					this.SendPropertyChanged("ThreeZipAreaId");
					this.OnThreeZipAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_ShapeId", DbType="Int NOT NULL")]
		public int ShapeId
		{
			get
			{
				return this._ShapeId;
			}
			set
			{
				if ((this._ShapeId != value))
				{
					this.OnShapeIdChanging(value);
					this.SendPropertyChanging();
					this._ShapeId = value;
					this.SendPropertyChanged("ShapeId");
					this.OnShapeIdChanged();
				}
			}
		}
		
		[Association(Name="ThreeZipArea_ThreeZipAreaCoordinate", Storage="_ThreeZipArea", ThisKey="ThreeZipAreaId", OtherKey="Id", IsForeignKey=true)]
		public ThreeZipArea ThreeZipArea
		{
			get
			{
				return this._ThreeZipArea.Entity;
			}
			set
			{
				ThreeZipArea previousValue = this._ThreeZipArea.Entity;
				if (((previousValue != value) 
							|| (this._ThreeZipArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThreeZipArea.Entity = null;
						previousValue.ThreeZipAreaCoordinates.Remove(this);
					}
					this._ThreeZipArea.Entity = value;
					if ((value != null))
					{
						value.ThreeZipAreaCoordinates.Add(this);
						this._ThreeZipAreaId = value.Id;
					}
					else
					{
						this._ThreeZipAreaId = default(int);
					}
					this.SendPropertyChanged("ThreeZipArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ThreeZipAreas")]
	public partial class ThreeZipArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Code;
		
		private string _LSAD;
		
		private string _LSADTrans;
		
		private double _MinLongitude;
		
		private double _MaxLongitude;
		
		private double _MinLatitude;
		
		private double _MaxLatitude;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private string _StateCode;
		
		private EntitySet<BlockGroupMapping> _BlockGroupMappings;
		
		private EntitySet<ThreeZipAreaCoordinate> _ThreeZipAreaCoordinates;
		
		private EntitySet<ThreeZipBoxMapping> _ThreeZipBoxMappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnLSADChanging(string value);
    partial void OnLSADChanged();
    partial void OnLSADTransChanging(string value);
    partial void OnLSADTransChanged();
    partial void OnMinLongitudeChanging(double value);
    partial void OnMinLongitudeChanged();
    partial void OnMaxLongitudeChanging(double value);
    partial void OnMaxLongitudeChanged();
    partial void OnMinLatitudeChanging(double value);
    partial void OnMinLatitudeChanged();
    partial void OnMaxLatitudeChanging(double value);
    partial void OnMaxLatitudeChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    #endregion
		
		public ThreeZipArea()
		{
			this._BlockGroupMappings = new EntitySet<BlockGroupMapping>(new Action<BlockGroupMapping>(this.attach_BlockGroupMappings), new Action<BlockGroupMapping>(this.detach_BlockGroupMappings));
			this._ThreeZipAreaCoordinates = new EntitySet<ThreeZipAreaCoordinate>(new Action<ThreeZipAreaCoordinate>(this.attach_ThreeZipAreaCoordinates), new Action<ThreeZipAreaCoordinate>(this.detach_ThreeZipAreaCoordinates));
			this._ThreeZipBoxMappings = new EntitySet<ThreeZipBoxMapping>(new Action<ThreeZipBoxMapping>(this.attach_ThreeZipBoxMappings), new Action<ThreeZipBoxMapping>(this.detach_ThreeZipBoxMappings));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD", DbType="NVarChar(8)")]
		public string LSAD
		{
			get
			{
				return this._LSAD;
			}
			set
			{
				if ((this._LSAD != value))
				{
					this.OnLSADChanging(value);
					this.SendPropertyChanging();
					this._LSAD = value;
					this.SendPropertyChanged("LSAD");
					this.OnLSADChanged();
				}
			}
		}
		
		[Column(Storage="_LSADTrans", DbType="NVarChar(64)")]
		public string LSADTrans
		{
			get
			{
				return this._LSADTrans;
			}
			set
			{
				if ((this._LSADTrans != value))
				{
					this.OnLSADTransChanging(value);
					this.SendPropertyChanging();
					this._LSADTrans = value;
					this.SendPropertyChanged("LSADTrans");
					this.OnLSADTransChanged();
				}
			}
		}
		
		[Column(Storage="_MinLongitude", DbType="Float NOT NULL")]
		public double MinLongitude
		{
			get
			{
				return this._MinLongitude;
			}
			set
			{
				if ((this._MinLongitude != value))
				{
					this.OnMinLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLongitude = value;
					this.SendPropertyChanged("MinLongitude");
					this.OnMinLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLongitude", DbType="Float NOT NULL")]
		public double MaxLongitude
		{
			get
			{
				return this._MaxLongitude;
			}
			set
			{
				if ((this._MaxLongitude != value))
				{
					this.OnMaxLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLongitude = value;
					this.SendPropertyChanged("MaxLongitude");
					this.OnMaxLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MinLatitude", DbType="Float NOT NULL")]
		public double MinLatitude
		{
			get
			{
				return this._MinLatitude;
			}
			set
			{
				if ((this._MinLatitude != value))
				{
					this.OnMinLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLatitude = value;
					this.SendPropertyChanged("MinLatitude");
					this.OnMinLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLatitude", DbType="Float NOT NULL")]
		public double MaxLatitude
		{
			get
			{
				return this._MaxLatitude;
			}
			set
			{
				if ((this._MaxLatitude != value))
				{
					this.OnMaxLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLatitude = value;
					this.SendPropertyChanged("MaxLatitude");
					this.OnMaxLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_StateCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[Association(Name="ThreeZipArea_BlockGroupMapping", Storage="_BlockGroupMappings", ThisKey="Id", OtherKey="ThreeZipAreaId")]
		public EntitySet<BlockGroupMapping> BlockGroupMappings
		{
			get
			{
				return this._BlockGroupMappings;
			}
			set
			{
				this._BlockGroupMappings.Assign(value);
			}
		}
		
		[Association(Name="ThreeZipArea_ThreeZipAreaCoordinate", Storage="_ThreeZipAreaCoordinates", ThisKey="Id", OtherKey="ThreeZipAreaId")]
		public EntitySet<ThreeZipAreaCoordinate> ThreeZipAreaCoordinates
		{
			get
			{
				return this._ThreeZipAreaCoordinates;
			}
			set
			{
				this._ThreeZipAreaCoordinates.Assign(value);
			}
		}
		
		[Association(Name="ThreeZipArea_ThreeZipBoxMapping", Storage="_ThreeZipBoxMappings", ThisKey="Id", OtherKey="ThreeZipAreaId")]
		public EntitySet<ThreeZipBoxMapping> ThreeZipBoxMappings
		{
			get
			{
				return this._ThreeZipBoxMappings;
			}
			set
			{
				this._ThreeZipBoxMappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BlockGroupMappings(BlockGroupMapping entity)
		{
			this.SendPropertyChanging();
			entity.ThreeZipArea = this;
		}
		
		private void detach_BlockGroupMappings(BlockGroupMapping entity)
		{
			this.SendPropertyChanging();
			entity.ThreeZipArea = null;
		}
		
		private void attach_ThreeZipAreaCoordinates(ThreeZipAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.ThreeZipArea = this;
		}
		
		private void detach_ThreeZipAreaCoordinates(ThreeZipAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.ThreeZipArea = null;
		}
		
		private void attach_ThreeZipBoxMappings(ThreeZipBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.ThreeZipArea = this;
		}
		
		private void detach_ThreeZipBoxMappings(ThreeZipBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.ThreeZipArea = null;
		}
	}
	
	[Table(Name="dbo.ThreeZipBoxMappings")]
	public partial class ThreeZipBoxMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BoxId;
		
		private int _ThreeZipAreaId;
		
		private EntityRef<ThreeZipArea> _ThreeZipArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBoxIdChanging(int value);
    partial void OnBoxIdChanged();
    partial void OnThreeZipAreaIdChanging(int value);
    partial void OnThreeZipAreaIdChanged();
    #endregion
		
		public ThreeZipBoxMapping()
		{
			this._ThreeZipArea = default(EntityRef<ThreeZipArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_BoxId", DbType="Int NOT NULL")]
		public int BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[Column(Storage="_ThreeZipAreaId", DbType="Int NOT NULL")]
		public int ThreeZipAreaId
		{
			get
			{
				return this._ThreeZipAreaId;
			}
			set
			{
				if ((this._ThreeZipAreaId != value))
				{
					if (this._ThreeZipArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThreeZipAreaIdChanging(value);
					this.SendPropertyChanging();
					this._ThreeZipAreaId = value;
					this.SendPropertyChanged("ThreeZipAreaId");
					this.OnThreeZipAreaIdChanged();
				}
			}
		}
		
		[Association(Name="ThreeZipArea_ThreeZipBoxMapping", Storage="_ThreeZipArea", ThisKey="ThreeZipAreaId", OtherKey="Id", IsForeignKey=true)]
		public ThreeZipArea ThreeZipArea
		{
			get
			{
				return this._ThreeZipArea.Entity;
			}
			set
			{
				ThreeZipArea previousValue = this._ThreeZipArea.Entity;
				if (((previousValue != value) 
							|| (this._ThreeZipArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThreeZipArea.Entity = null;
						previousValue.ThreeZipBoxMappings.Remove(this);
					}
					this._ThreeZipArea.Entity = value;
					if ((value != null))
					{
						value.ThreeZipBoxMappings.Add(this);
						this._ThreeZipAreaId = value.Id;
					}
					else
					{
						this._ThreeZipAreaId = default(int);
					}
					this.SendPropertyChanged("ThreeZipArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TractBoxMappings")]
	public partial class TractBoxMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BoxId;
		
		private int _TractId;
		
		private EntityRef<Tract> _Tract;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBoxIdChanging(int value);
    partial void OnBoxIdChanged();
    partial void OnTractIdChanging(int value);
    partial void OnTractIdChanged();
    #endregion
		
		public TractBoxMapping()
		{
			this._Tract = default(EntityRef<Tract>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_BoxId", DbType="Int NOT NULL")]
		public int BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[Column(Storage="_TractId", DbType="Int NOT NULL")]
		public int TractId
		{
			get
			{
				return this._TractId;
			}
			set
			{
				if ((this._TractId != value))
				{
					if (this._Tract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTractIdChanging(value);
					this.SendPropertyChanging();
					this._TractId = value;
					this.SendPropertyChanged("TractId");
					this.OnTractIdChanged();
				}
			}
		}
		
		[Association(Name="Tract_TractBoxMapping", Storage="_Tract", ThisKey="TractId", OtherKey="Id", IsForeignKey=true)]
		public Tract Tract
		{
			get
			{
				return this._Tract.Entity;
			}
			set
			{
				Tract previousValue = this._Tract.Entity;
				if (((previousValue != value) 
							|| (this._Tract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tract.Entity = null;
						previousValue.TractBoxMappings.Remove(this);
					}
					this._Tract.Entity = value;
					if ((value != null))
					{
						value.TractBoxMappings.Add(this);
						this._TractId = value.Id;
					}
					else
					{
						this._TractId = default(int);
					}
					this.SendPropertyChanged("Tract");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TractCoordinates")]
	public partial class TractCoordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _TractId;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntityRef<Tract> _Tract;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTractIdChanging(int value);
    partial void OnTractIdChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public TractCoordinate()
		{
			this._Tract = default(EntityRef<Tract>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_TractId", DbType="Int NOT NULL")]
		public int TractId
		{
			get
			{
				return this._TractId;
			}
			set
			{
				if ((this._TractId != value))
				{
					if (this._Tract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTractIdChanging(value);
					this.SendPropertyChanging();
					this._TractId = value;
					this.SendPropertyChanged("TractId");
					this.OnTractIdChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="Tract_TractCoordinate", Storage="_Tract", ThisKey="TractId", OtherKey="Id", IsForeignKey=true)]
		public Tract Tract
		{
			get
			{
				return this._Tract.Entity;
			}
			set
			{
				Tract previousValue = this._Tract.Entity;
				if (((previousValue != value) 
							|| (this._Tract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tract.Entity = null;
						previousValue.TractCoordinates.Remove(this);
					}
					this._Tract.Entity = value;
					if ((value != null))
					{
						value.TractCoordinates.Add(this);
						this._TractId = value.Id;
					}
					else
					{
						this._TractId = default(int);
					}
					this.SendPropertyChanged("Tract");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.UnifiedSchoolAreaBoxMappings")]
	public partial class UnifiedSchoolAreaBoxMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BoxId;
		
		private int _UnifiedSchoolAreaId;
		
		private EntityRef<UnifiedSchoolArea> _UnifiedSchoolArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBoxIdChanging(int value);
    partial void OnBoxIdChanged();
    partial void OnUnifiedSchoolAreaIdChanging(int value);
    partial void OnUnifiedSchoolAreaIdChanged();
    #endregion
		
		public UnifiedSchoolAreaBoxMapping()
		{
			this._UnifiedSchoolArea = default(EntityRef<UnifiedSchoolArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_BoxId", DbType="Int NOT NULL")]
		public int BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[Column(Storage="_UnifiedSchoolAreaId", DbType="Int NOT NULL")]
		public int UnifiedSchoolAreaId
		{
			get
			{
				return this._UnifiedSchoolAreaId;
			}
			set
			{
				if ((this._UnifiedSchoolAreaId != value))
				{
					if (this._UnifiedSchoolArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnifiedSchoolAreaIdChanging(value);
					this.SendPropertyChanging();
					this._UnifiedSchoolAreaId = value;
					this.SendPropertyChanged("UnifiedSchoolAreaId");
					this.OnUnifiedSchoolAreaIdChanged();
				}
			}
		}
		
		[Association(Name="UnifiedSchoolArea_UnifiedSchoolAreaBoxMapping", Storage="_UnifiedSchoolArea", ThisKey="UnifiedSchoolAreaId", OtherKey="Id", IsForeignKey=true)]
		public UnifiedSchoolArea UnifiedSchoolArea
		{
			get
			{
				return this._UnifiedSchoolArea.Entity;
			}
			set
			{
				UnifiedSchoolArea previousValue = this._UnifiedSchoolArea.Entity;
				if (((previousValue != value) 
							|| (this._UnifiedSchoolArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnifiedSchoolArea.Entity = null;
						previousValue.UnifiedSchoolAreaBoxMappings.Remove(this);
					}
					this._UnifiedSchoolArea.Entity = value;
					if ((value != null))
					{
						value.UnifiedSchoolAreaBoxMappings.Add(this);
						this._UnifiedSchoolAreaId = value.Id;
					}
					else
					{
						this._UnifiedSchoolAreaId = default(int);
					}
					this.SendPropertyChanged("UnifiedSchoolArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.UnifiedSchoolAreaCoordinates")]
	public partial class UnifiedSchoolAreaCoordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UnifiedSchoolAreaId;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntityRef<UnifiedSchoolArea> _UnifiedSchoolArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUnifiedSchoolAreaIdChanging(int value);
    partial void OnUnifiedSchoolAreaIdChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public UnifiedSchoolAreaCoordinate()
		{
			this._UnifiedSchoolArea = default(EntityRef<UnifiedSchoolArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_UnifiedSchoolAreaId", DbType="Int NOT NULL")]
		public int UnifiedSchoolAreaId
		{
			get
			{
				return this._UnifiedSchoolAreaId;
			}
			set
			{
				if ((this._UnifiedSchoolAreaId != value))
				{
					if (this._UnifiedSchoolArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnifiedSchoolAreaIdChanging(value);
					this.SendPropertyChanging();
					this._UnifiedSchoolAreaId = value;
					this.SendPropertyChanged("UnifiedSchoolAreaId");
					this.OnUnifiedSchoolAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="UnifiedSchoolArea_UnifiedSchoolAreaCoordinate", Storage="_UnifiedSchoolArea", ThisKey="UnifiedSchoolAreaId", OtherKey="Id", IsForeignKey=true)]
		public UnifiedSchoolArea UnifiedSchoolArea
		{
			get
			{
				return this._UnifiedSchoolArea.Entity;
			}
			set
			{
				UnifiedSchoolArea previousValue = this._UnifiedSchoolArea.Entity;
				if (((previousValue != value) 
							|| (this._UnifiedSchoolArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnifiedSchoolArea.Entity = null;
						previousValue.UnifiedSchoolAreaCoordinates.Remove(this);
					}
					this._UnifiedSchoolArea.Entity = value;
					if ((value != null))
					{
						value.UnifiedSchoolAreaCoordinates.Add(this);
						this._UnifiedSchoolAreaId = value.Id;
					}
					else
					{
						this._UnifiedSchoolAreaId = default(int);
					}
					this.SendPropertyChanged("UnifiedSchoolArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.UnifiedSchoolAreas")]
	public partial class UnifiedSchoolArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _StateCode;
		
		private string _LSAD;
		
		private string _LSAD_TRAN;
		
		private double _MinLongitude;
		
		private double _MaxLongitude;
		
		private double _MinLatitude;
		
		private double _MaxLatitude;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntitySet<UnifiedSchoolAreaBoxMapping> _UnifiedSchoolAreaBoxMappings;
		
		private EntitySet<UnifiedSchoolAreaCoordinate> _UnifiedSchoolAreaCoordinates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    partial void OnLSADChanging(string value);
    partial void OnLSADChanged();
    partial void OnLSAD_TRANChanging(string value);
    partial void OnLSAD_TRANChanged();
    partial void OnMinLongitudeChanging(double value);
    partial void OnMinLongitudeChanged();
    partial void OnMaxLongitudeChanging(double value);
    partial void OnMaxLongitudeChanged();
    partial void OnMinLatitudeChanging(double value);
    partial void OnMinLatitudeChanged();
    partial void OnMaxLatitudeChanging(double value);
    partial void OnMaxLatitudeChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public UnifiedSchoolArea()
		{
			this._UnifiedSchoolAreaBoxMappings = new EntitySet<UnifiedSchoolAreaBoxMapping>(new Action<UnifiedSchoolAreaBoxMapping>(this.attach_UnifiedSchoolAreaBoxMappings), new Action<UnifiedSchoolAreaBoxMapping>(this.detach_UnifiedSchoolAreaBoxMappings));
			this._UnifiedSchoolAreaCoordinates = new EntitySet<UnifiedSchoolAreaCoordinate>(new Action<UnifiedSchoolAreaCoordinate>(this.attach_UnifiedSchoolAreaCoordinates), new Action<UnifiedSchoolAreaCoordinate>(this.detach_UnifiedSchoolAreaCoordinates));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_StateCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string LSAD
		{
			get
			{
				return this._LSAD;
			}
			set
			{
				if ((this._LSAD != value))
				{
					this.OnLSADChanging(value);
					this.SendPropertyChanging();
					this._LSAD = value;
					this.SendPropertyChanged("LSAD");
					this.OnLSADChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD_TRAN", DbType="NVarChar(64)")]
		public string LSAD_TRAN
		{
			get
			{
				return this._LSAD_TRAN;
			}
			set
			{
				if ((this._LSAD_TRAN != value))
				{
					this.OnLSAD_TRANChanging(value);
					this.SendPropertyChanging();
					this._LSAD_TRAN = value;
					this.SendPropertyChanged("LSAD_TRAN");
					this.OnLSAD_TRANChanged();
				}
			}
		}
		
		[Column(Storage="_MinLongitude", DbType="Float NOT NULL")]
		public double MinLongitude
		{
			get
			{
				return this._MinLongitude;
			}
			set
			{
				if ((this._MinLongitude != value))
				{
					this.OnMinLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLongitude = value;
					this.SendPropertyChanged("MinLongitude");
					this.OnMinLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLongitude", DbType="Float NOT NULL")]
		public double MaxLongitude
		{
			get
			{
				return this._MaxLongitude;
			}
			set
			{
				if ((this._MaxLongitude != value))
				{
					this.OnMaxLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLongitude = value;
					this.SendPropertyChanged("MaxLongitude");
					this.OnMaxLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MinLatitude", DbType="Float NOT NULL")]
		public double MinLatitude
		{
			get
			{
				return this._MinLatitude;
			}
			set
			{
				if ((this._MinLatitude != value))
				{
					this.OnMinLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLatitude = value;
					this.SendPropertyChanged("MinLatitude");
					this.OnMinLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLatitude", DbType="Float NOT NULL")]
		public double MaxLatitude
		{
			get
			{
				return this._MaxLatitude;
			}
			set
			{
				if ((this._MaxLatitude != value))
				{
					this.OnMaxLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLatitude = value;
					this.SendPropertyChanged("MaxLatitude");
					this.OnMaxLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="UnifiedSchoolArea_UnifiedSchoolAreaBoxMapping", Storage="_UnifiedSchoolAreaBoxMappings", ThisKey="Id", OtherKey="UnifiedSchoolAreaId")]
		public EntitySet<UnifiedSchoolAreaBoxMapping> UnifiedSchoolAreaBoxMappings
		{
			get
			{
				return this._UnifiedSchoolAreaBoxMappings;
			}
			set
			{
				this._UnifiedSchoolAreaBoxMappings.Assign(value);
			}
		}
		
		[Association(Name="UnifiedSchoolArea_UnifiedSchoolAreaCoordinate", Storage="_UnifiedSchoolAreaCoordinates", ThisKey="Id", OtherKey="UnifiedSchoolAreaId")]
		public EntitySet<UnifiedSchoolAreaCoordinate> UnifiedSchoolAreaCoordinates
		{
			get
			{
				return this._UnifiedSchoolAreaCoordinates;
			}
			set
			{
				this._UnifiedSchoolAreaCoordinates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UnifiedSchoolAreaBoxMappings(UnifiedSchoolAreaBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.UnifiedSchoolArea = this;
		}
		
		private void detach_UnifiedSchoolAreaBoxMappings(UnifiedSchoolAreaBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.UnifiedSchoolArea = null;
		}
		
		private void attach_UnifiedSchoolAreaCoordinates(UnifiedSchoolAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.UnifiedSchoolArea = this;
		}
		
		private void detach_UnifiedSchoolAreaCoordinates(UnifiedSchoolAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.UnifiedSchoolArea = null;
		}
	}
	
	[Table(Name="dbo.UpperSenateAreaBoxMappings")]
	public partial class UpperSenateAreaBoxMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BoxId;
		
		private int _UpperSenateAreaId;
		
		private EntityRef<UpperSenateArea> _UpperSenateArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBoxIdChanging(int value);
    partial void OnBoxIdChanged();
    partial void OnUpperSenateAreaIdChanging(int value);
    partial void OnUpperSenateAreaIdChanged();
    #endregion
		
		public UpperSenateAreaBoxMapping()
		{
			this._UpperSenateArea = default(EntityRef<UpperSenateArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_BoxId", DbType="Int NOT NULL")]
		public int BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[Column(Storage="_UpperSenateAreaId", DbType="Int NOT NULL")]
		public int UpperSenateAreaId
		{
			get
			{
				return this._UpperSenateAreaId;
			}
			set
			{
				if ((this._UpperSenateAreaId != value))
				{
					if (this._UpperSenateArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpperSenateAreaIdChanging(value);
					this.SendPropertyChanging();
					this._UpperSenateAreaId = value;
					this.SendPropertyChanged("UpperSenateAreaId");
					this.OnUpperSenateAreaIdChanged();
				}
			}
		}
		
		[Association(Name="UpperSenateArea_UpperSenateAreaBoxMapping", Storage="_UpperSenateArea", ThisKey="UpperSenateAreaId", OtherKey="Id", IsForeignKey=true)]
		public UpperSenateArea UpperSenateArea
		{
			get
			{
				return this._UpperSenateArea.Entity;
			}
			set
			{
				UpperSenateArea previousValue = this._UpperSenateArea.Entity;
				if (((previousValue != value) 
							|| (this._UpperSenateArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UpperSenateArea.Entity = null;
						previousValue.UpperSenateAreaBoxMappings.Remove(this);
					}
					this._UpperSenateArea.Entity = value;
					if ((value != null))
					{
						value.UpperSenateAreaBoxMappings.Add(this);
						this._UpperSenateAreaId = value.Id;
					}
					else
					{
						this._UpperSenateAreaId = default(int);
					}
					this.SendPropertyChanged("UpperSenateArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.UpperSenateAreaCoordinates")]
	public partial class UpperSenateAreaCoordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UpperSenateAreaId;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntityRef<UpperSenateArea> _UpperSenateArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUpperSenateAreaIdChanging(int value);
    partial void OnUpperSenateAreaIdChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public UpperSenateAreaCoordinate()
		{
			this._UpperSenateArea = default(EntityRef<UpperSenateArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_UpperSenateAreaId", DbType="Int NOT NULL")]
		public int UpperSenateAreaId
		{
			get
			{
				return this._UpperSenateAreaId;
			}
			set
			{
				if ((this._UpperSenateAreaId != value))
				{
					if (this._UpperSenateArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpperSenateAreaIdChanging(value);
					this.SendPropertyChanging();
					this._UpperSenateAreaId = value;
					this.SendPropertyChanged("UpperSenateAreaId");
					this.OnUpperSenateAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="UpperSenateArea_UpperSenateAreaCoordinate", Storage="_UpperSenateArea", ThisKey="UpperSenateAreaId", OtherKey="Id", IsForeignKey=true)]
		public UpperSenateArea UpperSenateArea
		{
			get
			{
				return this._UpperSenateArea.Entity;
			}
			set
			{
				UpperSenateArea previousValue = this._UpperSenateArea.Entity;
				if (((previousValue != value) 
							|| (this._UpperSenateArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UpperSenateArea.Entity = null;
						previousValue.UpperSenateAreaCoordinates.Remove(this);
					}
					this._UpperSenateArea.Entity = value;
					if ((value != null))
					{
						value.UpperSenateAreaCoordinates.Add(this);
						this._UpperSenateAreaId = value.Id;
					}
					else
					{
						this._UpperSenateAreaId = default(int);
					}
					this.SendPropertyChanged("UpperSenateArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.UpperSenateAreas")]
	public partial class UpperSenateArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _GEO_ID;
		
		private string _StateCode;
		
		private string _LSAD;
		
		private string _LSAD_TRAN;
		
		private double _MinLongitude;
		
		private double _MaxLongitude;
		
		private double _MinLatitude;
		
		private double _MaxLatitude;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntitySet<UpperSenateAreaBoxMapping> _UpperSenateAreaBoxMappings;
		
		private EntitySet<UpperSenateAreaCoordinate> _UpperSenateAreaCoordinates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGEO_IDChanging(string value);
    partial void OnGEO_IDChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    partial void OnLSADChanging(string value);
    partial void OnLSADChanged();
    partial void OnLSAD_TRANChanging(string value);
    partial void OnLSAD_TRANChanged();
    partial void OnMinLongitudeChanging(double value);
    partial void OnMinLongitudeChanged();
    partial void OnMaxLongitudeChanging(double value);
    partial void OnMaxLongitudeChanged();
    partial void OnMinLatitudeChanging(double value);
    partial void OnMinLatitudeChanged();
    partial void OnMaxLatitudeChanging(double value);
    partial void OnMaxLatitudeChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public UpperSenateArea()
		{
			this._UpperSenateAreaBoxMappings = new EntitySet<UpperSenateAreaBoxMapping>(new Action<UpperSenateAreaBoxMapping>(this.attach_UpperSenateAreaBoxMappings), new Action<UpperSenateAreaBoxMapping>(this.detach_UpperSenateAreaBoxMappings));
			this._UpperSenateAreaCoordinates = new EntitySet<UpperSenateAreaCoordinate>(new Action<UpperSenateAreaCoordinate>(this.attach_UpperSenateAreaCoordinates), new Action<UpperSenateAreaCoordinate>(this.detach_UpperSenateAreaCoordinates));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_GEO_ID", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string GEO_ID
		{
			get
			{
				return this._GEO_ID;
			}
			set
			{
				if ((this._GEO_ID != value))
				{
					this.OnGEO_IDChanging(value);
					this.SendPropertyChanging();
					this._GEO_ID = value;
					this.SendPropertyChanged("GEO_ID");
					this.OnGEO_IDChanged();
				}
			}
		}
		
		[Column(Storage="_StateCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string LSAD
		{
			get
			{
				return this._LSAD;
			}
			set
			{
				if ((this._LSAD != value))
				{
					this.OnLSADChanging(value);
					this.SendPropertyChanging();
					this._LSAD = value;
					this.SendPropertyChanged("LSAD");
					this.OnLSADChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD_TRAN", DbType="NVarChar(64)")]
		public string LSAD_TRAN
		{
			get
			{
				return this._LSAD_TRAN;
			}
			set
			{
				if ((this._LSAD_TRAN != value))
				{
					this.OnLSAD_TRANChanging(value);
					this.SendPropertyChanging();
					this._LSAD_TRAN = value;
					this.SendPropertyChanged("LSAD_TRAN");
					this.OnLSAD_TRANChanged();
				}
			}
		}
		
		[Column(Storage="_MinLongitude", DbType="Float NOT NULL")]
		public double MinLongitude
		{
			get
			{
				return this._MinLongitude;
			}
			set
			{
				if ((this._MinLongitude != value))
				{
					this.OnMinLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLongitude = value;
					this.SendPropertyChanged("MinLongitude");
					this.OnMinLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLongitude", DbType="Float NOT NULL")]
		public double MaxLongitude
		{
			get
			{
				return this._MaxLongitude;
			}
			set
			{
				if ((this._MaxLongitude != value))
				{
					this.OnMaxLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLongitude = value;
					this.SendPropertyChanged("MaxLongitude");
					this.OnMaxLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MinLatitude", DbType="Float NOT NULL")]
		public double MinLatitude
		{
			get
			{
				return this._MinLatitude;
			}
			set
			{
				if ((this._MinLatitude != value))
				{
					this.OnMinLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLatitude = value;
					this.SendPropertyChanged("MinLatitude");
					this.OnMinLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLatitude", DbType="Float NOT NULL")]
		public double MaxLatitude
		{
			get
			{
				return this._MaxLatitude;
			}
			set
			{
				if ((this._MaxLatitude != value))
				{
					this.OnMaxLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLatitude = value;
					this.SendPropertyChanged("MaxLatitude");
					this.OnMaxLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="UpperSenateArea_UpperSenateAreaBoxMapping", Storage="_UpperSenateAreaBoxMappings", ThisKey="Id", OtherKey="UpperSenateAreaId")]
		public EntitySet<UpperSenateAreaBoxMapping> UpperSenateAreaBoxMappings
		{
			get
			{
				return this._UpperSenateAreaBoxMappings;
			}
			set
			{
				this._UpperSenateAreaBoxMappings.Assign(value);
			}
		}
		
		[Association(Name="UpperSenateArea_UpperSenateAreaCoordinate", Storage="_UpperSenateAreaCoordinates", ThisKey="Id", OtherKey="UpperSenateAreaId")]
		public EntitySet<UpperSenateAreaCoordinate> UpperSenateAreaCoordinates
		{
			get
			{
				return this._UpperSenateAreaCoordinates;
			}
			set
			{
				this._UpperSenateAreaCoordinates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UpperSenateAreaBoxMappings(UpperSenateAreaBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.UpperSenateArea = this;
		}
		
		private void detach_UpperSenateAreaBoxMappings(UpperSenateAreaBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.UpperSenateArea = null;
		}
		
		private void attach_UpperSenateAreaCoordinates(UpperSenateAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.UpperSenateArea = this;
		}
		
		private void detach_UpperSenateAreaCoordinates(UpperSenateAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.UpperSenateArea = null;
		}
	}
	
	[Table(Name="dbo.UrbanAreaBlockGroupMappings")]
	public partial class UrbanAreaBlockGroupMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UrbanAreaId;
		
		private string _UrbanCode;
		
		private int _CountyId;
		
		private string _CountyCode;
		
		private int _TractId;
		
		private string _TractCode;
		
		private int _BlockGroupId;
		
		private string _BlockGroupCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUrbanAreaIdChanging(int value);
    partial void OnUrbanAreaIdChanged();
    partial void OnUrbanCodeChanging(string value);
    partial void OnUrbanCodeChanged();
    partial void OnCountyIdChanging(int value);
    partial void OnCountyIdChanged();
    partial void OnCountyCodeChanging(string value);
    partial void OnCountyCodeChanged();
    partial void OnTractIdChanging(int value);
    partial void OnTractIdChanged();
    partial void OnTractCodeChanging(string value);
    partial void OnTractCodeChanged();
    partial void OnBlockGroupIdChanging(int value);
    partial void OnBlockGroupIdChanged();
    partial void OnBlockGroupCodeChanging(string value);
    partial void OnBlockGroupCodeChanged();
    #endregion
		
		public UrbanAreaBlockGroupMapping()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_UrbanAreaId", DbType="Int NOT NULL")]
		public int UrbanAreaId
		{
			get
			{
				return this._UrbanAreaId;
			}
			set
			{
				if ((this._UrbanAreaId != value))
				{
					this.OnUrbanAreaIdChanging(value);
					this.SendPropertyChanging();
					this._UrbanAreaId = value;
					this.SendPropertyChanged("UrbanAreaId");
					this.OnUrbanAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_UrbanCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string UrbanCode
		{
			get
			{
				return this._UrbanCode;
			}
			set
			{
				if ((this._UrbanCode != value))
				{
					this.OnUrbanCodeChanging(value);
					this.SendPropertyChanging();
					this._UrbanCode = value;
					this.SendPropertyChanged("UrbanCode");
					this.OnUrbanCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CountyId", DbType="Int NOT NULL")]
		public int CountyId
		{
			get
			{
				return this._CountyId;
			}
			set
			{
				if ((this._CountyId != value))
				{
					this.OnCountyIdChanging(value);
					this.SendPropertyChanging();
					this._CountyId = value;
					this.SendPropertyChanged("CountyId");
					this.OnCountyIdChanged();
				}
			}
		}
		
		[Column(Storage="_CountyCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string CountyCode
		{
			get
			{
				return this._CountyCode;
			}
			set
			{
				if ((this._CountyCode != value))
				{
					this.OnCountyCodeChanging(value);
					this.SendPropertyChanging();
					this._CountyCode = value;
					this.SendPropertyChanged("CountyCode");
					this.OnCountyCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TractId", DbType="Int NOT NULL")]
		public int TractId
		{
			get
			{
				return this._TractId;
			}
			set
			{
				if ((this._TractId != value))
				{
					this.OnTractIdChanging(value);
					this.SendPropertyChanging();
					this._TractId = value;
					this.SendPropertyChanged("TractId");
					this.OnTractIdChanged();
				}
			}
		}
		
		[Column(Storage="_TractCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string TractCode
		{
			get
			{
				return this._TractCode;
			}
			set
			{
				if ((this._TractCode != value))
				{
					this.OnTractCodeChanging(value);
					this.SendPropertyChanging();
					this._TractCode = value;
					this.SendPropertyChanged("TractCode");
					this.OnTractCodeChanged();
				}
			}
		}
		
		[Column(Storage="_BlockGroupId", DbType="Int NOT NULL")]
		public int BlockGroupId
		{
			get
			{
				return this._BlockGroupId;
			}
			set
			{
				if ((this._BlockGroupId != value))
				{
					this.OnBlockGroupIdChanging(value);
					this.SendPropertyChanging();
					this._BlockGroupId = value;
					this.SendPropertyChanged("BlockGroupId");
					this.OnBlockGroupIdChanged();
				}
			}
		}
		
		[Column(Storage="_BlockGroupCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string BlockGroupCode
		{
			get
			{
				return this._BlockGroupCode;
			}
			set
			{
				if ((this._BlockGroupCode != value))
				{
					this.OnBlockGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._BlockGroupCode = value;
					this.SendPropertyChanged("BlockGroupCode");
					this.OnBlockGroupCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.UrbanAreaBoxMappings")]
	public partial class UrbanAreaBoxMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BoxId;
		
		private int _UrbanAreaId;
		
		private EntityRef<UrbanArea> _UrbanArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBoxIdChanging(int value);
    partial void OnBoxIdChanged();
    partial void OnUrbanAreaIdChanging(int value);
    partial void OnUrbanAreaIdChanged();
    #endregion
		
		public UrbanAreaBoxMapping()
		{
			this._UrbanArea = default(EntityRef<UrbanArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_BoxId", DbType="Int NOT NULL")]
		public int BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[Column(Storage="_UrbanAreaId", DbType="Int NOT NULL")]
		public int UrbanAreaId
		{
			get
			{
				return this._UrbanAreaId;
			}
			set
			{
				if ((this._UrbanAreaId != value))
				{
					if (this._UrbanArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUrbanAreaIdChanging(value);
					this.SendPropertyChanging();
					this._UrbanAreaId = value;
					this.SendPropertyChanged("UrbanAreaId");
					this.OnUrbanAreaIdChanged();
				}
			}
		}
		
		[Association(Name="UrbanArea_UrbanAreaBoxMapping", Storage="_UrbanArea", ThisKey="UrbanAreaId", OtherKey="Id", IsForeignKey=true)]
		public UrbanArea UrbanArea
		{
			get
			{
				return this._UrbanArea.Entity;
			}
			set
			{
				UrbanArea previousValue = this._UrbanArea.Entity;
				if (((previousValue != value) 
							|| (this._UrbanArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UrbanArea.Entity = null;
						previousValue.UrbanAreaBoxMappings.Remove(this);
					}
					this._UrbanArea.Entity = value;
					if ((value != null))
					{
						value.UrbanAreaBoxMappings.Add(this);
						this._UrbanAreaId = value.Id;
					}
					else
					{
						this._UrbanAreaId = default(int);
					}
					this.SendPropertyChanged("UrbanArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.UrbanAreaCoordinates")]
	public partial class UrbanAreaCoordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UrbanAreaId;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntityRef<UrbanArea> _UrbanArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUrbanAreaIdChanging(int value);
    partial void OnUrbanAreaIdChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public UrbanAreaCoordinate()
		{
			this._UrbanArea = default(EntityRef<UrbanArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_UrbanAreaId", DbType="Int NOT NULL")]
		public int UrbanAreaId
		{
			get
			{
				return this._UrbanAreaId;
			}
			set
			{
				if ((this._UrbanAreaId != value))
				{
					if (this._UrbanArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUrbanAreaIdChanging(value);
					this.SendPropertyChanging();
					this._UrbanAreaId = value;
					this.SendPropertyChanged("UrbanAreaId");
					this.OnUrbanAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="UrbanArea_UrbanAreaCoordinate", Storage="_UrbanArea", ThisKey="UrbanAreaId", OtherKey="Id", IsForeignKey=true)]
		public UrbanArea UrbanArea
		{
			get
			{
				return this._UrbanArea.Entity;
			}
			set
			{
				UrbanArea previousValue = this._UrbanArea.Entity;
				if (((previousValue != value) 
							|| (this._UrbanArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UrbanArea.Entity = null;
						previousValue.UrbanAreaCoordinates.Remove(this);
					}
					this._UrbanArea.Entity = value;
					if ((value != null))
					{
						value.UrbanAreaCoordinates.Add(this);
						this._UrbanAreaId = value.Id;
					}
					else
					{
						this._UrbanAreaId = default(int);
					}
					this.SendPropertyChanged("UrbanArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.UrbanAreas")]
	public partial class UrbanArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _LSAD;
		
		private string _LSAD_TRAN;
		
		private double _MinLongitude;
		
		private double _MaxLongitude;
		
		private double _MinLatitude;
		
		private double _MaxLatitude;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntitySet<UrbanAreaBoxMapping> _UrbanAreaBoxMappings;
		
		private EntitySet<UrbanAreaCoordinate> _UrbanAreaCoordinates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLSADChanging(string value);
    partial void OnLSADChanged();
    partial void OnLSAD_TRANChanging(string value);
    partial void OnLSAD_TRANChanged();
    partial void OnMinLongitudeChanging(double value);
    partial void OnMinLongitudeChanged();
    partial void OnMaxLongitudeChanging(double value);
    partial void OnMaxLongitudeChanged();
    partial void OnMinLatitudeChanging(double value);
    partial void OnMinLatitudeChanged();
    partial void OnMaxLatitudeChanging(double value);
    partial void OnMaxLatitudeChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public UrbanArea()
		{
			this._UrbanAreaBoxMappings = new EntitySet<UrbanAreaBoxMapping>(new Action<UrbanAreaBoxMapping>(this.attach_UrbanAreaBoxMappings), new Action<UrbanAreaBoxMapping>(this.detach_UrbanAreaBoxMappings));
			this._UrbanAreaCoordinates = new EntitySet<UrbanAreaCoordinate>(new Action<UrbanAreaCoordinate>(this.attach_UrbanAreaCoordinates), new Action<UrbanAreaCoordinate>(this.detach_UrbanAreaCoordinates));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string LSAD
		{
			get
			{
				return this._LSAD;
			}
			set
			{
				if ((this._LSAD != value))
				{
					this.OnLSADChanging(value);
					this.SendPropertyChanging();
					this._LSAD = value;
					this.SendPropertyChanged("LSAD");
					this.OnLSADChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD_TRAN", DbType="NVarChar(64)")]
		public string LSAD_TRAN
		{
			get
			{
				return this._LSAD_TRAN;
			}
			set
			{
				if ((this._LSAD_TRAN != value))
				{
					this.OnLSAD_TRANChanging(value);
					this.SendPropertyChanging();
					this._LSAD_TRAN = value;
					this.SendPropertyChanged("LSAD_TRAN");
					this.OnLSAD_TRANChanged();
				}
			}
		}
		
		[Column(Storage="_MinLongitude", DbType="Float NOT NULL")]
		public double MinLongitude
		{
			get
			{
				return this._MinLongitude;
			}
			set
			{
				if ((this._MinLongitude != value))
				{
					this.OnMinLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLongitude = value;
					this.SendPropertyChanged("MinLongitude");
					this.OnMinLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLongitude", DbType="Float NOT NULL")]
		public double MaxLongitude
		{
			get
			{
				return this._MaxLongitude;
			}
			set
			{
				if ((this._MaxLongitude != value))
				{
					this.OnMaxLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLongitude = value;
					this.SendPropertyChanged("MaxLongitude");
					this.OnMaxLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MinLatitude", DbType="Float NOT NULL")]
		public double MinLatitude
		{
			get
			{
				return this._MinLatitude;
			}
			set
			{
				if ((this._MinLatitude != value))
				{
					this.OnMinLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLatitude = value;
					this.SendPropertyChanged("MinLatitude");
					this.OnMinLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLatitude", DbType="Float NOT NULL")]
		public double MaxLatitude
		{
			get
			{
				return this._MaxLatitude;
			}
			set
			{
				if ((this._MaxLatitude != value))
				{
					this.OnMaxLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLatitude = value;
					this.SendPropertyChanged("MaxLatitude");
					this.OnMaxLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="UrbanArea_UrbanAreaBoxMapping", Storage="_UrbanAreaBoxMappings", ThisKey="Id", OtherKey="UrbanAreaId")]
		public EntitySet<UrbanAreaBoxMapping> UrbanAreaBoxMappings
		{
			get
			{
				return this._UrbanAreaBoxMappings;
			}
			set
			{
				this._UrbanAreaBoxMappings.Assign(value);
			}
		}
		
		[Association(Name="UrbanArea_UrbanAreaCoordinate", Storage="_UrbanAreaCoordinates", ThisKey="Id", OtherKey="UrbanAreaId")]
		public EntitySet<UrbanAreaCoordinate> UrbanAreaCoordinates
		{
			get
			{
				return this._UrbanAreaCoordinates;
			}
			set
			{
				this._UrbanAreaCoordinates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UrbanAreaBoxMappings(UrbanAreaBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.UrbanArea = this;
		}
		
		private void detach_UrbanAreaBoxMappings(UrbanAreaBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.UrbanArea = null;
		}
		
		private void attach_UrbanAreaCoordinates(UrbanAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.UrbanArea = this;
		}
		
		private void detach_UrbanAreaCoordinates(UrbanAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.UrbanArea = null;
		}
	}
	
	[Table(Name="dbo.UrbanAreaZipCodeMappings")]
	public partial class UrbanAreaZipCodeMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UrbanAreaId;
		
		private string _UrbanAreaCode;
		
		private int _ThreeZipAreaId;
		
		private string _ThreeZipCode;
		
		private int _FiveZipAreaId;
		
		private string _FiveZipCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUrbanAreaIdChanging(int value);
    partial void OnUrbanAreaIdChanged();
    partial void OnUrbanAreaCodeChanging(string value);
    partial void OnUrbanAreaCodeChanged();
    partial void OnThreeZipAreaIdChanging(int value);
    partial void OnThreeZipAreaIdChanged();
    partial void OnThreeZipCodeChanging(string value);
    partial void OnThreeZipCodeChanged();
    partial void OnFiveZipAreaIdChanging(int value);
    partial void OnFiveZipAreaIdChanged();
    partial void OnFiveZipCodeChanging(string value);
    partial void OnFiveZipCodeChanged();
    #endregion
		
		public UrbanAreaZipCodeMapping()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_UrbanAreaId", DbType="Int NOT NULL")]
		public int UrbanAreaId
		{
			get
			{
				return this._UrbanAreaId;
			}
			set
			{
				if ((this._UrbanAreaId != value))
				{
					this.OnUrbanAreaIdChanging(value);
					this.SendPropertyChanging();
					this._UrbanAreaId = value;
					this.SendPropertyChanged("UrbanAreaId");
					this.OnUrbanAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_UrbanAreaCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string UrbanAreaCode
		{
			get
			{
				return this._UrbanAreaCode;
			}
			set
			{
				if ((this._UrbanAreaCode != value))
				{
					this.OnUrbanAreaCodeChanging(value);
					this.SendPropertyChanging();
					this._UrbanAreaCode = value;
					this.SendPropertyChanged("UrbanAreaCode");
					this.OnUrbanAreaCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ThreeZipAreaId", DbType="Int NOT NULL")]
		public int ThreeZipAreaId
		{
			get
			{
				return this._ThreeZipAreaId;
			}
			set
			{
				if ((this._ThreeZipAreaId != value))
				{
					this.OnThreeZipAreaIdChanging(value);
					this.SendPropertyChanging();
					this._ThreeZipAreaId = value;
					this.SendPropertyChanged("ThreeZipAreaId");
					this.OnThreeZipAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_ThreeZipCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string ThreeZipCode
		{
			get
			{
				return this._ThreeZipCode;
			}
			set
			{
				if ((this._ThreeZipCode != value))
				{
					this.OnThreeZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ThreeZipCode = value;
					this.SendPropertyChanged("ThreeZipCode");
					this.OnThreeZipCodeChanged();
				}
			}
		}
		
		[Column(Storage="_FiveZipAreaId", DbType="Int NOT NULL")]
		public int FiveZipAreaId
		{
			get
			{
				return this._FiveZipAreaId;
			}
			set
			{
				if ((this._FiveZipAreaId != value))
				{
					this.OnFiveZipAreaIdChanging(value);
					this.SendPropertyChanging();
					this._FiveZipAreaId = value;
					this.SendPropertyChanged("FiveZipAreaId");
					this.OnFiveZipAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_FiveZipCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string FiveZipCode
		{
			get
			{
				return this._FiveZipCode;
			}
			set
			{
				if ((this._FiveZipCode != value))
				{
					this.OnFiveZipCodeChanging(value);
					this.SendPropertyChanging();
					this._FiveZipCode = value;
					this.SendPropertyChanged("FiveZipCode");
					this.OnFiveZipCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.VotingDistrictAreaBoxMappings")]
	public partial class VotingDistrictAreaBoxMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BoxId;
		
		private int _VotingDistrictAreaId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBoxIdChanging(int value);
    partial void OnBoxIdChanged();
    partial void OnVotingDistrictAreaIdChanging(int value);
    partial void OnVotingDistrictAreaIdChanged();
    #endregion
		
		public VotingDistrictAreaBoxMapping()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_BoxId", DbType="Int NOT NULL")]
		public int BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[Column(Storage="_VotingDistrictAreaId", DbType="Int NOT NULL")]
		public int VotingDistrictAreaId
		{
			get
			{
				return this._VotingDistrictAreaId;
			}
			set
			{
				if ((this._VotingDistrictAreaId != value))
				{
					this.OnVotingDistrictAreaIdChanging(value);
					this.SendPropertyChanging();
					this._VotingDistrictAreaId = value;
					this.SendPropertyChanged("VotingDistrictAreaId");
					this.OnVotingDistrictAreaIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.VotingDistrictAreaCoordinates")]
	public partial class VotingDistrictAreaCoordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _VotingDistrictAreaId;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntityRef<VotingDistrictArea> _VotingDistrictArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVotingDistrictAreaIdChanging(int value);
    partial void OnVotingDistrictAreaIdChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public VotingDistrictAreaCoordinate()
		{
			this._VotingDistrictArea = default(EntityRef<VotingDistrictArea>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_VotingDistrictAreaId", DbType="Int NOT NULL")]
		public int VotingDistrictAreaId
		{
			get
			{
				return this._VotingDistrictAreaId;
			}
			set
			{
				if ((this._VotingDistrictAreaId != value))
				{
					if (this._VotingDistrictArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVotingDistrictAreaIdChanging(value);
					this.SendPropertyChanging();
					this._VotingDistrictAreaId = value;
					this.SendPropertyChanged("VotingDistrictAreaId");
					this.OnVotingDistrictAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="VotingDistrictArea_VotingDistrictAreaCoordinate", Storage="_VotingDistrictArea", ThisKey="VotingDistrictAreaId", OtherKey="Id", IsForeignKey=true)]
		public VotingDistrictArea VotingDistrictArea
		{
			get
			{
				return this._VotingDistrictArea.Entity;
			}
			set
			{
				VotingDistrictArea previousValue = this._VotingDistrictArea.Entity;
				if (((previousValue != value) 
							|| (this._VotingDistrictArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VotingDistrictArea.Entity = null;
						previousValue.VotingDistrictAreaCoordinates.Remove(this);
					}
					this._VotingDistrictArea.Entity = value;
					if ((value != null))
					{
						value.VotingDistrictAreaCoordinates.Add(this);
						this._VotingDistrictAreaId = value.Id;
					}
					else
					{
						this._VotingDistrictAreaId = default(int);
					}
					this.SendPropertyChanged("VotingDistrictArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Tracts")]
	public partial class Tract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Code;
		
		private string _StateCode;
		
		private string _CountyCode;
		
		private string _ArbitraryUniqueCode;
		
		private string _LSAD;
		
		private string _LSADTrans;
		
		private double _MinLongitude;
		
		private double _MaxLongitude;
		
		private double _MinLatitude;
		
		private double _MaxLatitude;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private int _IsEnabled;
		
		private System.Nullable<int> _OTotal;
		
		private string _Description;
		
		private EntitySet<BlockGroupMapping> _BlockGroupMappings;
		
		private EntitySet<TractBoxMapping> _TractBoxMappings;
		
		private EntitySet<TractCoordinate> _TractCoordinates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    partial void OnCountyCodeChanging(string value);
    partial void OnCountyCodeChanged();
    partial void OnArbitraryUniqueCodeChanging(string value);
    partial void OnArbitraryUniqueCodeChanged();
    partial void OnLSADChanging(string value);
    partial void OnLSADChanged();
    partial void OnLSADTransChanging(string value);
    partial void OnLSADTransChanged();
    partial void OnMinLongitudeChanging(double value);
    partial void OnMinLongitudeChanged();
    partial void OnMaxLongitudeChanging(double value);
    partial void OnMaxLongitudeChanged();
    partial void OnMinLatitudeChanging(double value);
    partial void OnMinLatitudeChanged();
    partial void OnMaxLatitudeChanging(double value);
    partial void OnMaxLatitudeChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnIsEnabledChanging(int value);
    partial void OnIsEnabledChanged();
    partial void OnOTotalChanging(System.Nullable<int> value);
    partial void OnOTotalChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Tract()
		{
			this._BlockGroupMappings = new EntitySet<BlockGroupMapping>(new Action<BlockGroupMapping>(this.attach_BlockGroupMappings), new Action<BlockGroupMapping>(this.detach_BlockGroupMappings));
			this._TractBoxMappings = new EntitySet<TractBoxMapping>(new Action<TractBoxMapping>(this.attach_TractBoxMappings), new Action<TractBoxMapping>(this.detach_TractBoxMappings));
			this._TractCoordinates = new EntitySet<TractCoordinate>(new Action<TractCoordinate>(this.attach_TractCoordinates), new Action<TractCoordinate>(this.detach_TractCoordinates));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_StateCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CountyCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string CountyCode
		{
			get
			{
				return this._CountyCode;
			}
			set
			{
				if ((this._CountyCode != value))
				{
					this.OnCountyCodeChanging(value);
					this.SendPropertyChanging();
					this._CountyCode = value;
					this.SendPropertyChanged("CountyCode");
					this.OnCountyCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ArbitraryUniqueCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ArbitraryUniqueCode
		{
			get
			{
				return this._ArbitraryUniqueCode;
			}
			set
			{
				if ((this._ArbitraryUniqueCode != value))
				{
					this.OnArbitraryUniqueCodeChanging(value);
					this.SendPropertyChanging();
					this._ArbitraryUniqueCode = value;
					this.SendPropertyChanged("ArbitraryUniqueCode");
					this.OnArbitraryUniqueCodeChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD", DbType="NVarChar(8)")]
		public string LSAD
		{
			get
			{
				return this._LSAD;
			}
			set
			{
				if ((this._LSAD != value))
				{
					this.OnLSADChanging(value);
					this.SendPropertyChanging();
					this._LSAD = value;
					this.SendPropertyChanged("LSAD");
					this.OnLSADChanged();
				}
			}
		}
		
		[Column(Storage="_LSADTrans", DbType="NVarChar(64)")]
		public string LSADTrans
		{
			get
			{
				return this._LSADTrans;
			}
			set
			{
				if ((this._LSADTrans != value))
				{
					this.OnLSADTransChanging(value);
					this.SendPropertyChanging();
					this._LSADTrans = value;
					this.SendPropertyChanged("LSADTrans");
					this.OnLSADTransChanged();
				}
			}
		}
		
		[Column(Storage="_MinLongitude", DbType="Float NOT NULL")]
		public double MinLongitude
		{
			get
			{
				return this._MinLongitude;
			}
			set
			{
				if ((this._MinLongitude != value))
				{
					this.OnMinLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLongitude = value;
					this.SendPropertyChanged("MinLongitude");
					this.OnMinLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLongitude", DbType="Float NOT NULL")]
		public double MaxLongitude
		{
			get
			{
				return this._MaxLongitude;
			}
			set
			{
				if ((this._MaxLongitude != value))
				{
					this.OnMaxLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLongitude = value;
					this.SendPropertyChanged("MaxLongitude");
					this.OnMaxLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MinLatitude", DbType="Float NOT NULL")]
		public double MinLatitude
		{
			get
			{
				return this._MinLatitude;
			}
			set
			{
				if ((this._MinLatitude != value))
				{
					this.OnMinLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLatitude = value;
					this.SendPropertyChanged("MinLatitude");
					this.OnMinLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLatitude", DbType="Float NOT NULL")]
		public double MaxLatitude
		{
			get
			{
				return this._MaxLatitude;
			}
			set
			{
				if ((this._MaxLatitude != value))
				{
					this.OnMaxLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLatitude = value;
					this.SendPropertyChanged("MaxLatitude");
					this.OnMaxLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_IsEnabled", DbType="Int NOT NULL")]
		public int IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[Column(Storage="_OTotal", DbType="Int")]
		public System.Nullable<int> OTotal
		{
			get
			{
				return this._OTotal;
			}
			set
			{
				if ((this._OTotal != value))
				{
					this.OnOTotalChanging(value);
					this.SendPropertyChanging();
					this._OTotal = value;
					this.SendPropertyChanged("OTotal");
					this.OnOTotalChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Association(Name="Tract_BlockGroupMapping", Storage="_BlockGroupMappings", ThisKey="Id", OtherKey="TractId")]
		public EntitySet<BlockGroupMapping> BlockGroupMappings
		{
			get
			{
				return this._BlockGroupMappings;
			}
			set
			{
				this._BlockGroupMappings.Assign(value);
			}
		}
		
		[Association(Name="Tract_TractBoxMapping", Storage="_TractBoxMappings", ThisKey="Id", OtherKey="TractId")]
		public EntitySet<TractBoxMapping> TractBoxMappings
		{
			get
			{
				return this._TractBoxMappings;
			}
			set
			{
				this._TractBoxMappings.Assign(value);
			}
		}
		
		[Association(Name="Tract_TractCoordinate", Storage="_TractCoordinates", ThisKey="Id", OtherKey="TractId")]
		public EntitySet<TractCoordinate> TractCoordinates
		{
			get
			{
				return this._TractCoordinates;
			}
			set
			{
				this._TractCoordinates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BlockGroupMappings(BlockGroupMapping entity)
		{
			this.SendPropertyChanging();
			entity.Tract = this;
		}
		
		private void detach_BlockGroupMappings(BlockGroupMapping entity)
		{
			this.SendPropertyChanging();
			entity.Tract = null;
		}
		
		private void attach_TractBoxMappings(TractBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.Tract = this;
		}
		
		private void detach_TractBoxMappings(TractBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.Tract = null;
		}
		
		private void attach_TractCoordinates(TractCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.Tract = this;
		}
		
		private void detach_TractCoordinates(TractCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.Tract = null;
		}
	}
	
	[Table(Name="dbo.BlockGroups")]
	public partial class BlockGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Code;
		
		private string _StateCode;
		
		private string _CountyCode;
		
		private string _TractCode;
		
		private string _LSAD;
		
		private string _LSADTrans;
		
		private double _MinLongitude;
		
		private double _MaxLongitude;
		
		private double _MinLatitude;
		
		private double _MaxLatitude;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private int _IsEnabled;
		
		private System.Nullable<int> _OTotal;
		
		private string _Description;
		
		private string _ArbitraryUniqueCode;
		
		private EntitySet<BlockGroupBoxMapping> _BlockGroupBoxMappings;
		
		private EntitySet<BlockGroupCoordinate> _BlockGroupCoordinates;
		
		private EntitySet<BlockGroupMapping> _BlockGroupMappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    partial void OnCountyCodeChanging(string value);
    partial void OnCountyCodeChanged();
    partial void OnTractCodeChanging(string value);
    partial void OnTractCodeChanged();
    partial void OnLSADChanging(string value);
    partial void OnLSADChanged();
    partial void OnLSADTransChanging(string value);
    partial void OnLSADTransChanged();
    partial void OnMinLongitudeChanging(double value);
    partial void OnMinLongitudeChanged();
    partial void OnMaxLongitudeChanging(double value);
    partial void OnMaxLongitudeChanged();
    partial void OnMinLatitudeChanging(double value);
    partial void OnMinLatitudeChanged();
    partial void OnMaxLatitudeChanging(double value);
    partial void OnMaxLatitudeChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnIsEnabledChanging(int value);
    partial void OnIsEnabledChanged();
    partial void OnOTotalChanging(System.Nullable<int> value);
    partial void OnOTotalChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnArbitraryUniqueCodeChanging(string value);
    partial void OnArbitraryUniqueCodeChanged();
    #endregion
		
		public BlockGroup()
		{
			this._BlockGroupBoxMappings = new EntitySet<BlockGroupBoxMapping>(new Action<BlockGroupBoxMapping>(this.attach_BlockGroupBoxMappings), new Action<BlockGroupBoxMapping>(this.detach_BlockGroupBoxMappings));
			this._BlockGroupCoordinates = new EntitySet<BlockGroupCoordinate>(new Action<BlockGroupCoordinate>(this.attach_BlockGroupCoordinates), new Action<BlockGroupCoordinate>(this.detach_BlockGroupCoordinates));
			this._BlockGroupMappings = new EntitySet<BlockGroupMapping>(new Action<BlockGroupMapping>(this.attach_BlockGroupMappings), new Action<BlockGroupMapping>(this.detach_BlockGroupMappings));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_StateCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CountyCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string CountyCode
		{
			get
			{
				return this._CountyCode;
			}
			set
			{
				if ((this._CountyCode != value))
				{
					this.OnCountyCodeChanging(value);
					this.SendPropertyChanging();
					this._CountyCode = value;
					this.SendPropertyChanged("CountyCode");
					this.OnCountyCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TractCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string TractCode
		{
			get
			{
				return this._TractCode;
			}
			set
			{
				if ((this._TractCode != value))
				{
					this.OnTractCodeChanging(value);
					this.SendPropertyChanging();
					this._TractCode = value;
					this.SendPropertyChanged("TractCode");
					this.OnTractCodeChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD", DbType="NVarChar(8)")]
		public string LSAD
		{
			get
			{
				return this._LSAD;
			}
			set
			{
				if ((this._LSAD != value))
				{
					this.OnLSADChanging(value);
					this.SendPropertyChanging();
					this._LSAD = value;
					this.SendPropertyChanged("LSAD");
					this.OnLSADChanged();
				}
			}
		}
		
		[Column(Storage="_LSADTrans", DbType="NVarChar(64)")]
		public string LSADTrans
		{
			get
			{
				return this._LSADTrans;
			}
			set
			{
				if ((this._LSADTrans != value))
				{
					this.OnLSADTransChanging(value);
					this.SendPropertyChanging();
					this._LSADTrans = value;
					this.SendPropertyChanged("LSADTrans");
					this.OnLSADTransChanged();
				}
			}
		}
		
		[Column(Storage="_MinLongitude", DbType="Float NOT NULL")]
		public double MinLongitude
		{
			get
			{
				return this._MinLongitude;
			}
			set
			{
				if ((this._MinLongitude != value))
				{
					this.OnMinLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLongitude = value;
					this.SendPropertyChanged("MinLongitude");
					this.OnMinLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLongitude", DbType="Float NOT NULL")]
		public double MaxLongitude
		{
			get
			{
				return this._MaxLongitude;
			}
			set
			{
				if ((this._MaxLongitude != value))
				{
					this.OnMaxLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLongitude = value;
					this.SendPropertyChanged("MaxLongitude");
					this.OnMaxLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MinLatitude", DbType="Float NOT NULL")]
		public double MinLatitude
		{
			get
			{
				return this._MinLatitude;
			}
			set
			{
				if ((this._MinLatitude != value))
				{
					this.OnMinLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLatitude = value;
					this.SendPropertyChanged("MinLatitude");
					this.OnMinLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLatitude", DbType="Float NOT NULL")]
		public double MaxLatitude
		{
			get
			{
				return this._MaxLatitude;
			}
			set
			{
				if ((this._MaxLatitude != value))
				{
					this.OnMaxLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLatitude = value;
					this.SendPropertyChanged("MaxLatitude");
					this.OnMaxLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_IsEnabled", DbType="Int NOT NULL")]
		public int IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[Column(Storage="_OTotal", DbType="Int")]
		public System.Nullable<int> OTotal
		{
			get
			{
				return this._OTotal;
			}
			set
			{
				if ((this._OTotal != value))
				{
					this.OnOTotalChanging(value);
					this.SendPropertyChanging();
					this._OTotal = value;
					this.SendPropertyChanged("OTotal");
					this.OnOTotalChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_ArbitraryUniqueCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ArbitraryUniqueCode
		{
			get
			{
				return this._ArbitraryUniqueCode;
			}
			set
			{
				if ((this._ArbitraryUniqueCode != value))
				{
					this.OnArbitraryUniqueCodeChanging(value);
					this.SendPropertyChanging();
					this._ArbitraryUniqueCode = value;
					this.SendPropertyChanged("ArbitraryUniqueCode");
					this.OnArbitraryUniqueCodeChanged();
				}
			}
		}
		
		[Association(Name="BlockGroup_BlockGroupBoxMapping", Storage="_BlockGroupBoxMappings", ThisKey="Id", OtherKey="BlockGroupId")]
		public EntitySet<BlockGroupBoxMapping> BlockGroupBoxMappings
		{
			get
			{
				return this._BlockGroupBoxMappings;
			}
			set
			{
				this._BlockGroupBoxMappings.Assign(value);
			}
		}
		
		[Association(Name="BlockGroup_BlockGroupCoordinate", Storage="_BlockGroupCoordinates", ThisKey="Id", OtherKey="BlockGroupId")]
		public EntitySet<BlockGroupCoordinate> BlockGroupCoordinates
		{
			get
			{
				return this._BlockGroupCoordinates;
			}
			set
			{
				this._BlockGroupCoordinates.Assign(value);
			}
		}
		
		[Association(Name="BlockGroup_BlockGroupMapping", Storage="_BlockGroupMappings", ThisKey="Id", OtherKey="BlockGroupId")]
		public EntitySet<BlockGroupMapping> BlockGroupMappings
		{
			get
			{
				return this._BlockGroupMappings;
			}
			set
			{
				this._BlockGroupMappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BlockGroupBoxMappings(BlockGroupBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.BlockGroup = this;
		}
		
		private void detach_BlockGroupBoxMappings(BlockGroupBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.BlockGroup = null;
		}
		
		private void attach_BlockGroupCoordinates(BlockGroupCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.BlockGroup = this;
		}
		
		private void detach_BlockGroupCoordinates(BlockGroupCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.BlockGroup = null;
		}
		
		private void attach_BlockGroupMappings(BlockGroupMapping entity)
		{
			this.SendPropertyChanging();
			entity.BlockGroup = this;
		}
		
		private void detach_BlockGroupMappings(BlockGroupMapping entity)
		{
			this.SendPropertyChanging();
			entity.BlockGroup = null;
		}
	}
	
	[Table(Name="dbo.FiveZipAreas")]
	public partial class FiveZipArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Code;
		
		private string _LSAD;
		
		private string _LSADTrans;
		
		private double _MinLongitude;
		
		private double _MaxLongitude;
		
		private double _MinLatitude;
		
		private double _MaxLatitude;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private string _StateCode;
		
		private int _IsEnabled;
		
		private int _OTotal;
		
		private string _Description;
		
		private System.Nullable<int> _PartCount;
		
		private System.Nullable<int> _IsInnerShape;
		
		private EntitySet<BlockGroupMapping> _BlockGroupMappings;
		
		private EntitySet<FiveZipAreaCoordinate> _FiveZipAreaCoordinates;
		
		private EntitySet<FiveZipBoxMapping> _FiveZipBoxMappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnLSADChanging(string value);
    partial void OnLSADChanged();
    partial void OnLSADTransChanging(string value);
    partial void OnLSADTransChanged();
    partial void OnMinLongitudeChanging(double value);
    partial void OnMinLongitudeChanged();
    partial void OnMaxLongitudeChanging(double value);
    partial void OnMaxLongitudeChanged();
    partial void OnMinLatitudeChanging(double value);
    partial void OnMinLatitudeChanged();
    partial void OnMaxLatitudeChanging(double value);
    partial void OnMaxLatitudeChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    partial void OnIsEnabledChanging(int value);
    partial void OnIsEnabledChanged();
    partial void OnOTotalChanging(int value);
    partial void OnOTotalChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPartCountChanging(System.Nullable<int> value);
    partial void OnPartCountChanged();
    partial void OnIsInnerShapeChanging(System.Nullable<int> value);
    partial void OnIsInnerShapeChanged();
    #endregion
		
		public FiveZipArea()
		{
			this._BlockGroupMappings = new EntitySet<BlockGroupMapping>(new Action<BlockGroupMapping>(this.attach_BlockGroupMappings), new Action<BlockGroupMapping>(this.detach_BlockGroupMappings));
			this._FiveZipAreaCoordinates = new EntitySet<FiveZipAreaCoordinate>(new Action<FiveZipAreaCoordinate>(this.attach_FiveZipAreaCoordinates), new Action<FiveZipAreaCoordinate>(this.detach_FiveZipAreaCoordinates));
			this._FiveZipBoxMappings = new EntitySet<FiveZipBoxMapping>(new Action<FiveZipBoxMapping>(this.attach_FiveZipBoxMappings), new Action<FiveZipBoxMapping>(this.detach_FiveZipBoxMappings));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_LSAD", DbType="NVarChar(8)")]
		public string LSAD
		{
			get
			{
				return this._LSAD;
			}
			set
			{
				if ((this._LSAD != value))
				{
					this.OnLSADChanging(value);
					this.SendPropertyChanging();
					this._LSAD = value;
					this.SendPropertyChanged("LSAD");
					this.OnLSADChanged();
				}
			}
		}
		
		[Column(Storage="_LSADTrans", DbType="NVarChar(64)")]
		public string LSADTrans
		{
			get
			{
				return this._LSADTrans;
			}
			set
			{
				if ((this._LSADTrans != value))
				{
					this.OnLSADTransChanging(value);
					this.SendPropertyChanging();
					this._LSADTrans = value;
					this.SendPropertyChanged("LSADTrans");
					this.OnLSADTransChanged();
				}
			}
		}
		
		[Column(Storage="_MinLongitude", DbType="Float NOT NULL")]
		public double MinLongitude
		{
			get
			{
				return this._MinLongitude;
			}
			set
			{
				if ((this._MinLongitude != value))
				{
					this.OnMinLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLongitude = value;
					this.SendPropertyChanged("MinLongitude");
					this.OnMinLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLongitude", DbType="Float NOT NULL")]
		public double MaxLongitude
		{
			get
			{
				return this._MaxLongitude;
			}
			set
			{
				if ((this._MaxLongitude != value))
				{
					this.OnMaxLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLongitude = value;
					this.SendPropertyChanged("MaxLongitude");
					this.OnMaxLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MinLatitude", DbType="Float NOT NULL")]
		public double MinLatitude
		{
			get
			{
				return this._MinLatitude;
			}
			set
			{
				if ((this._MinLatitude != value))
				{
					this.OnMinLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLatitude = value;
					this.SendPropertyChanged("MinLatitude");
					this.OnMinLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLatitude", DbType="Float NOT NULL")]
		public double MaxLatitude
		{
			get
			{
				return this._MaxLatitude;
			}
			set
			{
				if ((this._MaxLatitude != value))
				{
					this.OnMaxLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLatitude = value;
					this.SendPropertyChanged("MaxLatitude");
					this.OnMaxLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_StateCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[Column(Storage="_IsEnabled", DbType="Int NOT NULL")]
		public int IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[Column(Storage="_OTotal", DbType="Int NOT NULL")]
		public int OTotal
		{
			get
			{
				return this._OTotal;
			}
			set
			{
				if ((this._OTotal != value))
				{
					this.OnOTotalChanging(value);
					this.SendPropertyChanging();
					this._OTotal = value;
					this.SendPropertyChanged("OTotal");
					this.OnOTotalChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_PartCount", DbType="Int")]
		public System.Nullable<int> PartCount
		{
			get
			{
				return this._PartCount;
			}
			set
			{
				if ((this._PartCount != value))
				{
					this.OnPartCountChanging(value);
					this.SendPropertyChanging();
					this._PartCount = value;
					this.SendPropertyChanged("PartCount");
					this.OnPartCountChanged();
				}
			}
		}
		
		[Column(Storage="_IsInnerShape", DbType="Int")]
		public System.Nullable<int> IsInnerShape
		{
			get
			{
				return this._IsInnerShape;
			}
			set
			{
				if ((this._IsInnerShape != value))
				{
					this.OnIsInnerShapeChanging(value);
					this.SendPropertyChanging();
					this._IsInnerShape = value;
					this.SendPropertyChanged("IsInnerShape");
					this.OnIsInnerShapeChanged();
				}
			}
		}
		
		[Association(Name="FiveZipArea_BlockGroupMapping", Storage="_BlockGroupMappings", ThisKey="Id", OtherKey="FiveZipAreaId")]
		public EntitySet<BlockGroupMapping> BlockGroupMappings
		{
			get
			{
				return this._BlockGroupMappings;
			}
			set
			{
				this._BlockGroupMappings.Assign(value);
			}
		}
		
		[Association(Name="FiveZipArea_FiveZipAreaCoordinate", Storage="_FiveZipAreaCoordinates", ThisKey="Id", OtherKey="FiveZipAreaId")]
		public EntitySet<FiveZipAreaCoordinate> FiveZipAreaCoordinates
		{
			get
			{
				return this._FiveZipAreaCoordinates;
			}
			set
			{
				this._FiveZipAreaCoordinates.Assign(value);
			}
		}
		
		[Association(Name="FiveZipArea_FiveZipBoxMapping", Storage="_FiveZipBoxMappings", ThisKey="Id", OtherKey="FiveZipAreaId")]
		public EntitySet<FiveZipBoxMapping> FiveZipBoxMappings
		{
			get
			{
				return this._FiveZipBoxMappings;
			}
			set
			{
				this._FiveZipBoxMappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BlockGroupMappings(BlockGroupMapping entity)
		{
			this.SendPropertyChanging();
			entity.FiveZipArea = this;
		}
		
		private void detach_BlockGroupMappings(BlockGroupMapping entity)
		{
			this.SendPropertyChanging();
			entity.FiveZipArea = null;
		}
		
		private void attach_FiveZipAreaCoordinates(FiveZipAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.FiveZipArea = this;
		}
		
		private void detach_FiveZipAreaCoordinates(FiveZipAreaCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.FiveZipArea = null;
		}
		
		private void attach_FiveZipBoxMappings(FiveZipBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.FiveZipArea = this;
		}
		
		private void detach_FiveZipBoxMappings(FiveZipBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.FiveZipArea = null;
		}
	}
}
#pragma warning restore 1591
