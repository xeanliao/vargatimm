#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GPS.Tool.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="test")]
	public partial class SelectMappingDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBlockGroupSelectMapping(BlockGroupSelectMapping instance);
    partial void UpdateBlockGroupSelectMapping(BlockGroupSelectMapping instance);
    partial void DeleteBlockGroupSelectMapping(BlockGroupSelectMapping instance);
    partial void InsertPremiumCRouteSelectMapping(PremiumCRouteSelectMapping instance);
    partial void UpdatePremiumCRouteSelectMapping(PremiumCRouteSelectMapping instance);
    partial void DeletePremiumCRouteSelectMapping(PremiumCRouteSelectMapping instance);
    #endregion
		
		public SelectMappingDataContext() : 
				base(global::GPS.Tool.Properties.Settings.Default.testConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SelectMappingDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SelectMappingDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SelectMappingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SelectMappingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BlockGroupSelectMapping> BlockGroupSelectMappings
		{
			get
			{
				return this.GetTable<BlockGroupSelectMapping>();
			}
		}
		
		public System.Data.Linq.Table<PremiumCRouteSelectMapping> PremiumCRouteSelectMappings
		{
			get
			{
				return this.GetTable<PremiumCRouteSelectMapping>();
			}
		}
	}
	
	[Table(Name="dbo.BlockGroupSelectMappings")]
	public partial class BlockGroupSelectMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ThreeZipAreaId;
		
		private int _FiveZipAreaId;
		
		private int _TractId;
		
		private int _BlockGroupId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnThreeZipAreaIdChanging(int value);
    partial void OnThreeZipAreaIdChanged();
    partial void OnFiveZipAreaIdChanging(int value);
    partial void OnFiveZipAreaIdChanged();
    partial void OnTractIdChanging(int value);
    partial void OnTractIdChanged();
    partial void OnBlockGroupIdChanging(int value);
    partial void OnBlockGroupIdChanged();
    #endregion
		
		public BlockGroupSelectMapping()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_ThreeZipAreaId", DbType="Int NOT NULL")]
		public int ThreeZipAreaId
		{
			get
			{
				return this._ThreeZipAreaId;
			}
			set
			{
				if ((this._ThreeZipAreaId != value))
				{
					this.OnThreeZipAreaIdChanging(value);
					this.SendPropertyChanging();
					this._ThreeZipAreaId = value;
					this.SendPropertyChanged("ThreeZipAreaId");
					this.OnThreeZipAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_FiveZipAreaId", DbType="Int NOT NULL")]
		public int FiveZipAreaId
		{
			get
			{
				return this._FiveZipAreaId;
			}
			set
			{
				if ((this._FiveZipAreaId != value))
				{
					this.OnFiveZipAreaIdChanging(value);
					this.SendPropertyChanging();
					this._FiveZipAreaId = value;
					this.SendPropertyChanged("FiveZipAreaId");
					this.OnFiveZipAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_TractId", DbType="Int NOT NULL")]
		public int TractId
		{
			get
			{
				return this._TractId;
			}
			set
			{
				if ((this._TractId != value))
				{
					this.OnTractIdChanging(value);
					this.SendPropertyChanging();
					this._TractId = value;
					this.SendPropertyChanged("TractId");
					this.OnTractIdChanged();
				}
			}
		}
		
		[Column(Storage="_BlockGroupId", DbType="Int NOT NULL")]
		public int BlockGroupId
		{
			get
			{
				return this._BlockGroupId;
			}
			set
			{
				if ((this._BlockGroupId != value))
				{
					this.OnBlockGroupIdChanging(value);
					this.SendPropertyChanging();
					this._BlockGroupId = value;
					this.SendPropertyChanged("BlockGroupId");
					this.OnBlockGroupIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PremiumCRouteSelectMappings")]
	public partial class PremiumCRouteSelectMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ThreeZipAreaId;
		
		private int _FiveZipAreaId;
		
		private int _PremiumCRouteId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnThreeZipAreaIdChanging(int value);
    partial void OnThreeZipAreaIdChanged();
    partial void OnFiveZipAreaIdChanging(int value);
    partial void OnFiveZipAreaIdChanged();
    partial void OnPremiumCRouteIdChanging(int value);
    partial void OnPremiumCRouteIdChanged();
    #endregion
		
		public PremiumCRouteSelectMapping()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_ThreeZipAreaId", DbType="Int NOT NULL")]
		public int ThreeZipAreaId
		{
			get
			{
				return this._ThreeZipAreaId;
			}
			set
			{
				if ((this._ThreeZipAreaId != value))
				{
					this.OnThreeZipAreaIdChanging(value);
					this.SendPropertyChanging();
					this._ThreeZipAreaId = value;
					this.SendPropertyChanged("ThreeZipAreaId");
					this.OnThreeZipAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_FiveZipAreaId", DbType="Int NOT NULL")]
		public int FiveZipAreaId
		{
			get
			{
				return this._FiveZipAreaId;
			}
			set
			{
				if ((this._FiveZipAreaId != value))
				{
					this.OnFiveZipAreaIdChanging(value);
					this.SendPropertyChanging();
					this._FiveZipAreaId = value;
					this.SendPropertyChanged("FiveZipAreaId");
					this.OnFiveZipAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_PremiumCRouteId", DbType="Int NOT NULL")]
		public int PremiumCRouteId
		{
			get
			{
				return this._PremiumCRouteId;
			}
			set
			{
				if ((this._PremiumCRouteId != value))
				{
					this.OnPremiumCRouteIdChanging(value);
					this.SendPropertyChanging();
					this._PremiumCRouteId = value;
					this.SendPropertyChanged("PremiumCRouteId");
					this.OnPremiumCRouteIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
