#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GPS.Tool.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="test")]
	public partial class PremiumAreasDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPremiumZipBoxMapping(PremiumZipBoxMapping instance);
    partial void UpdatePremiumZipBoxMapping(PremiumZipBoxMapping instance);
    partial void DeletePremiumZipBoxMapping(PremiumZipBoxMapping instance);
    partial void InsertPremiumZipCoordinate(PremiumZipCoordinate instance);
    partial void UpdatePremiumZipCoordinate(PremiumZipCoordinate instance);
    partial void DeletePremiumZipCoordinate(PremiumZipCoordinate instance);
    partial void InsertPremiumCRouteCoordinate(PremiumCRouteCoordinate instance);
    partial void UpdatePremiumCRouteCoordinate(PremiumCRouteCoordinate instance);
    partial void DeletePremiumCRouteCoordinate(PremiumCRouteCoordinate instance);
    partial void InsertPremiumZip(PremiumZip instance);
    partial void UpdatePremiumZip(PremiumZip instance);
    partial void DeletePremiumZip(PremiumZip instance);
    partial void InsertPremiumCRouteBoxMapping(PremiumCRouteBoxMapping instance);
    partial void UpdatePremiumCRouteBoxMapping(PremiumCRouteBoxMapping instance);
    partial void DeletePremiumCRouteBoxMapping(PremiumCRouteBoxMapping instance);
    partial void InsertPremiumCRoute(PremiumCRoute instance);
    partial void UpdatePremiumCRoute(PremiumCRoute instance);
    partial void DeletePremiumCRoute(PremiumCRoute instance);
    #endregion
		
		public PremiumAreasDataContext() : 
				base(global::GPS.Tool.Properties.Settings.Default.testConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PremiumAreasDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PremiumAreasDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PremiumAreasDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PremiumAreasDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PremiumZipBoxMapping> PremiumZipBoxMappings
		{
			get
			{
				return this.GetTable<PremiumZipBoxMapping>();
			}
		}
		
		public System.Data.Linq.Table<PremiumZipCoordinate> PremiumZipCoordinates
		{
			get
			{
				return this.GetTable<PremiumZipCoordinate>();
			}
		}
		
		public System.Data.Linq.Table<PremiumCRouteCoordinate> PremiumCRouteCoordinates
		{
			get
			{
				return this.GetTable<PremiumCRouteCoordinate>();
			}
		}
		
		public System.Data.Linq.Table<PremiumZip> PremiumZips
		{
			get
			{
				return this.GetTable<PremiumZip>();
			}
		}
		
		public System.Data.Linq.Table<PremiumCRouteBoxMapping> PremiumCRouteBoxMappings
		{
			get
			{
				return this.GetTable<PremiumCRouteBoxMapping>();
			}
		}
		
		public System.Data.Linq.Table<PremiumCRoute> PremiumCRoutes
		{
			get
			{
				return this.GetTable<PremiumCRoute>();
			}
		}
	}
	
	[Table(Name="dbo.PremiumZipBoxMappings")]
	public partial class PremiumZipBoxMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BoxId;
		
		private int _PreminumZipId;
		
		private EntityRef<PremiumZip> _PremiumZip;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBoxIdChanging(int value);
    partial void OnBoxIdChanged();
    partial void OnPreminumZipIdChanging(int value);
    partial void OnPreminumZipIdChanged();
    #endregion
		
		public PremiumZipBoxMapping()
		{
			this._PremiumZip = default(EntityRef<PremiumZip>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_BoxId", DbType="Int NOT NULL")]
		public int BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[Column(Storage="_PreminumZipId", DbType="Int NOT NULL")]
		public int PreminumZipId
		{
			get
			{
				return this._PreminumZipId;
			}
			set
			{
				if ((this._PreminumZipId != value))
				{
					if (this._PremiumZip.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreminumZipIdChanging(value);
					this.SendPropertyChanging();
					this._PreminumZipId = value;
					this.SendPropertyChanged("PreminumZipId");
					this.OnPreminumZipIdChanged();
				}
			}
		}
		
		[Association(Name="PremiumZip_PremiumZipBoxMapping", Storage="_PremiumZip", ThisKey="PreminumZipId", OtherKey="ID", IsForeignKey=true)]
		public PremiumZip PremiumZip
		{
			get
			{
				return this._PremiumZip.Entity;
			}
			set
			{
				PremiumZip previousValue = this._PremiumZip.Entity;
				if (((previousValue != value) 
							|| (this._PremiumZip.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PremiumZip.Entity = null;
						previousValue.PremiumZipBoxMappings.Remove(this);
					}
					this._PremiumZip.Entity = value;
					if ((value != null))
					{
						value.PremiumZipBoxMappings.Add(this);
						this._PreminumZipId = value.ID;
					}
					else
					{
						this._PreminumZipId = default(int);
					}
					this.SendPropertyChanged("PremiumZip");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PremiumZipCoordinates")]
	public partial class PremiumZipCoordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _PreminumZipId;
		
		private int _ShapeId;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntityRef<PremiumZip> _PremiumZip;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnPreminumZipIdChanging(int value);
    partial void OnPreminumZipIdChanged();
    partial void OnShapeIdChanging(int value);
    partial void OnShapeIdChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public PremiumZipCoordinate()
		{
			this._PremiumZip = default(EntityRef<PremiumZip>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_PreminumZipId", DbType="Int NOT NULL")]
		public int PreminumZipId
		{
			get
			{
				return this._PreminumZipId;
			}
			set
			{
				if ((this._PreminumZipId != value))
				{
					if (this._PremiumZip.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreminumZipIdChanging(value);
					this.SendPropertyChanging();
					this._PreminumZipId = value;
					this.SendPropertyChanged("PreminumZipId");
					this.OnPreminumZipIdChanged();
				}
			}
		}
		
		[Column(Storage="_ShapeId", DbType="Int NOT NULL")]
		public int ShapeId
		{
			get
			{
				return this._ShapeId;
			}
			set
			{
				if ((this._ShapeId != value))
				{
					this.OnShapeIdChanging(value);
					this.SendPropertyChanging();
					this._ShapeId = value;
					this.SendPropertyChanged("ShapeId");
					this.OnShapeIdChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="PremiumZip_PremiumZipCoordinate", Storage="_PremiumZip", ThisKey="PreminumZipId", OtherKey="ID", IsForeignKey=true)]
		public PremiumZip PremiumZip
		{
			get
			{
				return this._PremiumZip.Entity;
			}
			set
			{
				PremiumZip previousValue = this._PremiumZip.Entity;
				if (((previousValue != value) 
							|| (this._PremiumZip.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PremiumZip.Entity = null;
						previousValue.PremiumZipCoordinates.Remove(this);
					}
					this._PremiumZip.Entity = value;
					if ((value != null))
					{
						value.PremiumZipCoordinates.Add(this);
						this._PreminumZipId = value.ID;
					}
					else
					{
						this._PreminumZipId = default(int);
					}
					this.SendPropertyChanged("PremiumZip");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PremiumCRouteCoordinates")]
	public partial class PremiumCRouteCoordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _PreminumCRouteId;
		
		private int _ShapeId;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntityRef<PremiumCRoute> _PremiumCRoute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnPreminumCRouteIdChanging(int value);
    partial void OnPreminumCRouteIdChanged();
    partial void OnShapeIdChanging(int value);
    partial void OnShapeIdChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public PremiumCRouteCoordinate()
		{
			this._PremiumCRoute = default(EntityRef<PremiumCRoute>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_PreminumCRouteId", DbType="Int NOT NULL")]
		public int PreminumCRouteId
		{
			get
			{
				return this._PreminumCRouteId;
			}
			set
			{
				if ((this._PreminumCRouteId != value))
				{
					if (this._PremiumCRoute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreminumCRouteIdChanging(value);
					this.SendPropertyChanging();
					this._PreminumCRouteId = value;
					this.SendPropertyChanged("PreminumCRouteId");
					this.OnPreminumCRouteIdChanged();
				}
			}
		}
		
		[Column(Storage="_ShapeId", DbType="Int NOT NULL")]
		public int ShapeId
		{
			get
			{
				return this._ShapeId;
			}
			set
			{
				if ((this._ShapeId != value))
				{
					this.OnShapeIdChanging(value);
					this.SendPropertyChanging();
					this._ShapeId = value;
					this.SendPropertyChanged("ShapeId");
					this.OnShapeIdChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="PremiumCRoute_PremiumCRouteCoordinate", Storage="_PremiumCRoute", ThisKey="PreminumCRouteId", OtherKey="ID", IsForeignKey=true)]
		public PremiumCRoute PremiumCRoute
		{
			get
			{
				return this._PremiumCRoute.Entity;
			}
			set
			{
				PremiumCRoute previousValue = this._PremiumCRoute.Entity;
				if (((previousValue != value) 
							|| (this._PremiumCRoute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PremiumCRoute.Entity = null;
						previousValue.PremiumCRouteCoordinates.Remove(this);
					}
					this._PremiumCRoute.Entity = value;
					if ((value != null))
					{
						value.PremiumCRouteCoordinates.Add(this);
						this._PreminumCRouteId = value.ID;
					}
					else
					{
						this._PreminumCRouteId = default(int);
					}
					this.SendPropertyChanged("PremiumCRoute");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PremiumZips")]
	public partial class PremiumZip : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FIPSSTCO;
		
		private string _ZIP;
		
		private string _STATE_FIPS;
		
		private string _ZIP_NAME;
		
		private string _COUNTY;
		
		private string _STATE;
		
		private double _MinLatitude;
		
		private double _MaxLatitude;
		
		private double _MinLongitude;
		
		private double _MaxLongitude;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private bool _IsEnabled;
		
		private System.Nullable<int> _OTotal;
		
		private string _Description;
		
		private EntitySet<PremiumZipBoxMapping> _PremiumZipBoxMappings;
		
		private EntitySet<PremiumZipCoordinate> _PremiumZipCoordinates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFIPSSTCOChanging(string value);
    partial void OnFIPSSTCOChanged();
    partial void OnZIPChanging(string value);
    partial void OnZIPChanged();
    partial void OnSTATE_FIPSChanging(string value);
    partial void OnSTATE_FIPSChanged();
    partial void OnZIP_NAMEChanging(string value);
    partial void OnZIP_NAMEChanged();
    partial void OnCOUNTYChanging(string value);
    partial void OnCOUNTYChanged();
    partial void OnSTATEChanging(string value);
    partial void OnSTATEChanged();
    partial void OnMinLatitudeChanging(double value);
    partial void OnMinLatitudeChanged();
    partial void OnMaxLatitudeChanging(double value);
    partial void OnMaxLatitudeChanged();
    partial void OnMinLongitudeChanging(double value);
    partial void OnMinLongitudeChanged();
    partial void OnMaxLongitudeChanging(double value);
    partial void OnMaxLongitudeChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnOTotalChanging(System.Nullable<int> value);
    partial void OnOTotalChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public PremiumZip()
		{
			this._PremiumZipBoxMappings = new EntitySet<PremiumZipBoxMapping>(new Action<PremiumZipBoxMapping>(this.attach_PremiumZipBoxMappings), new Action<PremiumZipBoxMapping>(this.detach_PremiumZipBoxMappings));
			this._PremiumZipCoordinates = new EntitySet<PremiumZipCoordinate>(new Action<PremiumZipCoordinate>(this.attach_PremiumZipCoordinates), new Action<PremiumZipCoordinate>(this.detach_PremiumZipCoordinates));
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_FIPSSTCO", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string FIPSSTCO
		{
			get
			{
				return this._FIPSSTCO;
			}
			set
			{
				if ((this._FIPSSTCO != value))
				{
					this.OnFIPSSTCOChanging(value);
					this.SendPropertyChanging();
					this._FIPSSTCO = value;
					this.SendPropertyChanged("FIPSSTCO");
					this.OnFIPSSTCOChanged();
				}
			}
		}
		
		[Column(Storage="_ZIP", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string ZIP
		{
			get
			{
				return this._ZIP;
			}
			set
			{
				if ((this._ZIP != value))
				{
					this.OnZIPChanging(value);
					this.SendPropertyChanging();
					this._ZIP = value;
					this.SendPropertyChanged("ZIP");
					this.OnZIPChanged();
				}
			}
		}
		
		[Column(Storage="_STATE_FIPS", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string STATE_FIPS
		{
			get
			{
				return this._STATE_FIPS;
			}
			set
			{
				if ((this._STATE_FIPS != value))
				{
					this.OnSTATE_FIPSChanging(value);
					this.SendPropertyChanging();
					this._STATE_FIPS = value;
					this.SendPropertyChanged("STATE_FIPS");
					this.OnSTATE_FIPSChanged();
				}
			}
		}
		
		[Column(Storage="_ZIP_NAME", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string ZIP_NAME
		{
			get
			{
				return this._ZIP_NAME;
			}
			set
			{
				if ((this._ZIP_NAME != value))
				{
					this.OnZIP_NAMEChanging(value);
					this.SendPropertyChanging();
					this._ZIP_NAME = value;
					this.SendPropertyChanged("ZIP_NAME");
					this.OnZIP_NAMEChanged();
				}
			}
		}
		
		[Column(Storage="_COUNTY", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string COUNTY
		{
			get
			{
				return this._COUNTY;
			}
			set
			{
				if ((this._COUNTY != value))
				{
					this.OnCOUNTYChanging(value);
					this.SendPropertyChanging();
					this._COUNTY = value;
					this.SendPropertyChanged("COUNTY");
					this.OnCOUNTYChanged();
				}
			}
		}
		
		[Column(Storage="_STATE", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this.OnSTATEChanging(value);
					this.SendPropertyChanging();
					this._STATE = value;
					this.SendPropertyChanged("STATE");
					this.OnSTATEChanged();
				}
			}
		}
		
		[Column(Storage="_MinLatitude", DbType="Float NOT NULL")]
		public double MinLatitude
		{
			get
			{
				return this._MinLatitude;
			}
			set
			{
				if ((this._MinLatitude != value))
				{
					this.OnMinLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLatitude = value;
					this.SendPropertyChanged("MinLatitude");
					this.OnMinLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLatitude", DbType="Float NOT NULL")]
		public double MaxLatitude
		{
			get
			{
				return this._MaxLatitude;
			}
			set
			{
				if ((this._MaxLatitude != value))
				{
					this.OnMaxLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLatitude = value;
					this.SendPropertyChanged("MaxLatitude");
					this.OnMaxLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MinLongitude", DbType="Float NOT NULL")]
		public double MinLongitude
		{
			get
			{
				return this._MinLongitude;
			}
			set
			{
				if ((this._MinLongitude != value))
				{
					this.OnMinLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLongitude = value;
					this.SendPropertyChanged("MinLongitude");
					this.OnMinLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLongitude", DbType="Float NOT NULL")]
		public double MaxLongitude
		{
			get
			{
				return this._MaxLongitude;
			}
			set
			{
				if ((this._MaxLongitude != value))
				{
					this.OnMaxLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLongitude = value;
					this.SendPropertyChanged("MaxLongitude");
					this.OnMaxLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[Column(Storage="_OTotal", DbType="Int")]
		public System.Nullable<int> OTotal
		{
			get
			{
				return this._OTotal;
			}
			set
			{
				if ((this._OTotal != value))
				{
					this.OnOTotalChanging(value);
					this.SendPropertyChanging();
					this._OTotal = value;
					this.SendPropertyChanged("OTotal");
					this.OnOTotalChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Association(Name="PremiumZip_PremiumZipBoxMapping", Storage="_PremiumZipBoxMappings", ThisKey="ID", OtherKey="PreminumZipId")]
		public EntitySet<PremiumZipBoxMapping> PremiumZipBoxMappings
		{
			get
			{
				return this._PremiumZipBoxMappings;
			}
			set
			{
				this._PremiumZipBoxMappings.Assign(value);
			}
		}
		
		[Association(Name="PremiumZip_PremiumZipCoordinate", Storage="_PremiumZipCoordinates", ThisKey="ID", OtherKey="PreminumZipId")]
		public EntitySet<PremiumZipCoordinate> PremiumZipCoordinates
		{
			get
			{
				return this._PremiumZipCoordinates;
			}
			set
			{
				this._PremiumZipCoordinates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PremiumZipBoxMappings(PremiumZipBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.PremiumZip = this;
		}
		
		private void detach_PremiumZipBoxMappings(PremiumZipBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.PremiumZip = null;
		}
		
		private void attach_PremiumZipCoordinates(PremiumZipCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.PremiumZip = this;
		}
		
		private void detach_PremiumZipCoordinates(PremiumZipCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.PremiumZip = null;
		}
	}
	
	[Table(Name="dbo.PremiumCRouteBoxMappings")]
	public partial class PremiumCRouteBoxMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BoxId;
		
		private int _PreminumCRouteId;
		
		private EntityRef<PremiumCRoute> _PremiumCRoute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBoxIdChanging(int value);
    partial void OnBoxIdChanged();
    partial void OnPreminumCRouteIdChanging(int value);
    partial void OnPreminumCRouteIdChanged();
    #endregion
		
		public PremiumCRouteBoxMapping()
		{
			this._PremiumCRoute = default(EntityRef<PremiumCRoute>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_BoxId", DbType="Int NOT NULL")]
		public int BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[Column(Storage="_PreminumCRouteId", DbType="Int NOT NULL")]
		public int PreminumCRouteId
		{
			get
			{
				return this._PreminumCRouteId;
			}
			set
			{
				if ((this._PreminumCRouteId != value))
				{
					if (this._PremiumCRoute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreminumCRouteIdChanging(value);
					this.SendPropertyChanging();
					this._PreminumCRouteId = value;
					this.SendPropertyChanged("PreminumCRouteId");
					this.OnPreminumCRouteIdChanged();
				}
			}
		}
		
		[Association(Name="PremiumCRoute_PremiumCRouteBoxMapping", Storage="_PremiumCRoute", ThisKey="PreminumCRouteId", OtherKey="ID", IsForeignKey=true)]
		public PremiumCRoute PremiumCRoute
		{
			get
			{
				return this._PremiumCRoute.Entity;
			}
			set
			{
				PremiumCRoute previousValue = this._PremiumCRoute.Entity;
				if (((previousValue != value) 
							|| (this._PremiumCRoute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PremiumCRoute.Entity = null;
						previousValue.PremiumCRouteBoxMappings.Remove(this);
					}
					this._PremiumCRoute.Entity = value;
					if ((value != null))
					{
						value.PremiumCRouteBoxMappings.Add(this);
						this._PreminumCRouteId = value.ID;
					}
					else
					{
						this._PreminumCRouteId = default(int);
					}
					this.SendPropertyChanged("PremiumCRoute");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PremiumCRoutes")]
	public partial class PremiumCRoute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FIPSSTCO;
		
		private string _GEOCODE;
		
		private string _ZIP;
		
		private string _CROUTE;
		
		private string _STATE_FIPS;
		
		private string _STATE;
		
		private string _COUNTY;
		
		private string _ZIP_NAME;
		
		private System.Nullable<int> _HOME_COUNT;
		
		private System.Nullable<int> _BUSINESS_COUNT;
		
		private System.Nullable<int> _APT_COUNT;
		
		private System.Nullable<int> _TOTAL_COUNT;
		
		private double _MinLatitude;
		
		private double _MaxLatitude;
		
		private double _MinLongitude;
		
		private double _MaxLongitude;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private int _IsEnabled;
		
		private System.Nullable<int> _OTotal;
		
		private string _Description;
		
		private System.Nullable<int> _PartCount;
		
		private System.Nullable<int> _IsInnerShape;
		
		private EntitySet<PremiumCRouteCoordinate> _PremiumCRouteCoordinates;
		
		private EntitySet<PremiumCRouteBoxMapping> _PremiumCRouteBoxMappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFIPSSTCOChanging(string value);
    partial void OnFIPSSTCOChanged();
    partial void OnGEOCODEChanging(string value);
    partial void OnGEOCODEChanged();
    partial void OnZIPChanging(string value);
    partial void OnZIPChanged();
    partial void OnCROUTEChanging(string value);
    partial void OnCROUTEChanged();
    partial void OnSTATE_FIPSChanging(string value);
    partial void OnSTATE_FIPSChanged();
    partial void OnSTATEChanging(string value);
    partial void OnSTATEChanged();
    partial void OnCOUNTYChanging(string value);
    partial void OnCOUNTYChanged();
    partial void OnZIP_NAMEChanging(string value);
    partial void OnZIP_NAMEChanged();
    partial void OnHOME_COUNTChanging(System.Nullable<int> value);
    partial void OnHOME_COUNTChanged();
    partial void OnBUSINESS_COUNTChanging(System.Nullable<int> value);
    partial void OnBUSINESS_COUNTChanged();
    partial void OnAPT_COUNTChanging(System.Nullable<int> value);
    partial void OnAPT_COUNTChanged();
    partial void OnTOTAL_COUNTChanging(System.Nullable<int> value);
    partial void OnTOTAL_COUNTChanged();
    partial void OnMinLatitudeChanging(double value);
    partial void OnMinLatitudeChanged();
    partial void OnMaxLatitudeChanging(double value);
    partial void OnMaxLatitudeChanged();
    partial void OnMinLongitudeChanging(double value);
    partial void OnMinLongitudeChanged();
    partial void OnMaxLongitudeChanging(double value);
    partial void OnMaxLongitudeChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnIsEnabledChanging(int value);
    partial void OnIsEnabledChanged();
    partial void OnOTotalChanging(System.Nullable<int> value);
    partial void OnOTotalChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPartCountChanging(System.Nullable<int> value);
    partial void OnPartCountChanged();
    partial void OnIsInnerShapeChanging(System.Nullable<int> value);
    partial void OnIsInnerShapeChanged();
    #endregion
		
		public PremiumCRoute()
		{
			this._PremiumCRouteCoordinates = new EntitySet<PremiumCRouteCoordinate>(new Action<PremiumCRouteCoordinate>(this.attach_PremiumCRouteCoordinates), new Action<PremiumCRouteCoordinate>(this.detach_PremiumCRouteCoordinates));
			this._PremiumCRouteBoxMappings = new EntitySet<PremiumCRouteBoxMapping>(new Action<PremiumCRouteBoxMapping>(this.attach_PremiumCRouteBoxMappings), new Action<PremiumCRouteBoxMapping>(this.detach_PremiumCRouteBoxMappings));
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_FIPSSTCO", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string FIPSSTCO
		{
			get
			{
				return this._FIPSSTCO;
			}
			set
			{
				if ((this._FIPSSTCO != value))
				{
					this.OnFIPSSTCOChanging(value);
					this.SendPropertyChanging();
					this._FIPSSTCO = value;
					this.SendPropertyChanged("FIPSSTCO");
					this.OnFIPSSTCOChanged();
				}
			}
		}
		
		[Column(Storage="_GEOCODE", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string GEOCODE
		{
			get
			{
				return this._GEOCODE;
			}
			set
			{
				if ((this._GEOCODE != value))
				{
					this.OnGEOCODEChanging(value);
					this.SendPropertyChanging();
					this._GEOCODE = value;
					this.SendPropertyChanged("GEOCODE");
					this.OnGEOCODEChanged();
				}
			}
		}
		
		[Column(Storage="_ZIP", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string ZIP
		{
			get
			{
				return this._ZIP;
			}
			set
			{
				if ((this._ZIP != value))
				{
					this.OnZIPChanging(value);
					this.SendPropertyChanging();
					this._ZIP = value;
					this.SendPropertyChanged("ZIP");
					this.OnZIPChanged();
				}
			}
		}
		
		[Column(Storage="_CROUTE", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string CROUTE
		{
			get
			{
				return this._CROUTE;
			}
			set
			{
				if ((this._CROUTE != value))
				{
					this.OnCROUTEChanging(value);
					this.SendPropertyChanging();
					this._CROUTE = value;
					this.SendPropertyChanged("CROUTE");
					this.OnCROUTEChanged();
				}
			}
		}
		
		[Column(Storage="_STATE_FIPS", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string STATE_FIPS
		{
			get
			{
				return this._STATE_FIPS;
			}
			set
			{
				if ((this._STATE_FIPS != value))
				{
					this.OnSTATE_FIPSChanging(value);
					this.SendPropertyChanging();
					this._STATE_FIPS = value;
					this.SendPropertyChanged("STATE_FIPS");
					this.OnSTATE_FIPSChanged();
				}
			}
		}
		
		[Column(Storage="_STATE", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this.OnSTATEChanging(value);
					this.SendPropertyChanging();
					this._STATE = value;
					this.SendPropertyChanged("STATE");
					this.OnSTATEChanged();
				}
			}
		}
		
		[Column(Storage="_COUNTY", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string COUNTY
		{
			get
			{
				return this._COUNTY;
			}
			set
			{
				if ((this._COUNTY != value))
				{
					this.OnCOUNTYChanging(value);
					this.SendPropertyChanging();
					this._COUNTY = value;
					this.SendPropertyChanged("COUNTY");
					this.OnCOUNTYChanged();
				}
			}
		}
		
		[Column(Storage="_ZIP_NAME", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string ZIP_NAME
		{
			get
			{
				return this._ZIP_NAME;
			}
			set
			{
				if ((this._ZIP_NAME != value))
				{
					this.OnZIP_NAMEChanging(value);
					this.SendPropertyChanging();
					this._ZIP_NAME = value;
					this.SendPropertyChanged("ZIP_NAME");
					this.OnZIP_NAMEChanged();
				}
			}
		}
		
		[Column(Storage="_HOME_COUNT", DbType="Int")]
		public System.Nullable<int> HOME_COUNT
		{
			get
			{
				return this._HOME_COUNT;
			}
			set
			{
				if ((this._HOME_COUNT != value))
				{
					this.OnHOME_COUNTChanging(value);
					this.SendPropertyChanging();
					this._HOME_COUNT = value;
					this.SendPropertyChanged("HOME_COUNT");
					this.OnHOME_COUNTChanged();
				}
			}
		}
		
		[Column(Storage="_BUSINESS_COUNT", DbType="Int")]
		public System.Nullable<int> BUSINESS_COUNT
		{
			get
			{
				return this._BUSINESS_COUNT;
			}
			set
			{
				if ((this._BUSINESS_COUNT != value))
				{
					this.OnBUSINESS_COUNTChanging(value);
					this.SendPropertyChanging();
					this._BUSINESS_COUNT = value;
					this.SendPropertyChanged("BUSINESS_COUNT");
					this.OnBUSINESS_COUNTChanged();
				}
			}
		}
		
		[Column(Storage="_APT_COUNT", DbType="Int")]
		public System.Nullable<int> APT_COUNT
		{
			get
			{
				return this._APT_COUNT;
			}
			set
			{
				if ((this._APT_COUNT != value))
				{
					this.OnAPT_COUNTChanging(value);
					this.SendPropertyChanging();
					this._APT_COUNT = value;
					this.SendPropertyChanged("APT_COUNT");
					this.OnAPT_COUNTChanged();
				}
			}
		}
		
		[Column(Storage="_TOTAL_COUNT", DbType="Int")]
		public System.Nullable<int> TOTAL_COUNT
		{
			get
			{
				return this._TOTAL_COUNT;
			}
			set
			{
				if ((this._TOTAL_COUNT != value))
				{
					this.OnTOTAL_COUNTChanging(value);
					this.SendPropertyChanging();
					this._TOTAL_COUNT = value;
					this.SendPropertyChanged("TOTAL_COUNT");
					this.OnTOTAL_COUNTChanged();
				}
			}
		}
		
		[Column(Storage="_MinLatitude", DbType="Float NOT NULL")]
		public double MinLatitude
		{
			get
			{
				return this._MinLatitude;
			}
			set
			{
				if ((this._MinLatitude != value))
				{
					this.OnMinLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLatitude = value;
					this.SendPropertyChanged("MinLatitude");
					this.OnMinLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLatitude", DbType="Float NOT NULL")]
		public double MaxLatitude
		{
			get
			{
				return this._MaxLatitude;
			}
			set
			{
				if ((this._MaxLatitude != value))
				{
					this.OnMaxLatitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLatitude = value;
					this.SendPropertyChanged("MaxLatitude");
					this.OnMaxLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MinLongitude", DbType="Float NOT NULL")]
		public double MinLongitude
		{
			get
			{
				return this._MinLongitude;
			}
			set
			{
				if ((this._MinLongitude != value))
				{
					this.OnMinLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MinLongitude = value;
					this.SendPropertyChanged("MinLongitude");
					this.OnMinLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLongitude", DbType="Float NOT NULL")]
		public double MaxLongitude
		{
			get
			{
				return this._MaxLongitude;
			}
			set
			{
				if ((this._MaxLongitude != value))
				{
					this.OnMaxLongitudeChanging(value);
					this.SendPropertyChanging();
					this._MaxLongitude = value;
					this.SendPropertyChanged("MaxLongitude");
					this.OnMaxLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_IsEnabled", DbType="Int NOT NULL")]
		public int IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[Column(Storage="_OTotal", DbType="Int")]
		public System.Nullable<int> OTotal
		{
			get
			{
				return this._OTotal;
			}
			set
			{
				if ((this._OTotal != value))
				{
					this.OnOTotalChanging(value);
					this.SendPropertyChanging();
					this._OTotal = value;
					this.SendPropertyChanged("OTotal");
					this.OnOTotalChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_PartCount", DbType="Int")]
		public System.Nullable<int> PartCount
		{
			get
			{
				return this._PartCount;
			}
			set
			{
				if ((this._PartCount != value))
				{
					this.OnPartCountChanging(value);
					this.SendPropertyChanging();
					this._PartCount = value;
					this.SendPropertyChanged("PartCount");
					this.OnPartCountChanged();
				}
			}
		}
		
		[Column(Storage="_IsInnerShape", DbType="Int")]
		public System.Nullable<int> IsInnerShape
		{
			get
			{
				return this._IsInnerShape;
			}
			set
			{
				if ((this._IsInnerShape != value))
				{
					this.OnIsInnerShapeChanging(value);
					this.SendPropertyChanging();
					this._IsInnerShape = value;
					this.SendPropertyChanged("IsInnerShape");
					this.OnIsInnerShapeChanged();
				}
			}
		}
		
		[Association(Name="PremiumCRoute_PremiumCRouteCoordinate", Storage="_PremiumCRouteCoordinates", ThisKey="ID", OtherKey="PreminumCRouteId")]
		public EntitySet<PremiumCRouteCoordinate> PremiumCRouteCoordinates
		{
			get
			{
				return this._PremiumCRouteCoordinates;
			}
			set
			{
				this._PremiumCRouteCoordinates.Assign(value);
			}
		}
		
		[Association(Name="PremiumCRoute_PremiumCRouteBoxMapping", Storage="_PremiumCRouteBoxMappings", ThisKey="ID", OtherKey="PreminumCRouteId")]
		public EntitySet<PremiumCRouteBoxMapping> PremiumCRouteBoxMappings
		{
			get
			{
				return this._PremiumCRouteBoxMappings;
			}
			set
			{
				this._PremiumCRouteBoxMappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PremiumCRouteCoordinates(PremiumCRouteCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.PremiumCRoute = this;
		}
		
		private void detach_PremiumCRouteCoordinates(PremiumCRouteCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.PremiumCRoute = null;
		}
		
		private void attach_PremiumCRouteBoxMappings(PremiumCRouteBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.PremiumCRoute = this;
		}
		
		private void detach_PremiumCRouteBoxMappings(PremiumCRouteBoxMapping entity)
		{
			this.SendPropertyChanging();
			entity.PremiumCRoute = null;
		}
	}
}
#pragma warning restore 1591
