//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40818.0
// 
namespace GPS.SilverlightCampaign.CampaignReaderSLService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToBasicCampaignProperties", Namespace="TIMM.Website.TransferObjects")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GPS.SilverlightCampaign.CampaignReaderSLService.ToCampaign))]
    public partial class ToBasicCampaignProperties : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AreaDescriptionField;
        
        private string ClientCodeField;
        
        private string ClientNameField;
        
        private string CompositeNameField;
        
        private string ContactNameField;
        
        private string CustemerNameField;
        
        private string DateField;
        
        private string DescriptionField;
        
        private int IdField;
        
        private double LatitudeField;
        
        private string LogoField;
        
        private double LongitudeField;
        
        private string NameField;
        
        private int SequenceField;
        
        private string UserNameField;
        
        private int ZoomLevelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaDescription {
            get {
                return this.AreaDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaDescriptionField, value) != true)) {
                    this.AreaDescriptionField = value;
                    this.RaisePropertyChanged("AreaDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientCode {
            get {
                return this.ClientCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientCodeField, value) != true)) {
                    this.ClientCodeField = value;
                    this.RaisePropertyChanged("ClientCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositeName {
            get {
                return this.CompositeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositeNameField, value) != true)) {
                    this.CompositeNameField = value;
                    this.RaisePropertyChanged("CompositeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustemerName {
            get {
                return this.CustemerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustemerNameField, value) != true)) {
                    this.CustemerNameField = value;
                    this.RaisePropertyChanged("CustemerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Logo {
            get {
                return this.LogoField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoField, value) != true)) {
                    this.LogoField = value;
                    this.RaisePropertyChanged("Logo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sequence {
            get {
                return this.SequenceField;
            }
            set {
                if ((this.SequenceField.Equals(value) != true)) {
                    this.SequenceField = value;
                    this.RaisePropertyChanged("Sequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ZoomLevel {
            get {
                return this.ZoomLevelField;
            }
            set {
                if ((this.ZoomLevelField.Equals(value) != true)) {
                    this.ZoomLevelField = value;
                    this.RaisePropertyChanged("ZoomLevel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToCampaign", Namespace="TIMM.Website.TransferObjects")]
    public partial class ToCampaign : GPS.SilverlightCampaign.CampaignReaderSLService.ToBasicCampaignProperties {
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToAddress> AddressesField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToCampaignPercentageColor> CampaignPercentageColorsField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToAreaRecord> CampaignRecordsField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToSubMap> SubMapsField;
        
        private System.Collections.Generic.Dictionary<GPS.SilverlightCampaign.CampaignReaderSLService.ToUser, GPS.SilverlightCampaign.CampaignReaderSLService.ToStatusInfo> UsersField;
        
        private System.Collections.ObjectModel.ObservableCollection<int> VisibleClassificationsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToAddress> Addresses {
            get {
                return this.AddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressesField, value) != true)) {
                    this.AddressesField = value;
                    this.RaisePropertyChanged("Addresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToCampaignPercentageColor> CampaignPercentageColors {
            get {
                return this.CampaignPercentageColorsField;
            }
            set {
                if ((object.ReferenceEquals(this.CampaignPercentageColorsField, value) != true)) {
                    this.CampaignPercentageColorsField = value;
                    this.RaisePropertyChanged("CampaignPercentageColors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToAreaRecord> CampaignRecords {
            get {
                return this.CampaignRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.CampaignRecordsField, value) != true)) {
                    this.CampaignRecordsField = value;
                    this.RaisePropertyChanged("CampaignRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToSubMap> SubMaps {
            get {
                return this.SubMapsField;
            }
            set {
                if ((object.ReferenceEquals(this.SubMapsField, value) != true)) {
                    this.SubMapsField = value;
                    this.RaisePropertyChanged("SubMaps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<GPS.SilverlightCampaign.CampaignReaderSLService.ToUser, GPS.SilverlightCampaign.CampaignReaderSLService.ToStatusInfo> Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<int> VisibleClassifications {
            get {
                return this.VisibleClassificationsField;
            }
            set {
                if ((object.ReferenceEquals(this.VisibleClassificationsField, value) != true)) {
                    this.VisibleClassificationsField = value;
                    this.RaisePropertyChanged("VisibleClassifications");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToAddress", Namespace="TIMM.Website.AreaServices")]
    public partial class ToAddress : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ColorField;
        
        private int IdField;
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        private double OriginalLatitudeField;
        
        private double OriginalLongitudeField;
        
        private string PictureField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToAddressRadius> RadiusesField;
        
        private string StreetField;
        
        private string ZipCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OriginalLatitude {
            get {
                return this.OriginalLatitudeField;
            }
            set {
                if ((this.OriginalLatitudeField.Equals(value) != true)) {
                    this.OriginalLatitudeField = value;
                    this.RaisePropertyChanged("OriginalLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OriginalLongitude {
            get {
                return this.OriginalLongitudeField;
            }
            set {
                if ((this.OriginalLongitudeField.Equals(value) != true)) {
                    this.OriginalLongitudeField = value;
                    this.RaisePropertyChanged("OriginalLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Picture {
            get {
                return this.PictureField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureField, value) != true)) {
                    this.PictureField = value;
                    this.RaisePropertyChanged("Picture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToAddressRadius> Radiuses {
            get {
                return this.RadiusesField;
            }
            set {
                if ((object.ReferenceEquals(this.RadiusesField, value) != true)) {
                    this.RadiusesField = value;
                    this.RaisePropertyChanged("Radiuses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToCampaignPercentageColor", Namespace="TIMM.Website.TransferObjects")]
    public partial class ToCampaignPercentageColor : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CampaignIdField;
        
        private int ColorIdField;
        
        private int IdField;
        
        private double MaxField;
        
        private double MinField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CampaignId {
            get {
                return this.CampaignIdField;
            }
            set {
                if ((this.CampaignIdField.Equals(value) != true)) {
                    this.CampaignIdField = value;
                    this.RaisePropertyChanged("CampaignId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorId {
            get {
                return this.ColorIdField;
            }
            set {
                if ((this.ColorIdField.Equals(value) != true)) {
                    this.ColorIdField = value;
                    this.RaisePropertyChanged("ColorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Max {
            get {
                return this.MaxField;
            }
            set {
                if ((this.MaxField.Equals(value) != true)) {
                    this.MaxField = value;
                    this.RaisePropertyChanged("Max");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Min {
            get {
                return this.MinField;
            }
            set {
                if ((this.MinField.Equals(value) != true)) {
                    this.MinField = value;
                    this.RaisePropertyChanged("Min");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToAreaRecord", Namespace="TIMM.Website.TransferObjects")]
    public partial class ToAreaRecord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AreaIdField;
        
        private int ClassificationField;
        
        private System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, bool>> RelationsField;
        
        private bool ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AreaId {
            get {
                return this.AreaIdField;
            }
            set {
                if ((this.AreaIdField.Equals(value) != true)) {
                    this.AreaIdField = value;
                    this.RaisePropertyChanged("AreaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Classification {
            get {
                return this.ClassificationField;
            }
            set {
                if ((this.ClassificationField.Equals(value) != true)) {
                    this.ClassificationField = value;
                    this.RaisePropertyChanged("Classification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, bool>> Relations {
            get {
                return this.RelationsField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationsField, value) != true)) {
                    this.RelationsField = value;
                    this.RaisePropertyChanged("Relations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToSubMap", Namespace="TIMM.Website.DistributionMapServices")]
    public partial class ToSubMap : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CampaignIdField;
        
        private double CenterLatitudeField;
        
        private double CenterLongitudeField;
        
        private int ColorBField;
        
        private int ColorGField;
        
        private int ColorRField;
        
        private string ColorStringField;
        
        private int CountAdjustmentField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToDistributionMap> DistributionMapsField;
        
        private int IdField;
        
        private string NameField;
        
        private int OrderIdField;
        
        private int PenetrationField;
        
        private double PercentageField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToCoordinate> SubMapCoordinatesField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToAreaRecord> SubMapRecordsField;
        
        private int TotalField;
        
        private int TotalAdjustmentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CampaignId {
            get {
                return this.CampaignIdField;
            }
            set {
                if ((this.CampaignIdField.Equals(value) != true)) {
                    this.CampaignIdField = value;
                    this.RaisePropertyChanged("CampaignId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CenterLatitude {
            get {
                return this.CenterLatitudeField;
            }
            set {
                if ((this.CenterLatitudeField.Equals(value) != true)) {
                    this.CenterLatitudeField = value;
                    this.RaisePropertyChanged("CenterLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CenterLongitude {
            get {
                return this.CenterLongitudeField;
            }
            set {
                if ((this.CenterLongitudeField.Equals(value) != true)) {
                    this.CenterLongitudeField = value;
                    this.RaisePropertyChanged("CenterLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorB {
            get {
                return this.ColorBField;
            }
            set {
                if ((this.ColorBField.Equals(value) != true)) {
                    this.ColorBField = value;
                    this.RaisePropertyChanged("ColorB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorG {
            get {
                return this.ColorGField;
            }
            set {
                if ((this.ColorGField.Equals(value) != true)) {
                    this.ColorGField = value;
                    this.RaisePropertyChanged("ColorG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorR {
            get {
                return this.ColorRField;
            }
            set {
                if ((this.ColorRField.Equals(value) != true)) {
                    this.ColorRField = value;
                    this.RaisePropertyChanged("ColorR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorString {
            get {
                return this.ColorStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorStringField, value) != true)) {
                    this.ColorStringField = value;
                    this.RaisePropertyChanged("ColorString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountAdjustment {
            get {
                return this.CountAdjustmentField;
            }
            set {
                if ((this.CountAdjustmentField.Equals(value) != true)) {
                    this.CountAdjustmentField = value;
                    this.RaisePropertyChanged("CountAdjustment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToDistributionMap> DistributionMaps {
            get {
                return this.DistributionMapsField;
            }
            set {
                if ((object.ReferenceEquals(this.DistributionMapsField, value) != true)) {
                    this.DistributionMapsField = value;
                    this.RaisePropertyChanged("DistributionMaps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Penetration {
            get {
                return this.PenetrationField;
            }
            set {
                if ((this.PenetrationField.Equals(value) != true)) {
                    this.PenetrationField = value;
                    this.RaisePropertyChanged("Penetration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Percentage {
            get {
                return this.PercentageField;
            }
            set {
                if ((this.PercentageField.Equals(value) != true)) {
                    this.PercentageField = value;
                    this.RaisePropertyChanged("Percentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToCoordinate> SubMapCoordinates {
            get {
                return this.SubMapCoordinatesField;
            }
            set {
                if ((object.ReferenceEquals(this.SubMapCoordinatesField, value) != true)) {
                    this.SubMapCoordinatesField = value;
                    this.RaisePropertyChanged("SubMapCoordinates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToAreaRecord> SubMapRecords {
            get {
                return this.SubMapRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.SubMapRecordsField, value) != true)) {
                    this.SubMapRecordsField = value;
                    this.RaisePropertyChanged("SubMapRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalAdjustment {
            get {
                return this.TotalAdjustmentField;
            }
            set {
                if ((this.TotalAdjustmentField.Equals(value) != true)) {
                    this.TotalAdjustmentField = value;
                    this.RaisePropertyChanged("TotalAdjustment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToUser", Namespace="TIMM.Website.UserServices")]
    public partial class ToUser : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool EnabledField;
        
        private string FullNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToGroup> GroupsField;
        
        private int IdField;
        
        private string PasswordField;
        
        private int RoleField;
        
        private string RoleNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToTaskgtuinfomapping> TaskgtuinfomappingsField;
        
        private string UserCodeField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToGroup> Groups {
            get {
                return this.GroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupsField, value) != true)) {
                    this.GroupsField = value;
                    this.RaisePropertyChanged("Groups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToTaskgtuinfomapping> Taskgtuinfomappings {
            get {
                return this.TaskgtuinfomappingsField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskgtuinfomappingsField, value) != true)) {
                    this.TaskgtuinfomappingsField = value;
                    this.RaisePropertyChanged("Taskgtuinfomappings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserCode {
            get {
                return this.UserCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCodeField, value) != true)) {
                    this.UserCodeField = value;
                    this.RaisePropertyChanged("UserCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToStatusInfo", Namespace="TIMM.Website.UserServices")]
    public partial class ToStatusInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToAddressRadius", Namespace="TIMM.Website.AreaServices")]
    public partial class ToAddressRadius : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private bool IsDisplayField;
        
        private double LengthField;
        
        private int LengthMeasuresIdField;
        
        private System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, string>> RelationsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDisplay {
            get {
                return this.IsDisplayField;
            }
            set {
                if ((this.IsDisplayField.Equals(value) != true)) {
                    this.IsDisplayField = value;
                    this.RaisePropertyChanged("IsDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LengthMeasuresId {
            get {
                return this.LengthMeasuresIdField;
            }
            set {
                if ((this.LengthMeasuresIdField.Equals(value) != true)) {
                    this.LengthMeasuresIdField = value;
                    this.RaisePropertyChanged("LengthMeasuresId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, string>> Relations {
            get {
                return this.RelationsField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationsField, value) != true)) {
                    this.RelationsField = value;
                    this.RaisePropertyChanged("Relations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToDistributionMap", Namespace="TIMM.Website.DistributionMapServices")]
    public partial class ToDistributionMap : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double CenterLatitudeField;
        
        private double CenterLongitudeField;
        
        private int ColorBField;
        
        private int ColorGField;
        
        private int ColorRField;
        
        private string ColorStringField;
        
        private int CountAdjustmentField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToCoordinate> DistributionMapCoordinatesField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToAreaRecord> DistributionMapRecordsField;
        
        private int IdField;
        
        private string NameField;
        
        private int PenetrationField;
        
        private double PercentageField;
        
        private int SubMapIdField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToTask> TasksField;
        
        private int TotalField;
        
        private int TotalAdjustmentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CenterLatitude {
            get {
                return this.CenterLatitudeField;
            }
            set {
                if ((this.CenterLatitudeField.Equals(value) != true)) {
                    this.CenterLatitudeField = value;
                    this.RaisePropertyChanged("CenterLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CenterLongitude {
            get {
                return this.CenterLongitudeField;
            }
            set {
                if ((this.CenterLongitudeField.Equals(value) != true)) {
                    this.CenterLongitudeField = value;
                    this.RaisePropertyChanged("CenterLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorB {
            get {
                return this.ColorBField;
            }
            set {
                if ((this.ColorBField.Equals(value) != true)) {
                    this.ColorBField = value;
                    this.RaisePropertyChanged("ColorB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorG {
            get {
                return this.ColorGField;
            }
            set {
                if ((this.ColorGField.Equals(value) != true)) {
                    this.ColorGField = value;
                    this.RaisePropertyChanged("ColorG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorR {
            get {
                return this.ColorRField;
            }
            set {
                if ((this.ColorRField.Equals(value) != true)) {
                    this.ColorRField = value;
                    this.RaisePropertyChanged("ColorR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorString {
            get {
                return this.ColorStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorStringField, value) != true)) {
                    this.ColorStringField = value;
                    this.RaisePropertyChanged("ColorString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountAdjustment {
            get {
                return this.CountAdjustmentField;
            }
            set {
                if ((this.CountAdjustmentField.Equals(value) != true)) {
                    this.CountAdjustmentField = value;
                    this.RaisePropertyChanged("CountAdjustment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToCoordinate> DistributionMapCoordinates {
            get {
                return this.DistributionMapCoordinatesField;
            }
            set {
                if ((object.ReferenceEquals(this.DistributionMapCoordinatesField, value) != true)) {
                    this.DistributionMapCoordinatesField = value;
                    this.RaisePropertyChanged("DistributionMapCoordinates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToAreaRecord> DistributionMapRecords {
            get {
                return this.DistributionMapRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.DistributionMapRecordsField, value) != true)) {
                    this.DistributionMapRecordsField = value;
                    this.RaisePropertyChanged("DistributionMapRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Penetration {
            get {
                return this.PenetrationField;
            }
            set {
                if ((this.PenetrationField.Equals(value) != true)) {
                    this.PenetrationField = value;
                    this.RaisePropertyChanged("Penetration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Percentage {
            get {
                return this.PercentageField;
            }
            set {
                if ((this.PercentageField.Equals(value) != true)) {
                    this.PercentageField = value;
                    this.RaisePropertyChanged("Percentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubMapId {
            get {
                return this.SubMapIdField;
            }
            set {
                if ((this.SubMapIdField.Equals(value) != true)) {
                    this.SubMapIdField = value;
                    this.RaisePropertyChanged("SubMapId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToTask> Tasks {
            get {
                return this.TasksField;
            }
            set {
                if ((object.ReferenceEquals(this.TasksField, value) != true)) {
                    this.TasksField = value;
                    this.RaisePropertyChanged("Tasks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalAdjustment {
            get {
                return this.TotalAdjustmentField;
            }
            set {
                if ((this.TotalAdjustmentField.Equals(value) != true)) {
                    this.TotalAdjustmentField = value;
                    this.RaisePropertyChanged("TotalAdjustment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToCoordinate", Namespace="TIMM.Website.TransferObjects")]
    public partial class ToCoordinate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToTask", Namespace="TIMM.Website.TaskServices")]
    public partial class ToTask : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AuditorIdField;
        
        private string DateField;
        
        private int DmIdField;
        
        private string EmailField;
        
        private int IdField;
        
        private string NameField;
        
        private int StatusField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToTaskgtuinfomapping> TaskgtuinfomappingsField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToTaskTime> TasktimesField;
        
        private string TelephoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuditorId {
            get {
                return this.AuditorIdField;
            }
            set {
                if ((this.AuditorIdField.Equals(value) != true)) {
                    this.AuditorIdField = value;
                    this.RaisePropertyChanged("AuditorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DmId {
            get {
                return this.DmIdField;
            }
            set {
                if ((this.DmIdField.Equals(value) != true)) {
                    this.DmIdField = value;
                    this.RaisePropertyChanged("DmId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToTaskgtuinfomapping> Taskgtuinfomappings {
            get {
                return this.TaskgtuinfomappingsField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskgtuinfomappingsField, value) != true)) {
                    this.TaskgtuinfomappingsField = value;
                    this.RaisePropertyChanged("Taskgtuinfomappings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToTaskTime> Tasktimes {
            get {
                return this.TasktimesField;
            }
            set {
                if ((object.ReferenceEquals(this.TasktimesField, value) != true)) {
                    this.TasktimesField = value;
                    this.RaisePropertyChanged("Tasktimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToTaskgtuinfomapping", Namespace="TIMM.Website.TaskServices")]
    public partial class ToTaskgtuinfomapping : object, System.ComponentModel.INotifyPropertyChanged {
        
        private GPS.SilverlightCampaign.CampaignReaderSLService.ToGtu GTUField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToGtuinfo> GtuinfosField;
        
        private int IdField;
        
        private int TaskIdField;
        
        private string UserColorField;
        
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPS.SilverlightCampaign.CampaignReaderSLService.ToGtu GTU {
            get {
                return this.GTUField;
            }
            set {
                if ((object.ReferenceEquals(this.GTUField, value) != true)) {
                    this.GTUField = value;
                    this.RaisePropertyChanged("GTU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToGtuinfo> Gtuinfos {
            get {
                return this.GtuinfosField;
            }
            set {
                if ((object.ReferenceEquals(this.GtuinfosField, value) != true)) {
                    this.GtuinfosField = value;
                    this.RaisePropertyChanged("Gtuinfos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserColor {
            get {
                return this.UserColorField;
            }
            set {
                if ((object.ReferenceEquals(this.UserColorField, value) != true)) {
                    this.UserColorField = value;
                    this.RaisePropertyChanged("UserColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToTaskTime", Namespace="TIMM.Website.TaskServices")]
    public partial class ToTaskTime : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private int TaskIdField;
        
        private string TimeField;
        
        private int TimeTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Time {
            get {
                return this.TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeField, value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeType {
            get {
                return this.TimeTypeField;
            }
            set {
                if ((this.TimeTypeField.Equals(value) != true)) {
                    this.TimeTypeField = value;
                    this.RaisePropertyChanged("TimeType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToGtu", Namespace="TIMM.Website.TrackServices")]
    public partial class ToGtu : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private bool IsEnabledField;
        
        private string ModelField;
        
        private string UniqueIDField;
        
        private int UserIdField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnabled {
            get {
                return this.IsEnabledField;
            }
            set {
                if ((this.IsEnabledField.Equals(value) != true)) {
                    this.IsEnabledField = value;
                    this.RaisePropertyChanged("IsEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqueID {
            get {
                return this.UniqueIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UniqueIDField, value) != true)) {
                    this.UniqueIDField = value;
                    this.RaisePropertyChanged("UniqueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToGtuinfo", Namespace="TIMM.Website.TaskServices")]
    public partial class ToGtuinfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CodeField;
        
        private double DistanceField;
        
        private int IdField;
        
        private int PowerInfoField;
        
        private int StatusField;
        
        private int TaskgtuinfoIdField;
        
        private string dtReceivedTimeField;
        
        private string dtSendTimeField;
        
        private double dwAltitudeField;
        
        private double dwLatitudeField;
        
        private double dwLongitudeField;
        
        private double dwSpeedField;
        
        private int nAccuracyField;
        
        private int nAreaCodeField;
        
        private int nCellIDField;
        
        private int nCountField;
        
        private long nGPSFixField;
        
        private int nHeadingField;
        
        private int nLocationIDField;
        
        private int nNetworkCodeField;
        
        private string sIPAddressField;
        
        private string sVersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Distance {
            get {
                return this.DistanceField;
            }
            set {
                if ((this.DistanceField.Equals(value) != true)) {
                    this.DistanceField = value;
                    this.RaisePropertyChanged("Distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PowerInfo {
            get {
                return this.PowerInfoField;
            }
            set {
                if ((this.PowerInfoField.Equals(value) != true)) {
                    this.PowerInfoField = value;
                    this.RaisePropertyChanged("PowerInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskgtuinfoId {
            get {
                return this.TaskgtuinfoIdField;
            }
            set {
                if ((this.TaskgtuinfoIdField.Equals(value) != true)) {
                    this.TaskgtuinfoIdField = value;
                    this.RaisePropertyChanged("TaskgtuinfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dtReceivedTime {
            get {
                return this.dtReceivedTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.dtReceivedTimeField, value) != true)) {
                    this.dtReceivedTimeField = value;
                    this.RaisePropertyChanged("dtReceivedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dtSendTime {
            get {
                return this.dtSendTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.dtSendTimeField, value) != true)) {
                    this.dtSendTimeField = value;
                    this.RaisePropertyChanged("dtSendTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double dwAltitude {
            get {
                return this.dwAltitudeField;
            }
            set {
                if ((this.dwAltitudeField.Equals(value) != true)) {
                    this.dwAltitudeField = value;
                    this.RaisePropertyChanged("dwAltitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double dwLatitude {
            get {
                return this.dwLatitudeField;
            }
            set {
                if ((this.dwLatitudeField.Equals(value) != true)) {
                    this.dwLatitudeField = value;
                    this.RaisePropertyChanged("dwLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double dwLongitude {
            get {
                return this.dwLongitudeField;
            }
            set {
                if ((this.dwLongitudeField.Equals(value) != true)) {
                    this.dwLongitudeField = value;
                    this.RaisePropertyChanged("dwLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double dwSpeed {
            get {
                return this.dwSpeedField;
            }
            set {
                if ((this.dwSpeedField.Equals(value) != true)) {
                    this.dwSpeedField = value;
                    this.RaisePropertyChanged("dwSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nAccuracy {
            get {
                return this.nAccuracyField;
            }
            set {
                if ((this.nAccuracyField.Equals(value) != true)) {
                    this.nAccuracyField = value;
                    this.RaisePropertyChanged("nAccuracy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nAreaCode {
            get {
                return this.nAreaCodeField;
            }
            set {
                if ((this.nAreaCodeField.Equals(value) != true)) {
                    this.nAreaCodeField = value;
                    this.RaisePropertyChanged("nAreaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nCellID {
            get {
                return this.nCellIDField;
            }
            set {
                if ((this.nCellIDField.Equals(value) != true)) {
                    this.nCellIDField = value;
                    this.RaisePropertyChanged("nCellID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nCount {
            get {
                return this.nCountField;
            }
            set {
                if ((this.nCountField.Equals(value) != true)) {
                    this.nCountField = value;
                    this.RaisePropertyChanged("nCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long nGPSFix {
            get {
                return this.nGPSFixField;
            }
            set {
                if ((this.nGPSFixField.Equals(value) != true)) {
                    this.nGPSFixField = value;
                    this.RaisePropertyChanged("nGPSFix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nHeading {
            get {
                return this.nHeadingField;
            }
            set {
                if ((this.nHeadingField.Equals(value) != true)) {
                    this.nHeadingField = value;
                    this.RaisePropertyChanged("nHeading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nLocationID {
            get {
                return this.nLocationIDField;
            }
            set {
                if ((this.nLocationIDField.Equals(value) != true)) {
                    this.nLocationIDField = value;
                    this.RaisePropertyChanged("nLocationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nNetworkCode {
            get {
                return this.nNetworkCodeField;
            }
            set {
                if ((this.nNetworkCodeField.Equals(value) != true)) {
                    this.nNetworkCodeField = value;
                    this.RaisePropertyChanged("nNetworkCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sIPAddress {
            get {
                return this.sIPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.sIPAddressField, value) != true)) {
                    this.sIPAddressField = value;
                    this.RaisePropertyChanged("sIPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sVersion {
            get {
                return this.sVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.sVersionField, value) != true)) {
                    this.sVersionField = value;
                    this.RaisePropertyChanged("sVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToGroup", Namespace="TIMM.Website.GroupServices")]
    public partial class ToGroup : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private string NameField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToPrivilege> PrivilegesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToPrivilege> Privileges {
            get {
                return this.PrivilegesField;
            }
            set {
                if ((object.ReferenceEquals(this.PrivilegesField, value) != true)) {
                    this.PrivilegesField = value;
                    this.RaisePropertyChanged("Privileges");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToPrivilege", Namespace="TIMM.Website.GroupServices")]
    public partial class ToPrivilege : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private string NameField;
        
        private int ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Classifications", Namespace="http://schemas.datacontract.org/2004/07/GPS.DomainLayer.Enum")]
    public enum Classifications : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Z3 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Z5 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TRK = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BG = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CBSA = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Urban = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        County = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SLD_Senate = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SLD_House = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Voting_District = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SD_Elem = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SD_Secondary = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SD_Unified = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Custom = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Address = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PremiumCRoute = 15,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToArea", Namespace="TIMM.Website.AreaServices")]
    public partial class ToArea : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.Generic.Dictionary<string, string> AttributesField;
        
        private int ClassificationField;
        
        private string DescriptionField;
        
        private string IdField;
        
        private bool IsEnabledField;
        
        private double LatitudeField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToCoordinate> LocationsField;
        
        private double LongitudeField;
        
        private string NameField;
        
        private System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, bool>> RelationsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> Attributes {
            get {
                return this.AttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesField, value) != true)) {
                    this.AttributesField = value;
                    this.RaisePropertyChanged("Attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Classification {
            get {
                return this.ClassificationField;
            }
            set {
                if ((this.ClassificationField.Equals(value) != true)) {
                    this.ClassificationField = value;
                    this.RaisePropertyChanged("Classification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnabled {
            get {
                return this.IsEnabledField;
            }
            set {
                if ((this.IsEnabledField.Equals(value) != true)) {
                    this.IsEnabledField = value;
                    this.RaisePropertyChanged("IsEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToCoordinate> Locations {
            get {
                return this.LocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationsField, value) != true)) {
                    this.LocationsField = value;
                    this.RaisePropertyChanged("Locations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, bool>> Relations {
            get {
                return this.RelationsField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationsField, value) != true)) {
                    this.RelationsField = value;
                    this.RaisePropertyChanged("Relations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToAdjustData", Namespace="TIMM.Website.TransferObjects")]
    public partial class ToAdjustData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CountField;
        
        private int IdField;
        
        private bool IsPartModifiedField;
        
        private float PartPercentageField;
        
        private int TotalField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPartModified {
            get {
                return this.IsPartModifiedField;
            }
            set {
                if ((this.IsPartModifiedField.Equals(value) != true)) {
                    this.IsPartModifiedField = value;
                    this.RaisePropertyChanged("IsPartModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float PartPercentage {
            get {
                return this.PartPercentageField;
            }
            set {
                if ((this.PartPercentageField.Equals(value) != true)) {
                    this.PartPercentageField = value;
                    this.RaisePropertyChanged("PartPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="TIMM.Website.SilverlightServices", ConfigurationName="CampaignReaderSLService.CampaignReaderSLService")]
    public interface CampaignReaderSLService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/CampaignReaderSLService/GetCampaignById", ReplyAction="TIMM.Website.SilverlightServices/CampaignReaderSLService/GetCampaignByIdResponse")]
        System.IAsyncResult BeginGetCampaignById(int id, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetCampaignById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/CampaignReaderSLService/GetCampaignObjectById", ReplyAction="TIMM.Website.SilverlightServices/CampaignReaderSLService/GetCampaignObjectByIdRes" +
            "ponse")]
        System.IAsyncResult BeginGetCampaignObjectById(int id, System.AsyncCallback callback, object asyncState);
        
        GPS.SilverlightCampaign.CampaignReaderSLService.ToCampaign EndGetCampaignObjectById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/CampaignReaderSLService/GetCroutesByBoxes", ReplyAction="TIMM.Website.SilverlightServices/CampaignReaderSLService/GetCroutesByBoxesRespons" +
            "e")]
        System.IAsyncResult BeginGetCroutesByBoxes(System.Collections.ObjectModel.ObservableCollection<int> boxIds, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToCoordinate>> EndGetCroutesByBoxes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/CampaignReaderSLService/GetAreaByBoxes", ReplyAction="TIMM.Website.SilverlightServices/CampaignReaderSLService/GetAreaByBoxesResponse")]
        System.IAsyncResult BeginGetAreaByBoxes(System.Collections.ObjectModel.ObservableCollection<int> boxIds, int campaignId, GPS.SilverlightCampaign.CampaignReaderSLService.Classifications classification, GPS.SilverlightCampaign.CampaignReaderSLService.ToArea toArea, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetAreaByBoxes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/CampaignReaderSLService/GetCampaignCRouteAreas", ReplyAction="TIMM.Website.SilverlightServices/CampaignReaderSLService/GetCampaignCRouteAreasRe" +
            "sponse")]
        System.IAsyncResult BeginGetCampaignCRouteAreas(int campaignId, string geoCode, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetCampaignCRouteAreas(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/CampaignReaderSLService/GetSubMapsById", ReplyAction="TIMM.Website.SilverlightServices/CampaignReaderSLService/GetSubMapsByIdResponse")]
        System.IAsyncResult BeginGetSubMapsById(int id, System.AsyncCallback callback, object asyncState);
        
        GPS.SilverlightCampaign.CampaignReaderSLService.ToSubMap EndGetSubMapsById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/CampaignReaderSLService/AdjustData", ReplyAction="TIMM.Website.SilverlightServices/CampaignReaderSLService/AdjustDataResponse")]
        System.IAsyncResult BeginAdjustData(int campaignId, int classification, System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToAdjustData> datas, System.AsyncCallback callback, object asyncState);
        
        void EndAdjustData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/CampaignReaderSLService/SaveCampaign", ReplyAction="TIMM.Website.SilverlightServices/CampaignReaderSLService/SaveCampaignResponse")]
        System.IAsyncResult BeginSaveCampaign(GPS.SilverlightCampaign.CampaignReaderSLService.ToCampaign toCampaign, System.AsyncCallback callback, object asyncState);
        
        void EndSaveCampaign(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CampaignReaderSLServiceChannel : GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCampaignByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCampaignByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCampaignObjectByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCampaignObjectByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GPS.SilverlightCampaign.CampaignReaderSLService.ToCampaign Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GPS.SilverlightCampaign.CampaignReaderSLService.ToCampaign)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCroutesByBoxesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCroutesByBoxesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToCoordinate>> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToCoordinate>>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAreaByBoxesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAreaByBoxesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCampaignCRouteAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCampaignCRouteAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSubMapsByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSubMapsByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GPS.SilverlightCampaign.CampaignReaderSLService.ToSubMap Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GPS.SilverlightCampaign.CampaignReaderSLService.ToSubMap)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CampaignReaderSLServiceClient : System.ServiceModel.ClientBase<GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService>, GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService {
        
        private BeginOperationDelegate onBeginGetCampaignByIdDelegate;
        
        private EndOperationDelegate onEndGetCampaignByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetCampaignByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCampaignObjectByIdDelegate;
        
        private EndOperationDelegate onEndGetCampaignObjectByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetCampaignObjectByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCroutesByBoxesDelegate;
        
        private EndOperationDelegate onEndGetCroutesByBoxesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCroutesByBoxesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAreaByBoxesDelegate;
        
        private EndOperationDelegate onEndGetAreaByBoxesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAreaByBoxesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCampaignCRouteAreasDelegate;
        
        private EndOperationDelegate onEndGetCampaignCRouteAreasDelegate;
        
        private System.Threading.SendOrPostCallback onGetCampaignCRouteAreasCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSubMapsByIdDelegate;
        
        private EndOperationDelegate onEndGetSubMapsByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetSubMapsByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginAdjustDataDelegate;
        
        private EndOperationDelegate onEndAdjustDataDelegate;
        
        private System.Threading.SendOrPostCallback onAdjustDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveCampaignDelegate;
        
        private EndOperationDelegate onEndSaveCampaignDelegate;
        
        private System.Threading.SendOrPostCallback onSaveCampaignCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public CampaignReaderSLServiceClient() {
        }
        
        public CampaignReaderSLServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CampaignReaderSLServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CampaignReaderSLServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CampaignReaderSLServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetCampaignByIdCompletedEventArgs> GetCampaignByIdCompleted;
        
        public event System.EventHandler<GetCampaignObjectByIdCompletedEventArgs> GetCampaignObjectByIdCompleted;
        
        public event System.EventHandler<GetCroutesByBoxesCompletedEventArgs> GetCroutesByBoxesCompleted;
        
        public event System.EventHandler<GetAreaByBoxesCompletedEventArgs> GetAreaByBoxesCompleted;
        
        public event System.EventHandler<GetCampaignCRouteAreasCompletedEventArgs> GetCampaignCRouteAreasCompleted;
        
        public event System.EventHandler<GetSubMapsByIdCompletedEventArgs> GetSubMapsByIdCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AdjustDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveCampaignCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService.BeginGetCampaignById(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCampaignById(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService.EndGetCampaignById(System.IAsyncResult result) {
            return base.Channel.EndGetCampaignById(result);
        }
        
        private System.IAsyncResult OnBeginGetCampaignById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService)(this)).BeginGetCampaignById(id, callback, asyncState);
        }
        
        private object[] OnEndGetCampaignById(System.IAsyncResult result) {
            byte[] retVal = ((GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService)(this)).EndGetCampaignById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCampaignByIdCompleted(object state) {
            if ((this.GetCampaignByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCampaignByIdCompleted(this, new GetCampaignByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCampaignByIdAsync(int id) {
            this.GetCampaignByIdAsync(id, null);
        }
        
        public void GetCampaignByIdAsync(int id, object userState) {
            if ((this.onBeginGetCampaignByIdDelegate == null)) {
                this.onBeginGetCampaignByIdDelegate = new BeginOperationDelegate(this.OnBeginGetCampaignById);
            }
            if ((this.onEndGetCampaignByIdDelegate == null)) {
                this.onEndGetCampaignByIdDelegate = new EndOperationDelegate(this.OnEndGetCampaignById);
            }
            if ((this.onGetCampaignByIdCompletedDelegate == null)) {
                this.onGetCampaignByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCampaignByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetCampaignByIdDelegate, new object[] {
                        id}, this.onEndGetCampaignByIdDelegate, this.onGetCampaignByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService.BeginGetCampaignObjectById(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCampaignObjectById(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GPS.SilverlightCampaign.CampaignReaderSLService.ToCampaign GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService.EndGetCampaignObjectById(System.IAsyncResult result) {
            return base.Channel.EndGetCampaignObjectById(result);
        }
        
        private System.IAsyncResult OnBeginGetCampaignObjectById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService)(this)).BeginGetCampaignObjectById(id, callback, asyncState);
        }
        
        private object[] OnEndGetCampaignObjectById(System.IAsyncResult result) {
            GPS.SilverlightCampaign.CampaignReaderSLService.ToCampaign retVal = ((GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService)(this)).EndGetCampaignObjectById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCampaignObjectByIdCompleted(object state) {
            if ((this.GetCampaignObjectByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCampaignObjectByIdCompleted(this, new GetCampaignObjectByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCampaignObjectByIdAsync(int id) {
            this.GetCampaignObjectByIdAsync(id, null);
        }
        
        public void GetCampaignObjectByIdAsync(int id, object userState) {
            if ((this.onBeginGetCampaignObjectByIdDelegate == null)) {
                this.onBeginGetCampaignObjectByIdDelegate = new BeginOperationDelegate(this.OnBeginGetCampaignObjectById);
            }
            if ((this.onEndGetCampaignObjectByIdDelegate == null)) {
                this.onEndGetCampaignObjectByIdDelegate = new EndOperationDelegate(this.OnEndGetCampaignObjectById);
            }
            if ((this.onGetCampaignObjectByIdCompletedDelegate == null)) {
                this.onGetCampaignObjectByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCampaignObjectByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetCampaignObjectByIdDelegate, new object[] {
                        id}, this.onEndGetCampaignObjectByIdDelegate, this.onGetCampaignObjectByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService.BeginGetCroutesByBoxes(System.Collections.ObjectModel.ObservableCollection<int> boxIds, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCroutesByBoxes(boxIds, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToCoordinate>> GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService.EndGetCroutesByBoxes(System.IAsyncResult result) {
            return base.Channel.EndGetCroutesByBoxes(result);
        }
        
        private System.IAsyncResult OnBeginGetCroutesByBoxes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<int> boxIds = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[0]));
            return ((GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService)(this)).BeginGetCroutesByBoxes(boxIds, callback, asyncState);
        }
        
        private object[] OnEndGetCroutesByBoxes(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToCoordinate>> retVal = ((GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService)(this)).EndGetCroutesByBoxes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCroutesByBoxesCompleted(object state) {
            if ((this.GetCroutesByBoxesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCroutesByBoxesCompleted(this, new GetCroutesByBoxesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCroutesByBoxesAsync(System.Collections.ObjectModel.ObservableCollection<int> boxIds) {
            this.GetCroutesByBoxesAsync(boxIds, null);
        }
        
        public void GetCroutesByBoxesAsync(System.Collections.ObjectModel.ObservableCollection<int> boxIds, object userState) {
            if ((this.onBeginGetCroutesByBoxesDelegate == null)) {
                this.onBeginGetCroutesByBoxesDelegate = new BeginOperationDelegate(this.OnBeginGetCroutesByBoxes);
            }
            if ((this.onEndGetCroutesByBoxesDelegate == null)) {
                this.onEndGetCroutesByBoxesDelegate = new EndOperationDelegate(this.OnEndGetCroutesByBoxes);
            }
            if ((this.onGetCroutesByBoxesCompletedDelegate == null)) {
                this.onGetCroutesByBoxesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCroutesByBoxesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCroutesByBoxesDelegate, new object[] {
                        boxIds}, this.onEndGetCroutesByBoxesDelegate, this.onGetCroutesByBoxesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService.BeginGetAreaByBoxes(System.Collections.ObjectModel.ObservableCollection<int> boxIds, int campaignId, GPS.SilverlightCampaign.CampaignReaderSLService.Classifications classification, GPS.SilverlightCampaign.CampaignReaderSLService.ToArea toArea, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAreaByBoxes(boxIds, campaignId, classification, toArea, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService.EndGetAreaByBoxes(System.IAsyncResult result) {
            return base.Channel.EndGetAreaByBoxes(result);
        }
        
        private System.IAsyncResult OnBeginGetAreaByBoxes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<int> boxIds = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[0]));
            int campaignId = ((int)(inValues[1]));
            GPS.SilverlightCampaign.CampaignReaderSLService.Classifications classification = ((GPS.SilverlightCampaign.CampaignReaderSLService.Classifications)(inValues[2]));
            GPS.SilverlightCampaign.CampaignReaderSLService.ToArea toArea = ((GPS.SilverlightCampaign.CampaignReaderSLService.ToArea)(inValues[3]));
            return ((GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService)(this)).BeginGetAreaByBoxes(boxIds, campaignId, classification, toArea, callback, asyncState);
        }
        
        private object[] OnEndGetAreaByBoxes(System.IAsyncResult result) {
            byte[] retVal = ((GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService)(this)).EndGetAreaByBoxes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAreaByBoxesCompleted(object state) {
            if ((this.GetAreaByBoxesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAreaByBoxesCompleted(this, new GetAreaByBoxesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAreaByBoxesAsync(System.Collections.ObjectModel.ObservableCollection<int> boxIds, int campaignId, GPS.SilverlightCampaign.CampaignReaderSLService.Classifications classification, GPS.SilverlightCampaign.CampaignReaderSLService.ToArea toArea) {
            this.GetAreaByBoxesAsync(boxIds, campaignId, classification, toArea, null);
        }
        
        public void GetAreaByBoxesAsync(System.Collections.ObjectModel.ObservableCollection<int> boxIds, int campaignId, GPS.SilverlightCampaign.CampaignReaderSLService.Classifications classification, GPS.SilverlightCampaign.CampaignReaderSLService.ToArea toArea, object userState) {
            if ((this.onBeginGetAreaByBoxesDelegate == null)) {
                this.onBeginGetAreaByBoxesDelegate = new BeginOperationDelegate(this.OnBeginGetAreaByBoxes);
            }
            if ((this.onEndGetAreaByBoxesDelegate == null)) {
                this.onEndGetAreaByBoxesDelegate = new EndOperationDelegate(this.OnEndGetAreaByBoxes);
            }
            if ((this.onGetAreaByBoxesCompletedDelegate == null)) {
                this.onGetAreaByBoxesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAreaByBoxesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAreaByBoxesDelegate, new object[] {
                        boxIds,
                        campaignId,
                        classification,
                        toArea}, this.onEndGetAreaByBoxesDelegate, this.onGetAreaByBoxesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService.BeginGetCampaignCRouteAreas(int campaignId, string geoCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCampaignCRouteAreas(campaignId, geoCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService.EndGetCampaignCRouteAreas(System.IAsyncResult result) {
            return base.Channel.EndGetCampaignCRouteAreas(result);
        }
        
        private System.IAsyncResult OnBeginGetCampaignCRouteAreas(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int campaignId = ((int)(inValues[0]));
            string geoCode = ((string)(inValues[1]));
            return ((GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService)(this)).BeginGetCampaignCRouteAreas(campaignId, geoCode, callback, asyncState);
        }
        
        private object[] OnEndGetCampaignCRouteAreas(System.IAsyncResult result) {
            byte[] retVal = ((GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService)(this)).EndGetCampaignCRouteAreas(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCampaignCRouteAreasCompleted(object state) {
            if ((this.GetCampaignCRouteAreasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCampaignCRouteAreasCompleted(this, new GetCampaignCRouteAreasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCampaignCRouteAreasAsync(int campaignId, string geoCode) {
            this.GetCampaignCRouteAreasAsync(campaignId, geoCode, null);
        }
        
        public void GetCampaignCRouteAreasAsync(int campaignId, string geoCode, object userState) {
            if ((this.onBeginGetCampaignCRouteAreasDelegate == null)) {
                this.onBeginGetCampaignCRouteAreasDelegate = new BeginOperationDelegate(this.OnBeginGetCampaignCRouteAreas);
            }
            if ((this.onEndGetCampaignCRouteAreasDelegate == null)) {
                this.onEndGetCampaignCRouteAreasDelegate = new EndOperationDelegate(this.OnEndGetCampaignCRouteAreas);
            }
            if ((this.onGetCampaignCRouteAreasCompletedDelegate == null)) {
                this.onGetCampaignCRouteAreasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCampaignCRouteAreasCompleted);
            }
            base.InvokeAsync(this.onBeginGetCampaignCRouteAreasDelegate, new object[] {
                        campaignId,
                        geoCode}, this.onEndGetCampaignCRouteAreasDelegate, this.onGetCampaignCRouteAreasCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService.BeginGetSubMapsById(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSubMapsById(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GPS.SilverlightCampaign.CampaignReaderSLService.ToSubMap GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService.EndGetSubMapsById(System.IAsyncResult result) {
            return base.Channel.EndGetSubMapsById(result);
        }
        
        private System.IAsyncResult OnBeginGetSubMapsById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService)(this)).BeginGetSubMapsById(id, callback, asyncState);
        }
        
        private object[] OnEndGetSubMapsById(System.IAsyncResult result) {
            GPS.SilverlightCampaign.CampaignReaderSLService.ToSubMap retVal = ((GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService)(this)).EndGetSubMapsById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSubMapsByIdCompleted(object state) {
            if ((this.GetSubMapsByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSubMapsByIdCompleted(this, new GetSubMapsByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSubMapsByIdAsync(int id) {
            this.GetSubMapsByIdAsync(id, null);
        }
        
        public void GetSubMapsByIdAsync(int id, object userState) {
            if ((this.onBeginGetSubMapsByIdDelegate == null)) {
                this.onBeginGetSubMapsByIdDelegate = new BeginOperationDelegate(this.OnBeginGetSubMapsById);
            }
            if ((this.onEndGetSubMapsByIdDelegate == null)) {
                this.onEndGetSubMapsByIdDelegate = new EndOperationDelegate(this.OnEndGetSubMapsById);
            }
            if ((this.onGetSubMapsByIdCompletedDelegate == null)) {
                this.onGetSubMapsByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSubMapsByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetSubMapsByIdDelegate, new object[] {
                        id}, this.onEndGetSubMapsByIdDelegate, this.onGetSubMapsByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService.BeginAdjustData(int campaignId, int classification, System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToAdjustData> datas, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAdjustData(campaignId, classification, datas, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService.EndAdjustData(System.IAsyncResult result) {
            base.Channel.EndAdjustData(result);
        }
        
        private System.IAsyncResult OnBeginAdjustData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int campaignId = ((int)(inValues[0]));
            int classification = ((int)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToAdjustData> datas = ((System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToAdjustData>)(inValues[2]));
            return ((GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService)(this)).BeginAdjustData(campaignId, classification, datas, callback, asyncState);
        }
        
        private object[] OnEndAdjustData(System.IAsyncResult result) {
            ((GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService)(this)).EndAdjustData(result);
            return null;
        }
        
        private void OnAdjustDataCompleted(object state) {
            if ((this.AdjustDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AdjustDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AdjustDataAsync(int campaignId, int classification, System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToAdjustData> datas) {
            this.AdjustDataAsync(campaignId, classification, datas, null);
        }
        
        public void AdjustDataAsync(int campaignId, int classification, System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToAdjustData> datas, object userState) {
            if ((this.onBeginAdjustDataDelegate == null)) {
                this.onBeginAdjustDataDelegate = new BeginOperationDelegate(this.OnBeginAdjustData);
            }
            if ((this.onEndAdjustDataDelegate == null)) {
                this.onEndAdjustDataDelegate = new EndOperationDelegate(this.OnEndAdjustData);
            }
            if ((this.onAdjustDataCompletedDelegate == null)) {
                this.onAdjustDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAdjustDataCompleted);
            }
            base.InvokeAsync(this.onBeginAdjustDataDelegate, new object[] {
                        campaignId,
                        classification,
                        datas}, this.onEndAdjustDataDelegate, this.onAdjustDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService.BeginSaveCampaign(GPS.SilverlightCampaign.CampaignReaderSLService.ToCampaign toCampaign, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveCampaign(toCampaign, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService.EndSaveCampaign(System.IAsyncResult result) {
            base.Channel.EndSaveCampaign(result);
        }
        
        private System.IAsyncResult OnBeginSaveCampaign(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GPS.SilverlightCampaign.CampaignReaderSLService.ToCampaign toCampaign = ((GPS.SilverlightCampaign.CampaignReaderSLService.ToCampaign)(inValues[0]));
            return ((GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService)(this)).BeginSaveCampaign(toCampaign, callback, asyncState);
        }
        
        private object[] OnEndSaveCampaign(System.IAsyncResult result) {
            ((GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService)(this)).EndSaveCampaign(result);
            return null;
        }
        
        private void OnSaveCampaignCompleted(object state) {
            if ((this.SaveCampaignCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveCampaignCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveCampaignAsync(GPS.SilverlightCampaign.CampaignReaderSLService.ToCampaign toCampaign) {
            this.SaveCampaignAsync(toCampaign, null);
        }
        
        public void SaveCampaignAsync(GPS.SilverlightCampaign.CampaignReaderSLService.ToCampaign toCampaign, object userState) {
            if ((this.onBeginSaveCampaignDelegate == null)) {
                this.onBeginSaveCampaignDelegate = new BeginOperationDelegate(this.OnBeginSaveCampaign);
            }
            if ((this.onEndSaveCampaignDelegate == null)) {
                this.onEndSaveCampaignDelegate = new EndOperationDelegate(this.OnEndSaveCampaign);
            }
            if ((this.onSaveCampaignCompletedDelegate == null)) {
                this.onSaveCampaignCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCampaignCompleted);
            }
            base.InvokeAsync(this.onBeginSaveCampaignDelegate, new object[] {
                        toCampaign}, this.onEndSaveCampaignDelegate, this.onSaveCampaignCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService CreateChannel() {
            return new CampaignReaderSLServiceClientChannel(this);
        }
        
        private class CampaignReaderSLServiceClientChannel : ChannelBase<GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService>, GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService {
            
            public CampaignReaderSLServiceClientChannel(System.ServiceModel.ClientBase<GPS.SilverlightCampaign.CampaignReaderSLService.CampaignReaderSLService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetCampaignById(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetCampaignById", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndGetCampaignById(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("GetCampaignById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCampaignObjectById(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetCampaignObjectById", _args, callback, asyncState);
                return _result;
            }
            
            public GPS.SilverlightCampaign.CampaignReaderSLService.ToCampaign EndGetCampaignObjectById(System.IAsyncResult result) {
                object[] _args = new object[0];
                GPS.SilverlightCampaign.CampaignReaderSLService.ToCampaign _result = ((GPS.SilverlightCampaign.CampaignReaderSLService.ToCampaign)(base.EndInvoke("GetCampaignObjectById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCroutesByBoxes(System.Collections.ObjectModel.ObservableCollection<int> boxIds, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = boxIds;
                System.IAsyncResult _result = base.BeginInvoke("GetCroutesByBoxes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToCoordinate>> EndGetCroutesByBoxes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToCoordinate>> _result = ((System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToCoordinate>>)(base.EndInvoke("GetCroutesByBoxes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAreaByBoxes(System.Collections.ObjectModel.ObservableCollection<int> boxIds, int campaignId, GPS.SilverlightCampaign.CampaignReaderSLService.Classifications classification, GPS.SilverlightCampaign.CampaignReaderSLService.ToArea toArea, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = boxIds;
                _args[1] = campaignId;
                _args[2] = classification;
                _args[3] = toArea;
                System.IAsyncResult _result = base.BeginInvoke("GetAreaByBoxes", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndGetAreaByBoxes(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("GetAreaByBoxes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCampaignCRouteAreas(int campaignId, string geoCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = campaignId;
                _args[1] = geoCode;
                System.IAsyncResult _result = base.BeginInvoke("GetCampaignCRouteAreas", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndGetCampaignCRouteAreas(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("GetCampaignCRouteAreas", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSubMapsById(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetSubMapsById", _args, callback, asyncState);
                return _result;
            }
            
            public GPS.SilverlightCampaign.CampaignReaderSLService.ToSubMap EndGetSubMapsById(System.IAsyncResult result) {
                object[] _args = new object[0];
                GPS.SilverlightCampaign.CampaignReaderSLService.ToSubMap _result = ((GPS.SilverlightCampaign.CampaignReaderSLService.ToSubMap)(base.EndInvoke("GetSubMapsById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAdjustData(int campaignId, int classification, System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightCampaign.CampaignReaderSLService.ToAdjustData> datas, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = campaignId;
                _args[1] = classification;
                _args[2] = datas;
                System.IAsyncResult _result = base.BeginInvoke("AdjustData", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAdjustData(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AdjustData", _args, result);
            }
            
            public System.IAsyncResult BeginSaveCampaign(GPS.SilverlightCampaign.CampaignReaderSLService.ToCampaign toCampaign, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = toCampaign;
                System.IAsyncResult _result = base.BeginInvoke("SaveCampaign", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveCampaign(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveCampaign", _args, result);
            }
        }
    }
}
