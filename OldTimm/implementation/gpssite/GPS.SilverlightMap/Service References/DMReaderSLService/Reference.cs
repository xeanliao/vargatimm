//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace GPS.SilverlightMap.DMReaderSLService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToDistributionMap", Namespace="TIMM.Website.DistributionMapServices")]
    public partial class ToDistributionMap : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ColorBField;
        
        private int ColorGField;
        
        private int ColorRField;
        
        private string ColorStringField;
        
        private int CountAdjustmentField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToCoordinate> DistributionMapCoordinatesField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToAreaRecord> DistributionMapRecordsField;
        
        private int IdField;
        
        private string NameField;
        
        private int PenetrationField;
        
        private double PercentageField;
        
        private int SubMapIdField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToTask> TasksField;
        
        private int TotalField;
        
        private int TotalAdjustmentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorB {
            get {
                return this.ColorBField;
            }
            set {
                if ((this.ColorBField.Equals(value) != true)) {
                    this.ColorBField = value;
                    this.RaisePropertyChanged("ColorB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorG {
            get {
                return this.ColorGField;
            }
            set {
                if ((this.ColorGField.Equals(value) != true)) {
                    this.ColorGField = value;
                    this.RaisePropertyChanged("ColorG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorR {
            get {
                return this.ColorRField;
            }
            set {
                if ((this.ColorRField.Equals(value) != true)) {
                    this.ColorRField = value;
                    this.RaisePropertyChanged("ColorR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorString {
            get {
                return this.ColorStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorStringField, value) != true)) {
                    this.ColorStringField = value;
                    this.RaisePropertyChanged("ColorString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountAdjustment {
            get {
                return this.CountAdjustmentField;
            }
            set {
                if ((this.CountAdjustmentField.Equals(value) != true)) {
                    this.CountAdjustmentField = value;
                    this.RaisePropertyChanged("CountAdjustment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToCoordinate> DistributionMapCoordinates {
            get {
                return this.DistributionMapCoordinatesField;
            }
            set {
                if ((object.ReferenceEquals(this.DistributionMapCoordinatesField, value) != true)) {
                    this.DistributionMapCoordinatesField = value;
                    this.RaisePropertyChanged("DistributionMapCoordinates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToAreaRecord> DistributionMapRecords {
            get {
                return this.DistributionMapRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.DistributionMapRecordsField, value) != true)) {
                    this.DistributionMapRecordsField = value;
                    this.RaisePropertyChanged("DistributionMapRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Penetration {
            get {
                return this.PenetrationField;
            }
            set {
                if ((this.PenetrationField.Equals(value) != true)) {
                    this.PenetrationField = value;
                    this.RaisePropertyChanged("Penetration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Percentage {
            get {
                return this.PercentageField;
            }
            set {
                if ((this.PercentageField.Equals(value) != true)) {
                    this.PercentageField = value;
                    this.RaisePropertyChanged("Percentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubMapId {
            get {
                return this.SubMapIdField;
            }
            set {
                if ((this.SubMapIdField.Equals(value) != true)) {
                    this.SubMapIdField = value;
                    this.RaisePropertyChanged("SubMapId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToTask> Tasks {
            get {
                return this.TasksField;
            }
            set {
                if ((object.ReferenceEquals(this.TasksField, value) != true)) {
                    this.TasksField = value;
                    this.RaisePropertyChanged("Tasks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalAdjustment {
            get {
                return this.TotalAdjustmentField;
            }
            set {
                if ((this.TotalAdjustmentField.Equals(value) != true)) {
                    this.TotalAdjustmentField = value;
                    this.RaisePropertyChanged("TotalAdjustment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToCoordinate", Namespace="TIMM.Website.TransferObjects")]
    public partial class ToCoordinate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToAreaRecord", Namespace="TIMM.Website.TransferObjects")]
    public partial class ToAreaRecord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AreaIdField;
        
        private int ClassificationField;
        
        private System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, bool>> RelationsField;
        
        private bool ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AreaId {
            get {
                return this.AreaIdField;
            }
            set {
                if ((this.AreaIdField.Equals(value) != true)) {
                    this.AreaIdField = value;
                    this.RaisePropertyChanged("AreaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Classification {
            get {
                return this.ClassificationField;
            }
            set {
                if ((this.ClassificationField.Equals(value) != true)) {
                    this.ClassificationField = value;
                    this.RaisePropertyChanged("Classification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, bool>> Relations {
            get {
                return this.RelationsField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationsField, value) != true)) {
                    this.RelationsField = value;
                    this.RaisePropertyChanged("Relations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToTask", Namespace="TIMM.Website.TaskServices")]
    public partial class ToTask : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AuditorIdField;
        
        private string DateField;
        
        private int DmIdField;
        
        private string EmailField;
        
        private int IdField;
        
        private string NameField;
        
        private int StatusField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToTaskgtuinfomapping> TaskgtuinfomappingsField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToTaskTime> TasktimesField;
        
        private string TelephoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuditorId {
            get {
                return this.AuditorIdField;
            }
            set {
                if ((this.AuditorIdField.Equals(value) != true)) {
                    this.AuditorIdField = value;
                    this.RaisePropertyChanged("AuditorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DmId {
            get {
                return this.DmIdField;
            }
            set {
                if ((this.DmIdField.Equals(value) != true)) {
                    this.DmIdField = value;
                    this.RaisePropertyChanged("DmId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToTaskgtuinfomapping> Taskgtuinfomappings {
            get {
                return this.TaskgtuinfomappingsField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskgtuinfomappingsField, value) != true)) {
                    this.TaskgtuinfomappingsField = value;
                    this.RaisePropertyChanged("Taskgtuinfomappings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToTaskTime> Tasktimes {
            get {
                return this.TasktimesField;
            }
            set {
                if ((object.ReferenceEquals(this.TasktimesField, value) != true)) {
                    this.TasktimesField = value;
                    this.RaisePropertyChanged("Tasktimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToTaskgtuinfomapping", Namespace="TIMM.Website.TaskServices")]
    public partial class ToTaskgtuinfomapping : object, System.ComponentModel.INotifyPropertyChanged {
        
        private GPS.SilverlightMap.DMReaderSLService.ToGtu GTUField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToGtuinfo> GtuinfosField;
        
        private int IdField;
        
        private int TaskIdField;
        
        private string UserColorField;
        
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPS.SilverlightMap.DMReaderSLService.ToGtu GTU {
            get {
                return this.GTUField;
            }
            set {
                if ((object.ReferenceEquals(this.GTUField, value) != true)) {
                    this.GTUField = value;
                    this.RaisePropertyChanged("GTU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToGtuinfo> Gtuinfos {
            get {
                return this.GtuinfosField;
            }
            set {
                if ((object.ReferenceEquals(this.GtuinfosField, value) != true)) {
                    this.GtuinfosField = value;
                    this.RaisePropertyChanged("Gtuinfos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserColor {
            get {
                return this.UserColorField;
            }
            set {
                if ((object.ReferenceEquals(this.UserColorField, value) != true)) {
                    this.UserColorField = value;
                    this.RaisePropertyChanged("UserColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToTaskTime", Namespace="TIMM.Website.TaskServices")]
    public partial class ToTaskTime : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private int TaskIdField;
        
        private string TimeField;
        
        private int TimeTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Time {
            get {
                return this.TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeField, value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeType {
            get {
                return this.TimeTypeField;
            }
            set {
                if ((this.TimeTypeField.Equals(value) != true)) {
                    this.TimeTypeField = value;
                    this.RaisePropertyChanged("TimeType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToGtu", Namespace="TIMM.Website.TrackServices")]
    public partial class ToGtu : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private bool IsEnabledField;
        
        private string ModelField;
        
        private string UniqueIDField;
        
        private int UserIdField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnabled {
            get {
                return this.IsEnabledField;
            }
            set {
                if ((this.IsEnabledField.Equals(value) != true)) {
                    this.IsEnabledField = value;
                    this.RaisePropertyChanged("IsEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqueID {
            get {
                return this.UniqueIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UniqueIDField, value) != true)) {
                    this.UniqueIDField = value;
                    this.RaisePropertyChanged("UniqueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToGtuinfo", Namespace="TIMM.Website.TaskServices")]
    public partial class ToGtuinfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CodeField;
        
        private double DistanceField;
        
        private int IdField;
        
        private int PowerInfoField;
        
        private int StatusField;
        
        private int TaskgtuinfoIdField;
        
        private string dtReceivedTimeField;
        
        private string dtSendTimeField;
        
        private double dwAltitudeField;
        
        private double dwLatitudeField;
        
        private double dwLongitudeField;
        
        private double dwSpeedField;
        
        private int nAccuracyField;
        
        private int nAreaCodeField;
        
        private int nCellIDField;
        
        private int nCountField;
        
        private long nGPSFixField;
        
        private int nHeadingField;
        
        private int nLocationIDField;
        
        private int nNetworkCodeField;
        
        private string sIPAddressField;
        
        private string sVersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Distance {
            get {
                return this.DistanceField;
            }
            set {
                if ((this.DistanceField.Equals(value) != true)) {
                    this.DistanceField = value;
                    this.RaisePropertyChanged("Distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PowerInfo {
            get {
                return this.PowerInfoField;
            }
            set {
                if ((this.PowerInfoField.Equals(value) != true)) {
                    this.PowerInfoField = value;
                    this.RaisePropertyChanged("PowerInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskgtuinfoId {
            get {
                return this.TaskgtuinfoIdField;
            }
            set {
                if ((this.TaskgtuinfoIdField.Equals(value) != true)) {
                    this.TaskgtuinfoIdField = value;
                    this.RaisePropertyChanged("TaskgtuinfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dtReceivedTime {
            get {
                return this.dtReceivedTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.dtReceivedTimeField, value) != true)) {
                    this.dtReceivedTimeField = value;
                    this.RaisePropertyChanged("dtReceivedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dtSendTime {
            get {
                return this.dtSendTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.dtSendTimeField, value) != true)) {
                    this.dtSendTimeField = value;
                    this.RaisePropertyChanged("dtSendTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double dwAltitude {
            get {
                return this.dwAltitudeField;
            }
            set {
                if ((this.dwAltitudeField.Equals(value) != true)) {
                    this.dwAltitudeField = value;
                    this.RaisePropertyChanged("dwAltitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double dwLatitude {
            get {
                return this.dwLatitudeField;
            }
            set {
                if ((this.dwLatitudeField.Equals(value) != true)) {
                    this.dwLatitudeField = value;
                    this.RaisePropertyChanged("dwLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double dwLongitude {
            get {
                return this.dwLongitudeField;
            }
            set {
                if ((this.dwLongitudeField.Equals(value) != true)) {
                    this.dwLongitudeField = value;
                    this.RaisePropertyChanged("dwLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double dwSpeed {
            get {
                return this.dwSpeedField;
            }
            set {
                if ((this.dwSpeedField.Equals(value) != true)) {
                    this.dwSpeedField = value;
                    this.RaisePropertyChanged("dwSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nAccuracy {
            get {
                return this.nAccuracyField;
            }
            set {
                if ((this.nAccuracyField.Equals(value) != true)) {
                    this.nAccuracyField = value;
                    this.RaisePropertyChanged("nAccuracy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nAreaCode {
            get {
                return this.nAreaCodeField;
            }
            set {
                if ((this.nAreaCodeField.Equals(value) != true)) {
                    this.nAreaCodeField = value;
                    this.RaisePropertyChanged("nAreaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nCellID {
            get {
                return this.nCellIDField;
            }
            set {
                if ((this.nCellIDField.Equals(value) != true)) {
                    this.nCellIDField = value;
                    this.RaisePropertyChanged("nCellID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nCount {
            get {
                return this.nCountField;
            }
            set {
                if ((this.nCountField.Equals(value) != true)) {
                    this.nCountField = value;
                    this.RaisePropertyChanged("nCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long nGPSFix {
            get {
                return this.nGPSFixField;
            }
            set {
                if ((this.nGPSFixField.Equals(value) != true)) {
                    this.nGPSFixField = value;
                    this.RaisePropertyChanged("nGPSFix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nHeading {
            get {
                return this.nHeadingField;
            }
            set {
                if ((this.nHeadingField.Equals(value) != true)) {
                    this.nHeadingField = value;
                    this.RaisePropertyChanged("nHeading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nLocationID {
            get {
                return this.nLocationIDField;
            }
            set {
                if ((this.nLocationIDField.Equals(value) != true)) {
                    this.nLocationIDField = value;
                    this.RaisePropertyChanged("nLocationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nNetworkCode {
            get {
                return this.nNetworkCodeField;
            }
            set {
                if ((this.nNetworkCodeField.Equals(value) != true)) {
                    this.nNetworkCodeField = value;
                    this.RaisePropertyChanged("nNetworkCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sIPAddress {
            get {
                return this.sIPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.sIPAddressField, value) != true)) {
                    this.sIPAddressField = value;
                    this.RaisePropertyChanged("sIPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sVersion {
            get {
                return this.sVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.sVersionField, value) != true)) {
                    this.sVersionField = value;
                    this.RaisePropertyChanged("sVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToArea", Namespace="TIMM.Website.AreaServices")]
    public partial class ToArea : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.Generic.Dictionary<string, string> AttributesField;
        
        private int ClassificationField;
        
        private string DescriptionField;
        
        private string IdField;
        
        private bool IsEnabledField;
        
        private double LatitudeField;
        
        private System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToCoordinate> LocationsField;
        
        private double LongitudeField;
        
        private string NameField;
        
        private System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, bool>> RelationsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> Attributes {
            get {
                return this.AttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesField, value) != true)) {
                    this.AttributesField = value;
                    this.RaisePropertyChanged("Attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Classification {
            get {
                return this.ClassificationField;
            }
            set {
                if ((this.ClassificationField.Equals(value) != true)) {
                    this.ClassificationField = value;
                    this.RaisePropertyChanged("Classification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnabled {
            get {
                return this.IsEnabledField;
            }
            set {
                if ((this.IsEnabledField.Equals(value) != true)) {
                    this.IsEnabledField = value;
                    this.RaisePropertyChanged("IsEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToCoordinate> Locations {
            get {
                return this.LocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationsField, value) != true)) {
                    this.LocationsField = value;
                    this.RaisePropertyChanged("Locations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, bool>> Relations {
            get {
                return this.RelationsField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationsField, value) != true)) {
                    this.RelationsField = value;
                    this.RaisePropertyChanged("Relations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToMonitorAddresses", Namespace="TIMM.Website.AreaServices")]
    public partial class ToMonitorAddresses : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string Address1Field;
        
        private int IdField;
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        private double OriginalLatitudeField;
        
        private double OriginalLongitudeField;
        
        private string PictureField;
        
        private string ZipCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OriginalLatitude {
            get {
                return this.OriginalLatitudeField;
            }
            set {
                if ((this.OriginalLatitudeField.Equals(value) != true)) {
                    this.OriginalLatitudeField = value;
                    this.RaisePropertyChanged("OriginalLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OriginalLongitude {
            get {
                return this.OriginalLongitudeField;
            }
            set {
                if ((this.OriginalLongitudeField.Equals(value) != true)) {
                    this.OriginalLongitudeField = value;
                    this.RaisePropertyChanged("OriginalLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Picture {
            get {
                return this.PictureField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureField, value) != true)) {
                    this.PictureField = value;
                    this.RaisePropertyChanged("Picture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="TIMM.Website.SilverlightServices", ConfigurationName="DMReaderSLService.DMReaderSLService")]
    public interface DMReaderSLService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/DMReaderSLService/GetDistributionMapsById", ReplyAction="TIMM.Website.SilverlightServices/DMReaderSLService/GetDistributionMapsByIdRespons" +
            "e")]
        System.IAsyncResult BeginGetDistributionMapsById(int id, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetDistributionMapsById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/DMReaderSLService/GetDistributionMapsObjectById", ReplyAction="TIMM.Website.SilverlightServices/DMReaderSLService/GetDistributionMapsObjectByIdR" +
            "esponse")]
        System.IAsyncResult BeginGetDistributionMapsObjectById(int id, System.AsyncCallback callback, object asyncState);
        
        GPS.SilverlightMap.DMReaderSLService.ToDistributionMap EndGetDistributionMapsObjectById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/DMReaderSLService/GetCustomAreaByBox", ReplyAction="TIMM.Website.SilverlightServices/DMReaderSLService/GetCustomAreaByBoxResponse")]
        System.IAsyncResult BeginGetCustomAreaByBox(System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetCustomAreaByBox(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/DMReaderSLService/GetCustomAreaObjectByBox", ReplyAction="TIMM.Website.SilverlightServices/DMReaderSLService/GetCustomAreaObjectByBoxRespon" +
            "se")]
        System.IAsyncResult BeginGetCustomAreaObjectByBox(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToArea> EndGetCustomAreaObjectByBox(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/DMReaderSLService/GetTask", ReplyAction="TIMM.Website.SilverlightServices/DMReaderSLService/GetTaskResponse")]
        System.IAsyncResult BeginGetTask(int Id, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetTask(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/DMReaderSLService/GetTaskObject", ReplyAction="TIMM.Website.SilverlightServices/DMReaderSLService/GetTaskObjectResponse")]
        System.IAsyncResult BeginGetTaskObject(int Id, System.AsyncCallback callback, object asyncState);
        
        GPS.SilverlightMap.DMReaderSLService.ToTask EndGetTaskObject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/DMReaderSLService/GetGtuUserNameDic", ReplyAction="TIMM.Website.SilverlightServices/DMReaderSLService/GetGtuUserNameDicResponse")]
        System.IAsyncResult BeginGetGtuUserNameDic(int Id, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, string> EndGetGtuUserNameDic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/DMReaderSLService/GetGtuInfoListByTaskId", ReplyAction="TIMM.Website.SilverlightServices/DMReaderSLService/GetGtuInfoListByTaskIdResponse" +
            "")]
        System.IAsyncResult BeginGetGtuInfoListByTaskId(int tid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToTaskgtuinfomapping> EndGetGtuInfoListByTaskId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/DMReaderSLService/GetMAddressListByTaskId", ReplyAction="TIMM.Website.SilverlightServices/DMReaderSLService/GetMAddressListByTaskIdRespons" +
            "e")]
        System.IAsyncResult BeginGetMAddressListByTaskId(int tid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToMonitorAddresses> EndGetMAddressListByTaskId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/DMReaderSLService/GetMAddressCOListByTaskId", ReplyAction="TIMM.Website.SilverlightServices/DMReaderSLService/GetMAddressCOListByTaskIdRespo" +
            "nse")]
        System.IAsyncResult BeginGetMAddressCOListByTaskId(int tid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToMonitorAddresses> EndGetMAddressCOListByTaskId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/DMReaderSLService/AddTaskTime", ReplyAction="TIMM.Website.SilverlightServices/DMReaderSLService/AddTaskTimeResponse")]
        System.IAsyncResult BeginAddTaskTime(int taskId, int timeType, System.AsyncCallback callback, object asyncState);
        
        GPS.SilverlightMap.DMReaderSLService.ToTask EndAddTaskTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/DMReaderSLService/UpdateTaskObject", ReplyAction="TIMM.Website.SilverlightServices/DMReaderSLService/UpdateTaskObjectResponse")]
        System.IAsyncResult BeginUpdateTaskObject(GPS.SilverlightMap.DMReaderSLService.ToTask toTask, System.AsyncCallback callback, object asyncState);
        
        GPS.SilverlightMap.DMReaderSLService.ToTask EndUpdateTaskObject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/DMReaderSLService/UpdateTask", ReplyAction="TIMM.Website.SilverlightServices/DMReaderSLService/UpdateTaskResponse")]
        System.IAsyncResult BeginUpdateTask(byte[] toTask, System.AsyncCallback callback, object asyncState);
        
        byte[] EndUpdateTask(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/DMReaderSLService/getUserNameByUserId", ReplyAction="TIMM.Website.SilverlightServices/DMReaderSLService/getUserNameByUserIdResponse")]
        System.IAsyncResult BegingetUserNameByUserId(int uid, System.AsyncCallback callback, object asyncState);
        
        string EndgetUserNameByUserId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TIMM.Website.SilverlightServices/DMReaderSLService/loadHistoryDotToLayerThread", ReplyAction="TIMM.Website.SilverlightServices/DMReaderSLService/loadHistoryDotToLayerThreadRes" +
            "ponse")]
        System.IAsyncResult BeginloadHistoryDotToLayerThread(string gid, System.AsyncCallback callback, object asyncState);
        
        string EndloadHistoryDotToLayerThread(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DMReaderSLServiceChannel : GPS.SilverlightMap.DMReaderSLService.DMReaderSLService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDistributionMapsByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDistributionMapsByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDistributionMapsObjectByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDistributionMapsObjectByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GPS.SilverlightMap.DMReaderSLService.ToDistributionMap Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GPS.SilverlightMap.DMReaderSLService.ToDistributionMap)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomAreaByBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomAreaByBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomAreaObjectByBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomAreaObjectByBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToArea> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToArea>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTaskObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTaskObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GPS.SilverlightMap.DMReaderSLService.ToTask Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GPS.SilverlightMap.DMReaderSLService.ToTask)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGtuUserNameDicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGtuUserNameDicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGtuInfoListByTaskIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGtuInfoListByTaskIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToTaskgtuinfomapping> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToTaskgtuinfomapping>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMAddressListByTaskIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMAddressListByTaskIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToMonitorAddresses> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToMonitorAddresses>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMAddressCOListByTaskIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMAddressCOListByTaskIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToMonitorAddresses> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToMonitorAddresses>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddTaskTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddTaskTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GPS.SilverlightMap.DMReaderSLService.ToTask Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GPS.SilverlightMap.DMReaderSLService.ToTask)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateTaskObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateTaskObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GPS.SilverlightMap.DMReaderSLService.ToTask Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GPS.SilverlightMap.DMReaderSLService.ToTask)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getUserNameByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getUserNameByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class loadHistoryDotToLayerThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public loadHistoryDotToLayerThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DMReaderSLServiceClient : System.ServiceModel.ClientBase<GPS.SilverlightMap.DMReaderSLService.DMReaderSLService>, GPS.SilverlightMap.DMReaderSLService.DMReaderSLService {
        
        private BeginOperationDelegate onBeginGetDistributionMapsByIdDelegate;
        
        private EndOperationDelegate onEndGetDistributionMapsByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetDistributionMapsByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDistributionMapsObjectByIdDelegate;
        
        private EndOperationDelegate onEndGetDistributionMapsObjectByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetDistributionMapsObjectByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomAreaByBoxDelegate;
        
        private EndOperationDelegate onEndGetCustomAreaByBoxDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomAreaByBoxCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomAreaObjectByBoxDelegate;
        
        private EndOperationDelegate onEndGetCustomAreaObjectByBoxDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomAreaObjectByBoxCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTaskDelegate;
        
        private EndOperationDelegate onEndGetTaskDelegate;
        
        private System.Threading.SendOrPostCallback onGetTaskCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTaskObjectDelegate;
        
        private EndOperationDelegate onEndGetTaskObjectDelegate;
        
        private System.Threading.SendOrPostCallback onGetTaskObjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGtuUserNameDicDelegate;
        
        private EndOperationDelegate onEndGetGtuUserNameDicDelegate;
        
        private System.Threading.SendOrPostCallback onGetGtuUserNameDicCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGtuInfoListByTaskIdDelegate;
        
        private EndOperationDelegate onEndGetGtuInfoListByTaskIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetGtuInfoListByTaskIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMAddressListByTaskIdDelegate;
        
        private EndOperationDelegate onEndGetMAddressListByTaskIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetMAddressListByTaskIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMAddressCOListByTaskIdDelegate;
        
        private EndOperationDelegate onEndGetMAddressCOListByTaskIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetMAddressCOListByTaskIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddTaskTimeDelegate;
        
        private EndOperationDelegate onEndAddTaskTimeDelegate;
        
        private System.Threading.SendOrPostCallback onAddTaskTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateTaskObjectDelegate;
        
        private EndOperationDelegate onEndUpdateTaskObjectDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateTaskObjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateTaskDelegate;
        
        private EndOperationDelegate onEndUpdateTaskDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateTaskCompletedDelegate;
        
        private BeginOperationDelegate onBegingetUserNameByUserIdDelegate;
        
        private EndOperationDelegate onEndgetUserNameByUserIdDelegate;
        
        private System.Threading.SendOrPostCallback ongetUserNameByUserIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginloadHistoryDotToLayerThreadDelegate;
        
        private EndOperationDelegate onEndloadHistoryDotToLayerThreadDelegate;
        
        private System.Threading.SendOrPostCallback onloadHistoryDotToLayerThreadCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DMReaderSLServiceClient() {
        }
        
        public DMReaderSLServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DMReaderSLServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DMReaderSLServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DMReaderSLServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetDistributionMapsByIdCompletedEventArgs> GetDistributionMapsByIdCompleted;
        
        public event System.EventHandler<GetDistributionMapsObjectByIdCompletedEventArgs> GetDistributionMapsObjectByIdCompleted;
        
        public event System.EventHandler<GetCustomAreaByBoxCompletedEventArgs> GetCustomAreaByBoxCompleted;
        
        public event System.EventHandler<GetCustomAreaObjectByBoxCompletedEventArgs> GetCustomAreaObjectByBoxCompleted;
        
        public event System.EventHandler<GetTaskCompletedEventArgs> GetTaskCompleted;
        
        public event System.EventHandler<GetTaskObjectCompletedEventArgs> GetTaskObjectCompleted;
        
        public event System.EventHandler<GetGtuUserNameDicCompletedEventArgs> GetGtuUserNameDicCompleted;
        
        public event System.EventHandler<GetGtuInfoListByTaskIdCompletedEventArgs> GetGtuInfoListByTaskIdCompleted;
        
        public event System.EventHandler<GetMAddressListByTaskIdCompletedEventArgs> GetMAddressListByTaskIdCompleted;
        
        public event System.EventHandler<GetMAddressCOListByTaskIdCompletedEventArgs> GetMAddressCOListByTaskIdCompleted;
        
        public event System.EventHandler<AddTaskTimeCompletedEventArgs> AddTaskTimeCompleted;
        
        public event System.EventHandler<UpdateTaskObjectCompletedEventArgs> UpdateTaskObjectCompleted;
        
        public event System.EventHandler<UpdateTaskCompletedEventArgs> UpdateTaskCompleted;
        
        public event System.EventHandler<getUserNameByUserIdCompletedEventArgs> getUserNameByUserIdCompleted;
        
        public event System.EventHandler<loadHistoryDotToLayerThreadCompletedEventArgs> loadHistoryDotToLayerThreadCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.BeginGetDistributionMapsById(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDistributionMapsById(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.EndGetDistributionMapsById(System.IAsyncResult result) {
            return base.Channel.EndGetDistributionMapsById(result);
        }
        
        private System.IAsyncResult OnBeginGetDistributionMapsById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).BeginGetDistributionMapsById(id, callback, asyncState);
        }
        
        private object[] OnEndGetDistributionMapsById(System.IAsyncResult result) {
            byte[] retVal = ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).EndGetDistributionMapsById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDistributionMapsByIdCompleted(object state) {
            if ((this.GetDistributionMapsByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDistributionMapsByIdCompleted(this, new GetDistributionMapsByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDistributionMapsByIdAsync(int id) {
            this.GetDistributionMapsByIdAsync(id, null);
        }
        
        public void GetDistributionMapsByIdAsync(int id, object userState) {
            if ((this.onBeginGetDistributionMapsByIdDelegate == null)) {
                this.onBeginGetDistributionMapsByIdDelegate = new BeginOperationDelegate(this.OnBeginGetDistributionMapsById);
            }
            if ((this.onEndGetDistributionMapsByIdDelegate == null)) {
                this.onEndGetDistributionMapsByIdDelegate = new EndOperationDelegate(this.OnEndGetDistributionMapsById);
            }
            if ((this.onGetDistributionMapsByIdCompletedDelegate == null)) {
                this.onGetDistributionMapsByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDistributionMapsByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetDistributionMapsByIdDelegate, new object[] {
                        id}, this.onEndGetDistributionMapsByIdDelegate, this.onGetDistributionMapsByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.BeginGetDistributionMapsObjectById(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDistributionMapsObjectById(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GPS.SilverlightMap.DMReaderSLService.ToDistributionMap GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.EndGetDistributionMapsObjectById(System.IAsyncResult result) {
            return base.Channel.EndGetDistributionMapsObjectById(result);
        }
        
        private System.IAsyncResult OnBeginGetDistributionMapsObjectById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).BeginGetDistributionMapsObjectById(id, callback, asyncState);
        }
        
        private object[] OnEndGetDistributionMapsObjectById(System.IAsyncResult result) {
            GPS.SilverlightMap.DMReaderSLService.ToDistributionMap retVal = ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).EndGetDistributionMapsObjectById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDistributionMapsObjectByIdCompleted(object state) {
            if ((this.GetDistributionMapsObjectByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDistributionMapsObjectByIdCompleted(this, new GetDistributionMapsObjectByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDistributionMapsObjectByIdAsync(int id) {
            this.GetDistributionMapsObjectByIdAsync(id, null);
        }
        
        public void GetDistributionMapsObjectByIdAsync(int id, object userState) {
            if ((this.onBeginGetDistributionMapsObjectByIdDelegate == null)) {
                this.onBeginGetDistributionMapsObjectByIdDelegate = new BeginOperationDelegate(this.OnBeginGetDistributionMapsObjectById);
            }
            if ((this.onEndGetDistributionMapsObjectByIdDelegate == null)) {
                this.onEndGetDistributionMapsObjectByIdDelegate = new EndOperationDelegate(this.OnEndGetDistributionMapsObjectById);
            }
            if ((this.onGetDistributionMapsObjectByIdCompletedDelegate == null)) {
                this.onGetDistributionMapsObjectByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDistributionMapsObjectByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetDistributionMapsObjectByIdDelegate, new object[] {
                        id}, this.onEndGetDistributionMapsObjectByIdDelegate, this.onGetDistributionMapsObjectByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.BeginGetCustomAreaByBox(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomAreaByBox(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.EndGetCustomAreaByBox(System.IAsyncResult result) {
            return base.Channel.EndGetCustomAreaByBox(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomAreaByBox(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).BeginGetCustomAreaByBox(callback, asyncState);
        }
        
        private object[] OnEndGetCustomAreaByBox(System.IAsyncResult result) {
            byte[] retVal = ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).EndGetCustomAreaByBox(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomAreaByBoxCompleted(object state) {
            if ((this.GetCustomAreaByBoxCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomAreaByBoxCompleted(this, new GetCustomAreaByBoxCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomAreaByBoxAsync() {
            this.GetCustomAreaByBoxAsync(null);
        }
        
        public void GetCustomAreaByBoxAsync(object userState) {
            if ((this.onBeginGetCustomAreaByBoxDelegate == null)) {
                this.onBeginGetCustomAreaByBoxDelegate = new BeginOperationDelegate(this.OnBeginGetCustomAreaByBox);
            }
            if ((this.onEndGetCustomAreaByBoxDelegate == null)) {
                this.onEndGetCustomAreaByBoxDelegate = new EndOperationDelegate(this.OnEndGetCustomAreaByBox);
            }
            if ((this.onGetCustomAreaByBoxCompletedDelegate == null)) {
                this.onGetCustomAreaByBoxCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomAreaByBoxCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomAreaByBoxDelegate, null, this.onEndGetCustomAreaByBoxDelegate, this.onGetCustomAreaByBoxCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.BeginGetCustomAreaObjectByBox(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomAreaObjectByBox(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToArea> GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.EndGetCustomAreaObjectByBox(System.IAsyncResult result) {
            return base.Channel.EndGetCustomAreaObjectByBox(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomAreaObjectByBox(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).BeginGetCustomAreaObjectByBox(callback, asyncState);
        }
        
        private object[] OnEndGetCustomAreaObjectByBox(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToArea> retVal = ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).EndGetCustomAreaObjectByBox(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomAreaObjectByBoxCompleted(object state) {
            if ((this.GetCustomAreaObjectByBoxCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomAreaObjectByBoxCompleted(this, new GetCustomAreaObjectByBoxCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomAreaObjectByBoxAsync() {
            this.GetCustomAreaObjectByBoxAsync(null);
        }
        
        public void GetCustomAreaObjectByBoxAsync(object userState) {
            if ((this.onBeginGetCustomAreaObjectByBoxDelegate == null)) {
                this.onBeginGetCustomAreaObjectByBoxDelegate = new BeginOperationDelegate(this.OnBeginGetCustomAreaObjectByBox);
            }
            if ((this.onEndGetCustomAreaObjectByBoxDelegate == null)) {
                this.onEndGetCustomAreaObjectByBoxDelegate = new EndOperationDelegate(this.OnEndGetCustomAreaObjectByBox);
            }
            if ((this.onGetCustomAreaObjectByBoxCompletedDelegate == null)) {
                this.onGetCustomAreaObjectByBoxCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomAreaObjectByBoxCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomAreaObjectByBoxDelegate, null, this.onEndGetCustomAreaObjectByBoxDelegate, this.onGetCustomAreaObjectByBoxCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.BeginGetTask(int Id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTask(Id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.EndGetTask(System.IAsyncResult result) {
            return base.Channel.EndGetTask(result);
        }
        
        private System.IAsyncResult OnBeginGetTask(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Id = ((int)(inValues[0]));
            return ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).BeginGetTask(Id, callback, asyncState);
        }
        
        private object[] OnEndGetTask(System.IAsyncResult result) {
            byte[] retVal = ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).EndGetTask(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTaskCompleted(object state) {
            if ((this.GetTaskCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTaskCompleted(this, new GetTaskCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTaskAsync(int Id) {
            this.GetTaskAsync(Id, null);
        }
        
        public void GetTaskAsync(int Id, object userState) {
            if ((this.onBeginGetTaskDelegate == null)) {
                this.onBeginGetTaskDelegate = new BeginOperationDelegate(this.OnBeginGetTask);
            }
            if ((this.onEndGetTaskDelegate == null)) {
                this.onEndGetTaskDelegate = new EndOperationDelegate(this.OnEndGetTask);
            }
            if ((this.onGetTaskCompletedDelegate == null)) {
                this.onGetTaskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTaskCompleted);
            }
            base.InvokeAsync(this.onBeginGetTaskDelegate, new object[] {
                        Id}, this.onEndGetTaskDelegate, this.onGetTaskCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.BeginGetTaskObject(int Id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTaskObject(Id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GPS.SilverlightMap.DMReaderSLService.ToTask GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.EndGetTaskObject(System.IAsyncResult result) {
            return base.Channel.EndGetTaskObject(result);
        }
        
        private System.IAsyncResult OnBeginGetTaskObject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Id = ((int)(inValues[0]));
            return ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).BeginGetTaskObject(Id, callback, asyncState);
        }
        
        private object[] OnEndGetTaskObject(System.IAsyncResult result) {
            GPS.SilverlightMap.DMReaderSLService.ToTask retVal = ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).EndGetTaskObject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTaskObjectCompleted(object state) {
            if ((this.GetTaskObjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTaskObjectCompleted(this, new GetTaskObjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTaskObjectAsync(int Id) {
            this.GetTaskObjectAsync(Id, null);
        }
        
        public void GetTaskObjectAsync(int Id, object userState) {
            if ((this.onBeginGetTaskObjectDelegate == null)) {
                this.onBeginGetTaskObjectDelegate = new BeginOperationDelegate(this.OnBeginGetTaskObject);
            }
            if ((this.onEndGetTaskObjectDelegate == null)) {
                this.onEndGetTaskObjectDelegate = new EndOperationDelegate(this.OnEndGetTaskObject);
            }
            if ((this.onGetTaskObjectCompletedDelegate == null)) {
                this.onGetTaskObjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTaskObjectCompleted);
            }
            base.InvokeAsync(this.onBeginGetTaskObjectDelegate, new object[] {
                        Id}, this.onEndGetTaskObjectDelegate, this.onGetTaskObjectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.BeginGetGtuUserNameDic(int Id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGtuUserNameDic(Id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, string> GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.EndGetGtuUserNameDic(System.IAsyncResult result) {
            return base.Channel.EndGetGtuUserNameDic(result);
        }
        
        private System.IAsyncResult OnBeginGetGtuUserNameDic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Id = ((int)(inValues[0]));
            return ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).BeginGetGtuUserNameDic(Id, callback, asyncState);
        }
        
        private object[] OnEndGetGtuUserNameDic(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, string> retVal = ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).EndGetGtuUserNameDic(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGtuUserNameDicCompleted(object state) {
            if ((this.GetGtuUserNameDicCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGtuUserNameDicCompleted(this, new GetGtuUserNameDicCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGtuUserNameDicAsync(int Id) {
            this.GetGtuUserNameDicAsync(Id, null);
        }
        
        public void GetGtuUserNameDicAsync(int Id, object userState) {
            if ((this.onBeginGetGtuUserNameDicDelegate == null)) {
                this.onBeginGetGtuUserNameDicDelegate = new BeginOperationDelegate(this.OnBeginGetGtuUserNameDic);
            }
            if ((this.onEndGetGtuUserNameDicDelegate == null)) {
                this.onEndGetGtuUserNameDicDelegate = new EndOperationDelegate(this.OnEndGetGtuUserNameDic);
            }
            if ((this.onGetGtuUserNameDicCompletedDelegate == null)) {
                this.onGetGtuUserNameDicCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGtuUserNameDicCompleted);
            }
            base.InvokeAsync(this.onBeginGetGtuUserNameDicDelegate, new object[] {
                        Id}, this.onEndGetGtuUserNameDicDelegate, this.onGetGtuUserNameDicCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.BeginGetGtuInfoListByTaskId(int tid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGtuInfoListByTaskId(tid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToTaskgtuinfomapping> GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.EndGetGtuInfoListByTaskId(System.IAsyncResult result) {
            return base.Channel.EndGetGtuInfoListByTaskId(result);
        }
        
        private System.IAsyncResult OnBeginGetGtuInfoListByTaskId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int tid = ((int)(inValues[0]));
            return ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).BeginGetGtuInfoListByTaskId(tid, callback, asyncState);
        }
        
        private object[] OnEndGetGtuInfoListByTaskId(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToTaskgtuinfomapping> retVal = ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).EndGetGtuInfoListByTaskId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGtuInfoListByTaskIdCompleted(object state) {
            if ((this.GetGtuInfoListByTaskIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGtuInfoListByTaskIdCompleted(this, new GetGtuInfoListByTaskIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGtuInfoListByTaskIdAsync(int tid) {
            this.GetGtuInfoListByTaskIdAsync(tid, null);
        }
        
        public void GetGtuInfoListByTaskIdAsync(int tid, object userState) {
            if ((this.onBeginGetGtuInfoListByTaskIdDelegate == null)) {
                this.onBeginGetGtuInfoListByTaskIdDelegate = new BeginOperationDelegate(this.OnBeginGetGtuInfoListByTaskId);
            }
            if ((this.onEndGetGtuInfoListByTaskIdDelegate == null)) {
                this.onEndGetGtuInfoListByTaskIdDelegate = new EndOperationDelegate(this.OnEndGetGtuInfoListByTaskId);
            }
            if ((this.onGetGtuInfoListByTaskIdCompletedDelegate == null)) {
                this.onGetGtuInfoListByTaskIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGtuInfoListByTaskIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetGtuInfoListByTaskIdDelegate, new object[] {
                        tid}, this.onEndGetGtuInfoListByTaskIdDelegate, this.onGetGtuInfoListByTaskIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.BeginGetMAddressListByTaskId(int tid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMAddressListByTaskId(tid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToMonitorAddresses> GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.EndGetMAddressListByTaskId(System.IAsyncResult result) {
            return base.Channel.EndGetMAddressListByTaskId(result);
        }
        
        private System.IAsyncResult OnBeginGetMAddressListByTaskId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int tid = ((int)(inValues[0]));
            return ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).BeginGetMAddressListByTaskId(tid, callback, asyncState);
        }
        
        private object[] OnEndGetMAddressListByTaskId(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToMonitorAddresses> retVal = ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).EndGetMAddressListByTaskId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMAddressListByTaskIdCompleted(object state) {
            if ((this.GetMAddressListByTaskIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMAddressListByTaskIdCompleted(this, new GetMAddressListByTaskIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMAddressListByTaskIdAsync(int tid) {
            this.GetMAddressListByTaskIdAsync(tid, null);
        }
        
        public void GetMAddressListByTaskIdAsync(int tid, object userState) {
            if ((this.onBeginGetMAddressListByTaskIdDelegate == null)) {
                this.onBeginGetMAddressListByTaskIdDelegate = new BeginOperationDelegate(this.OnBeginGetMAddressListByTaskId);
            }
            if ((this.onEndGetMAddressListByTaskIdDelegate == null)) {
                this.onEndGetMAddressListByTaskIdDelegate = new EndOperationDelegate(this.OnEndGetMAddressListByTaskId);
            }
            if ((this.onGetMAddressListByTaskIdCompletedDelegate == null)) {
                this.onGetMAddressListByTaskIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMAddressListByTaskIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetMAddressListByTaskIdDelegate, new object[] {
                        tid}, this.onEndGetMAddressListByTaskIdDelegate, this.onGetMAddressListByTaskIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.BeginGetMAddressCOListByTaskId(int tid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMAddressCOListByTaskId(tid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToMonitorAddresses> GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.EndGetMAddressCOListByTaskId(System.IAsyncResult result) {
            return base.Channel.EndGetMAddressCOListByTaskId(result);
        }
        
        private System.IAsyncResult OnBeginGetMAddressCOListByTaskId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int tid = ((int)(inValues[0]));
            return ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).BeginGetMAddressCOListByTaskId(tid, callback, asyncState);
        }
        
        private object[] OnEndGetMAddressCOListByTaskId(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToMonitorAddresses> retVal = ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).EndGetMAddressCOListByTaskId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMAddressCOListByTaskIdCompleted(object state) {
            if ((this.GetMAddressCOListByTaskIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMAddressCOListByTaskIdCompleted(this, new GetMAddressCOListByTaskIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMAddressCOListByTaskIdAsync(int tid) {
            this.GetMAddressCOListByTaskIdAsync(tid, null);
        }
        
        public void GetMAddressCOListByTaskIdAsync(int tid, object userState) {
            if ((this.onBeginGetMAddressCOListByTaskIdDelegate == null)) {
                this.onBeginGetMAddressCOListByTaskIdDelegate = new BeginOperationDelegate(this.OnBeginGetMAddressCOListByTaskId);
            }
            if ((this.onEndGetMAddressCOListByTaskIdDelegate == null)) {
                this.onEndGetMAddressCOListByTaskIdDelegate = new EndOperationDelegate(this.OnEndGetMAddressCOListByTaskId);
            }
            if ((this.onGetMAddressCOListByTaskIdCompletedDelegate == null)) {
                this.onGetMAddressCOListByTaskIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMAddressCOListByTaskIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetMAddressCOListByTaskIdDelegate, new object[] {
                        tid}, this.onEndGetMAddressCOListByTaskIdDelegate, this.onGetMAddressCOListByTaskIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.BeginAddTaskTime(int taskId, int timeType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddTaskTime(taskId, timeType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GPS.SilverlightMap.DMReaderSLService.ToTask GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.EndAddTaskTime(System.IAsyncResult result) {
            return base.Channel.EndAddTaskTime(result);
        }
        
        private System.IAsyncResult OnBeginAddTaskTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int taskId = ((int)(inValues[0]));
            int timeType = ((int)(inValues[1]));
            return ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).BeginAddTaskTime(taskId, timeType, callback, asyncState);
        }
        
        private object[] OnEndAddTaskTime(System.IAsyncResult result) {
            GPS.SilverlightMap.DMReaderSLService.ToTask retVal = ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).EndAddTaskTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddTaskTimeCompleted(object state) {
            if ((this.AddTaskTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddTaskTimeCompleted(this, new AddTaskTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddTaskTimeAsync(int taskId, int timeType) {
            this.AddTaskTimeAsync(taskId, timeType, null);
        }
        
        public void AddTaskTimeAsync(int taskId, int timeType, object userState) {
            if ((this.onBeginAddTaskTimeDelegate == null)) {
                this.onBeginAddTaskTimeDelegate = new BeginOperationDelegate(this.OnBeginAddTaskTime);
            }
            if ((this.onEndAddTaskTimeDelegate == null)) {
                this.onEndAddTaskTimeDelegate = new EndOperationDelegate(this.OnEndAddTaskTime);
            }
            if ((this.onAddTaskTimeCompletedDelegate == null)) {
                this.onAddTaskTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddTaskTimeCompleted);
            }
            base.InvokeAsync(this.onBeginAddTaskTimeDelegate, new object[] {
                        taskId,
                        timeType}, this.onEndAddTaskTimeDelegate, this.onAddTaskTimeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.BeginUpdateTaskObject(GPS.SilverlightMap.DMReaderSLService.ToTask toTask, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateTaskObject(toTask, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GPS.SilverlightMap.DMReaderSLService.ToTask GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.EndUpdateTaskObject(System.IAsyncResult result) {
            return base.Channel.EndUpdateTaskObject(result);
        }
        
        private System.IAsyncResult OnBeginUpdateTaskObject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GPS.SilverlightMap.DMReaderSLService.ToTask toTask = ((GPS.SilverlightMap.DMReaderSLService.ToTask)(inValues[0]));
            return ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).BeginUpdateTaskObject(toTask, callback, asyncState);
        }
        
        private object[] OnEndUpdateTaskObject(System.IAsyncResult result) {
            GPS.SilverlightMap.DMReaderSLService.ToTask retVal = ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).EndUpdateTaskObject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateTaskObjectCompleted(object state) {
            if ((this.UpdateTaskObjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateTaskObjectCompleted(this, new UpdateTaskObjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateTaskObjectAsync(GPS.SilverlightMap.DMReaderSLService.ToTask toTask) {
            this.UpdateTaskObjectAsync(toTask, null);
        }
        
        public void UpdateTaskObjectAsync(GPS.SilverlightMap.DMReaderSLService.ToTask toTask, object userState) {
            if ((this.onBeginUpdateTaskObjectDelegate == null)) {
                this.onBeginUpdateTaskObjectDelegate = new BeginOperationDelegate(this.OnBeginUpdateTaskObject);
            }
            if ((this.onEndUpdateTaskObjectDelegate == null)) {
                this.onEndUpdateTaskObjectDelegate = new EndOperationDelegate(this.OnEndUpdateTaskObject);
            }
            if ((this.onUpdateTaskObjectCompletedDelegate == null)) {
                this.onUpdateTaskObjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateTaskObjectCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateTaskObjectDelegate, new object[] {
                        toTask}, this.onEndUpdateTaskObjectDelegate, this.onUpdateTaskObjectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.BeginUpdateTask(byte[] toTask, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateTask(toTask, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.EndUpdateTask(System.IAsyncResult result) {
            return base.Channel.EndUpdateTask(result);
        }
        
        private System.IAsyncResult OnBeginUpdateTask(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] toTask = ((byte[])(inValues[0]));
            return ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).BeginUpdateTask(toTask, callback, asyncState);
        }
        
        private object[] OnEndUpdateTask(System.IAsyncResult result) {
            byte[] retVal = ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).EndUpdateTask(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateTaskCompleted(object state) {
            if ((this.UpdateTaskCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateTaskCompleted(this, new UpdateTaskCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateTaskAsync(byte[] toTask) {
            this.UpdateTaskAsync(toTask, null);
        }
        
        public void UpdateTaskAsync(byte[] toTask, object userState) {
            if ((this.onBeginUpdateTaskDelegate == null)) {
                this.onBeginUpdateTaskDelegate = new BeginOperationDelegate(this.OnBeginUpdateTask);
            }
            if ((this.onEndUpdateTaskDelegate == null)) {
                this.onEndUpdateTaskDelegate = new EndOperationDelegate(this.OnEndUpdateTask);
            }
            if ((this.onUpdateTaskCompletedDelegate == null)) {
                this.onUpdateTaskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateTaskCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateTaskDelegate, new object[] {
                        toTask}, this.onEndUpdateTaskDelegate, this.onUpdateTaskCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.BegingetUserNameByUserId(int uid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetUserNameByUserId(uid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.EndgetUserNameByUserId(System.IAsyncResult result) {
            return base.Channel.EndgetUserNameByUserId(result);
        }
        
        private System.IAsyncResult OnBegingetUserNameByUserId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int uid = ((int)(inValues[0]));
            return ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).BegingetUserNameByUserId(uid, callback, asyncState);
        }
        
        private object[] OnEndgetUserNameByUserId(System.IAsyncResult result) {
            string retVal = ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).EndgetUserNameByUserId(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetUserNameByUserIdCompleted(object state) {
            if ((this.getUserNameByUserIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getUserNameByUserIdCompleted(this, new getUserNameByUserIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getUserNameByUserIdAsync(int uid) {
            this.getUserNameByUserIdAsync(uid, null);
        }
        
        public void getUserNameByUserIdAsync(int uid, object userState) {
            if ((this.onBegingetUserNameByUserIdDelegate == null)) {
                this.onBegingetUserNameByUserIdDelegate = new BeginOperationDelegate(this.OnBegingetUserNameByUserId);
            }
            if ((this.onEndgetUserNameByUserIdDelegate == null)) {
                this.onEndgetUserNameByUserIdDelegate = new EndOperationDelegate(this.OnEndgetUserNameByUserId);
            }
            if ((this.ongetUserNameByUserIdCompletedDelegate == null)) {
                this.ongetUserNameByUserIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetUserNameByUserIdCompleted);
            }
            base.InvokeAsync(this.onBegingetUserNameByUserIdDelegate, new object[] {
                        uid}, this.onEndgetUserNameByUserIdDelegate, this.ongetUserNameByUserIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.BeginloadHistoryDotToLayerThread(string gid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginloadHistoryDotToLayerThread(gid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string GPS.SilverlightMap.DMReaderSLService.DMReaderSLService.EndloadHistoryDotToLayerThread(System.IAsyncResult result) {
            return base.Channel.EndloadHistoryDotToLayerThread(result);
        }
        
        private System.IAsyncResult OnBeginloadHistoryDotToLayerThread(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string gid = ((string)(inValues[0]));
            return ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).BeginloadHistoryDotToLayerThread(gid, callback, asyncState);
        }
        
        private object[] OnEndloadHistoryDotToLayerThread(System.IAsyncResult result) {
            string retVal = ((GPS.SilverlightMap.DMReaderSLService.DMReaderSLService)(this)).EndloadHistoryDotToLayerThread(result);
            return new object[] {
                    retVal};
        }
        
        private void OnloadHistoryDotToLayerThreadCompleted(object state) {
            if ((this.loadHistoryDotToLayerThreadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.loadHistoryDotToLayerThreadCompleted(this, new loadHistoryDotToLayerThreadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void loadHistoryDotToLayerThreadAsync(string gid) {
            this.loadHistoryDotToLayerThreadAsync(gid, null);
        }
        
        public void loadHistoryDotToLayerThreadAsync(string gid, object userState) {
            if ((this.onBeginloadHistoryDotToLayerThreadDelegate == null)) {
                this.onBeginloadHistoryDotToLayerThreadDelegate = new BeginOperationDelegate(this.OnBeginloadHistoryDotToLayerThread);
            }
            if ((this.onEndloadHistoryDotToLayerThreadDelegate == null)) {
                this.onEndloadHistoryDotToLayerThreadDelegate = new EndOperationDelegate(this.OnEndloadHistoryDotToLayerThread);
            }
            if ((this.onloadHistoryDotToLayerThreadCompletedDelegate == null)) {
                this.onloadHistoryDotToLayerThreadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnloadHistoryDotToLayerThreadCompleted);
            }
            base.InvokeAsync(this.onBeginloadHistoryDotToLayerThreadDelegate, new object[] {
                        gid}, this.onEndloadHistoryDotToLayerThreadDelegate, this.onloadHistoryDotToLayerThreadCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override GPS.SilverlightMap.DMReaderSLService.DMReaderSLService CreateChannel() {
            return new DMReaderSLServiceClientChannel(this);
        }
        
        private class DMReaderSLServiceClientChannel : ChannelBase<GPS.SilverlightMap.DMReaderSLService.DMReaderSLService>, GPS.SilverlightMap.DMReaderSLService.DMReaderSLService {
            
            public DMReaderSLServiceClientChannel(System.ServiceModel.ClientBase<GPS.SilverlightMap.DMReaderSLService.DMReaderSLService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetDistributionMapsById(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetDistributionMapsById", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndGetDistributionMapsById(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("GetDistributionMapsById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDistributionMapsObjectById(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetDistributionMapsObjectById", _args, callback, asyncState);
                return _result;
            }
            
            public GPS.SilverlightMap.DMReaderSLService.ToDistributionMap EndGetDistributionMapsObjectById(System.IAsyncResult result) {
                object[] _args = new object[0];
                GPS.SilverlightMap.DMReaderSLService.ToDistributionMap _result = ((GPS.SilverlightMap.DMReaderSLService.ToDistributionMap)(base.EndInvoke("GetDistributionMapsObjectById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomAreaByBox(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCustomAreaByBox", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndGetCustomAreaByBox(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("GetCustomAreaByBox", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomAreaObjectByBox(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCustomAreaObjectByBox", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToArea> EndGetCustomAreaObjectByBox(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToArea> _result = ((System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToArea>)(base.EndInvoke("GetCustomAreaObjectByBox", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTask(int Id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Id;
                System.IAsyncResult _result = base.BeginInvoke("GetTask", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndGetTask(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("GetTask", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTaskObject(int Id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Id;
                System.IAsyncResult _result = base.BeginInvoke("GetTaskObject", _args, callback, asyncState);
                return _result;
            }
            
            public GPS.SilverlightMap.DMReaderSLService.ToTask EndGetTaskObject(System.IAsyncResult result) {
                object[] _args = new object[0];
                GPS.SilverlightMap.DMReaderSLService.ToTask _result = ((GPS.SilverlightMap.DMReaderSLService.ToTask)(base.EndInvoke("GetTaskObject", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGtuUserNameDic(int Id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Id;
                System.IAsyncResult _result = base.BeginInvoke("GetGtuUserNameDic", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, string> EndGetGtuUserNameDic(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, string> _result = ((System.Collections.Generic.Dictionary<string, string>)(base.EndInvoke("GetGtuUserNameDic", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGtuInfoListByTaskId(int tid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = tid;
                System.IAsyncResult _result = base.BeginInvoke("GetGtuInfoListByTaskId", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToTaskgtuinfomapping> EndGetGtuInfoListByTaskId(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToTaskgtuinfomapping> _result = ((System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToTaskgtuinfomapping>)(base.EndInvoke("GetGtuInfoListByTaskId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMAddressListByTaskId(int tid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = tid;
                System.IAsyncResult _result = base.BeginInvoke("GetMAddressListByTaskId", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToMonitorAddresses> EndGetMAddressListByTaskId(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToMonitorAddresses> _result = ((System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToMonitorAddresses>)(base.EndInvoke("GetMAddressListByTaskId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMAddressCOListByTaskId(int tid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = tid;
                System.IAsyncResult _result = base.BeginInvoke("GetMAddressCOListByTaskId", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToMonitorAddresses> EndGetMAddressCOListByTaskId(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToMonitorAddresses> _result = ((System.Collections.ObjectModel.ObservableCollection<GPS.SilverlightMap.DMReaderSLService.ToMonitorAddresses>)(base.EndInvoke("GetMAddressCOListByTaskId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddTaskTime(int taskId, int timeType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = taskId;
                _args[1] = timeType;
                System.IAsyncResult _result = base.BeginInvoke("AddTaskTime", _args, callback, asyncState);
                return _result;
            }
            
            public GPS.SilverlightMap.DMReaderSLService.ToTask EndAddTaskTime(System.IAsyncResult result) {
                object[] _args = new object[0];
                GPS.SilverlightMap.DMReaderSLService.ToTask _result = ((GPS.SilverlightMap.DMReaderSLService.ToTask)(base.EndInvoke("AddTaskTime", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateTaskObject(GPS.SilverlightMap.DMReaderSLService.ToTask toTask, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = toTask;
                System.IAsyncResult _result = base.BeginInvoke("UpdateTaskObject", _args, callback, asyncState);
                return _result;
            }
            
            public GPS.SilverlightMap.DMReaderSLService.ToTask EndUpdateTaskObject(System.IAsyncResult result) {
                object[] _args = new object[0];
                GPS.SilverlightMap.DMReaderSLService.ToTask _result = ((GPS.SilverlightMap.DMReaderSLService.ToTask)(base.EndInvoke("UpdateTaskObject", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateTask(byte[] toTask, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = toTask;
                System.IAsyncResult _result = base.BeginInvoke("UpdateTask", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndUpdateTask(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("UpdateTask", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetUserNameByUserId(int uid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = uid;
                System.IAsyncResult _result = base.BeginInvoke("getUserNameByUserId", _args, callback, asyncState);
                return _result;
            }
            
            public string EndgetUserNameByUserId(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("getUserNameByUserId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginloadHistoryDotToLayerThread(string gid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = gid;
                System.IAsyncResult _result = base.BeginInvoke("loadHistoryDotToLayerThread", _args, callback, asyncState);
                return _result;
            }
            
            public string EndloadHistoryDotToLayerThread(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("loadHistoryDotToLayerThread", _args, result)));
                return _result;
            }
        }
    }
}
