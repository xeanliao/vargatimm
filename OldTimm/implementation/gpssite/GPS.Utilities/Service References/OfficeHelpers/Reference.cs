//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GPS.Utilities.OfficeHelpers {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AreaRecord", Namespace="http://schemas.datacontract.org/2004/07/GPSOfficeHelper")]
    [System.SerializableAttribute()]
    public partial class AreaRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PenetrationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Penetration {
            get {
                return this.PenetrationField;
            }
            set {
                if ((object.ReferenceEquals(this.PenetrationField, value) != true)) {
                    this.PenetrationField = value;
                    this.RaisePropertyChanged("Penetration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Total {
            get {
                return this.TotalField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalField, value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NdAddressRecord", Namespace="http://schemas.datacontract.org/2004/07/GPSOfficeHelper")]
    [System.SerializableAttribute()]
    public partial class NdAddressRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GeofenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Geofence {
            get {
                return this.GeofenceField;
            }
            set {
                if ((this.GeofenceField.Equals(value) != true)) {
                    this.GeofenceField = value;
                    this.RaisePropertyChanged("Geofence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OfficeHelpers.IExcelHelper")]
    public interface IExcelHelper {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExcelHelper/ReadAreaRecord", ReplyAction="http://tempuri.org/IExcelHelper/ReadAreaRecordResponse")]
        GPS.Utilities.OfficeHelpers.AreaRecord[] ReadAreaRecord(string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExcelHelper/WriteAreaRecord", ReplyAction="http://tempuri.org/IExcelHelper/WriteAreaRecordResponse")]
        bool WriteAreaRecord(string fileName, string templateFile, GPS.Utilities.OfficeHelpers.AreaRecord[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExcelHelper/ReadNdAddressRecord", ReplyAction="http://tempuri.org/IExcelHelper/ReadNdAddressRecordResponse")]
        GPS.Utilities.OfficeHelpers.NdAddressRecord[] ReadNdAddressRecord(string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExcelHelper/TestHello", ReplyAction="http://tempuri.org/IExcelHelper/TestHelloResponse")]
        string TestHello(string text);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExcelHelperChannel : GPS.Utilities.OfficeHelpers.IExcelHelper, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExcelHelperClient : System.ServiceModel.ClientBase<GPS.Utilities.OfficeHelpers.IExcelHelper>, GPS.Utilities.OfficeHelpers.IExcelHelper {
        
        public ExcelHelperClient() {
        }
        
        public ExcelHelperClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExcelHelperClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExcelHelperClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExcelHelperClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GPS.Utilities.OfficeHelpers.AreaRecord[] ReadAreaRecord(string fileName) {
            return base.Channel.ReadAreaRecord(fileName);
        }
        
        public bool WriteAreaRecord(string fileName, string templateFile, GPS.Utilities.OfficeHelpers.AreaRecord[] records) {
            return base.Channel.WriteAreaRecord(fileName, templateFile, records);
        }
        
        public GPS.Utilities.OfficeHelpers.NdAddressRecord[] ReadNdAddressRecord(string fileName) {
            return base.Channel.ReadNdAddressRecord(fileName);
        }
        
        public string TestHello(string text) {
            return base.Channel.TestHello(text);
        }
    }
}
